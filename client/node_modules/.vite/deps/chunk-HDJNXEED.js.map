{
  "version": 3,
  "sources": ["../../@thirdweb-dev/sdk/node_modules/eventemitter3/index.js", "../../cross-fetch/dist/browser-ponyfill.js", "../../@thirdweb-dev/sdk/node_modules/base-x/src/index.js", "../../@thirdweb-dev/sdk/node_modules/bs58/index.js", "../../base64-js/index.js", "../../ieee754/index.js", "../../buffer/index.js", "../../buffer-reverse/index.js", "../../crypto-js/core.js", "../../crypto-js/sha256.js", "../../treeify/treeify.js", "../../crypto-js/x64-core.js", "../../crypto-js/lib-typedarrays.js", "../../crypto-js/enc-utf16.js", "../../crypto-js/enc-base64.js", "../../crypto-js/md5.js", "../../crypto-js/sha1.js", "../../crypto-js/sha224.js", "../../crypto-js/sha512.js", "../../crypto-js/sha384.js", "../../crypto-js/sha3.js", "../../crypto-js/ripemd160.js", "../../crypto-js/hmac.js", "../../crypto-js/pbkdf2.js", "../../crypto-js/evpkdf.js", "../../crypto-js/cipher-core.js", "../../crypto-js/mode-cfb.js", "../../crypto-js/mode-ctr.js", "../../crypto-js/mode-ctr-gladman.js", "../../crypto-js/mode-ofb.js", "../../crypto-js/mode-ecb.js", "../../crypto-js/pad-ansix923.js", "../../crypto-js/pad-iso10126.js", "../../crypto-js/pad-iso97971.js", "../../crypto-js/pad-zeropadding.js", "../../crypto-js/pad-nopadding.js", "../../crypto-js/format-hex.js", "../../crypto-js/aes.js", "../../crypto-js/tripledes.js", "../../crypto-js/rc4.js", "../../crypto-js/rabbit.js", "../../crypto-js/rabbit-legacy.js", "../../crypto-js/index.js", "../../merkletreejs/dist/Base.js", "../../merkletreejs/dist/MerkleTree.js", "../../merkletreejs/dist/MerkleMountainRange.js", "../../merkletreejs/dist/index.js", "../../fast-deep-equal/index.js", "../../form-data/lib/browser.js", "../../zod/lib/index.mjs", "../../@thirdweb-dev/sdk/dist/QueryParams-ac0149c6.esm.js", "../../@thirdweb-dev/sdk/dist/defineProperty-e24c82ea.esm.js", "../../tiny-invariant/dist/esm/tiny-invariant.js", "../../@thirdweb-dev/sdk/node_modules/eventemitter3/index.mjs", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/rng.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/regex.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/validate.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/stringify.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/parse.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/v35.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/md5.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/v3.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/native.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/v4.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/sha1.js", "../../@thirdweb-dev/sdk/node_modules/uuid/dist/esm-browser/v5.js", "../../@thirdweb-dev/storage/dist/thirdweb-dev-storage.esm.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/rng.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/regex.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/validate.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/stringify.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/parse.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/v35.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/md5.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/v3.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/native.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/sha1.js", "../../@thirdweb-dev/storage/node_modules/uuid/dist/esm-browser/v5.js", "../../@thirdweb-dev/sdk/dist/thirdweb-checkout-607fc720.esm.js"],
  "sourcesContent": ["'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n", "'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (source instanceof Uint8Array) {\n    } else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength)\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source)\n    }\n    if (!(source instanceof Uint8Array)) { throw new TypeError('Expected Uint8Array') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return new Uint8Array() }\n    var psz = 0\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = new Uint8Array(zeroes + (size - it4))\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n", "const basex = require('base-x')\nconst ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n", "'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "module.exports = function reverse (src) {\n  var buffer = new Buffer(src.length)\n\n  for (var i = 0, j = src.length - 1; i <= j; ++i, --j) {\n    buffer[i] = src[j]\n    buffer[j] = src[i]\n  }\n\n  return buffer\n}\n", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory();\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory();\n\t}\n}(this, function () {\n\n\t/**\n\t * CryptoJS core components.\n\t */\n\tvar CryptoJS = CryptoJS || (function (Math, undefined) {\n\t    /*\n\t     * Local polyfil of Object.create\n\t     */\n\t    var create = Object.create || (function () {\n\t        function F() {};\n\n\t        return function (obj) {\n\t            var subtype;\n\n\t            F.prototype = obj;\n\n\t            subtype = new F();\n\n\t            F.prototype = null;\n\n\t            return subtype;\n\t        };\n\t    }())\n\n\t    /**\n\t     * CryptoJS namespace.\n\t     */\n\t    var C = {};\n\n\t    /**\n\t     * Library namespace.\n\t     */\n\t    var C_lib = C.lib = {};\n\n\t    /**\n\t     * Base object for prototypal inheritance.\n\t     */\n\t    var Base = C_lib.Base = (function () {\n\n\n\t        return {\n\t            /**\n\t             * Creates a new object that inherits from this object.\n\t             *\n\t             * @param {Object} overrides Properties to copy into the new object.\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         field: 'value',\n\t             *\n\t             *         method: function () {\n\t             *         }\n\t             *     });\n\t             */\n\t            extend: function (overrides) {\n\t                // Spawn\n\t                var subtype = create(this);\n\n\t                // Augment\n\t                if (overrides) {\n\t                    subtype.mixIn(overrides);\n\t                }\n\n\t                // Create default initializer\n\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {\n\t                    subtype.init = function () {\n\t                        subtype.$super.init.apply(this, arguments);\n\t                    };\n\t                }\n\n\t                // Initializer's prototype is the subtype object\n\t                subtype.init.prototype = subtype;\n\n\t                // Reference supertype\n\t                subtype.$super = this;\n\n\t                return subtype;\n\t            },\n\n\t            /**\n\t             * Extends this object and runs the init method.\n\t             * Arguments to create() will be passed to init().\n\t             *\n\t             * @return {Object} The new object.\n\t             *\n\t             * @static\n\t             *\n\t             * @example\n\t             *\n\t             *     var instance = MyType.create();\n\t             */\n\t            create: function () {\n\t                var instance = this.extend();\n\t                instance.init.apply(instance, arguments);\n\n\t                return instance;\n\t            },\n\n\t            /**\n\t             * Initializes a newly created object.\n\t             * Override this method to add some logic when your objects are created.\n\t             *\n\t             * @example\n\t             *\n\t             *     var MyType = CryptoJS.lib.Base.extend({\n\t             *         init: function () {\n\t             *             // ...\n\t             *         }\n\t             *     });\n\t             */\n\t            init: function () {\n\t            },\n\n\t            /**\n\t             * Copies properties into this object.\n\t             *\n\t             * @param {Object} properties The properties to mix in.\n\t             *\n\t             * @example\n\t             *\n\t             *     MyType.mixIn({\n\t             *         field: 'value'\n\t             *     });\n\t             */\n\t            mixIn: function (properties) {\n\t                for (var propertyName in properties) {\n\t                    if (properties.hasOwnProperty(propertyName)) {\n\t                        this[propertyName] = properties[propertyName];\n\t                    }\n\t                }\n\n\t                // IE won't copy toString using the loop above\n\t                if (properties.hasOwnProperty('toString')) {\n\t                    this.toString = properties.toString;\n\t                }\n\t            },\n\n\t            /**\n\t             * Creates a copy of this object.\n\t             *\n\t             * @return {Object} The clone.\n\t             *\n\t             * @example\n\t             *\n\t             *     var clone = instance.clone();\n\t             */\n\t            clone: function () {\n\t                return this.init.prototype.extend(this);\n\t            }\n\t        };\n\t    }());\n\n\t    /**\n\t     * An array of 32-bit words.\n\t     *\n\t     * @property {Array} words The array of 32-bit words.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var WordArray = C_lib.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of 32-bit words.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.create();\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 4;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this word array to a string.\n\t         *\n\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n\t         *\n\t         * @return {string} The stringified word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = wordArray + '';\n\t         *     var string = wordArray.toString();\n\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n\t         */\n\t        toString: function (encoder) {\n\t            return (encoder || Hex).stringify(this);\n\t        },\n\n\t        /**\n\t         * Concatenates a word array to this word array.\n\t         *\n\t         * @param {WordArray} wordArray The word array to append.\n\t         *\n\t         * @return {WordArray} This word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray1.concat(wordArray2);\n\t         */\n\t        concat: function (wordArray) {\n\t            // Shortcuts\n\t            var thisWords = this.words;\n\t            var thatWords = wordArray.words;\n\t            var thisSigBytes = this.sigBytes;\n\t            var thatSigBytes = wordArray.sigBytes;\n\n\t            // Clamp excess bits\n\t            this.clamp();\n\n\t            // Concat\n\t            if (thisSigBytes % 4) {\n\t                // Copy one byte at a time\n\t                for (var i = 0; i < thatSigBytes; i++) {\n\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n\t                }\n\t            } else {\n\t                // Copy one word at a time\n\t                for (var i = 0; i < thatSigBytes; i += 4) {\n\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n\t                }\n\t            }\n\t            this.sigBytes += thatSigBytes;\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Removes insignificant bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     wordArray.clamp();\n\t         */\n\t        clamp: function () {\n\t            // Shortcuts\n\t            var words = this.words;\n\t            var sigBytes = this.sigBytes;\n\n\t            // Clamp\n\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n\t            words.length = Math.ceil(sigBytes / 4);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = wordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone.words = this.words.slice(0);\n\n\t            return clone;\n\t        },\n\n\t        /**\n\t         * Creates a word array filled with random bytes.\n\t         *\n\t         * @param {number} nBytes The number of random bytes to generate.\n\t         *\n\t         * @return {WordArray} The random word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);\n\t         */\n\t        random: function (nBytes) {\n\t            var words = [];\n\n\t            var r = (function (m_w) {\n\t                var m_w = m_w;\n\t                var m_z = 0x3ade68b1;\n\t                var mask = 0xffffffff;\n\n\t                return function () {\n\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;\n\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;\n\t                    var result = ((m_z << 0x10) + m_w) & mask;\n\t                    result /= 0x100000000;\n\t                    result += 0.5;\n\t                    return result * (Math.random() > .5 ? 1 : -1);\n\t                }\n\t            });\n\n\t            for (var i = 0, rcache; i < nBytes; i += 4) {\n\t                var _r = r((rcache || Math.random()) * 0x100000000);\n\n\t                rcache = _r() * 0x3ade67b7;\n\t                words.push((_r() * 0x100000000) | 0);\n\t            }\n\n\t            return new WordArray.init(words, nBytes);\n\t        }\n\t    });\n\n\t    /**\n\t     * Encoder namespace.\n\t     */\n\t    var C_enc = C.enc = {};\n\n\t    /**\n\t     * Hex encoding strategy.\n\t     */\n\t    var Hex = C_enc.Hex = {\n\t        /**\n\t         * Converts a word array to a hex string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The hex string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var hexChars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                hexChars.push((bite >>> 4).toString(16));\n\t                hexChars.push((bite & 0x0f).toString(16));\n\t            }\n\n\t            return hexChars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a hex string to a word array.\n\t         *\n\t         * @param {string} hexStr The hex string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n\t         */\n\t        parse: function (hexStr) {\n\t            // Shortcut\n\t            var hexStrLength = hexStr.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < hexStrLength; i += 2) {\n\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n\t            }\n\n\t            return new WordArray.init(words, hexStrLength / 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * Latin1 encoding strategy.\n\t     */\n\t    var Latin1 = C_enc.Latin1 = {\n\t        /**\n\t         * Converts a word array to a Latin1 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Latin1 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var latin1Chars = [];\n\t            for (var i = 0; i < sigBytes; i++) {\n\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n\t                latin1Chars.push(String.fromCharCode(bite));\n\t            }\n\n\t            return latin1Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Latin1 string to a word array.\n\t         *\n\t         * @param {string} latin1Str The Latin1 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n\t         */\n\t        parse: function (latin1Str) {\n\t            // Shortcut\n\t            var latin1StrLength = latin1Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < latin1StrLength; i++) {\n\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n\t            }\n\n\t            return new WordArray.init(words, latin1StrLength);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-8 encoding strategy.\n\t     */\n\t    var Utf8 = C_enc.Utf8 = {\n\t        /**\n\t         * Converts a word array to a UTF-8 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-8 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            try {\n\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n\t            } catch (e) {\n\t                throw new Error('Malformed UTF-8 data');\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts a UTF-8 string to a word array.\n\t         *\n\t         * @param {string} utf8Str The UTF-8 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n\t         */\n\t        parse: function (utf8Str) {\n\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract buffered block algorithm template.\n\t     *\n\t     * The property blockSize must be implemented in a concrete subtype.\n\t     *\n\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0\n\t     */\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({\n\t        /**\n\t         * Resets this block algorithm's data buffer to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm.reset();\n\t         */\n\t        reset: function () {\n\t            // Initial values\n\t            this._data = new WordArray.init();\n\t            this._nDataBytes = 0;\n\t        },\n\n\t        /**\n\t         * Adds new data to this block algorithm's buffer.\n\t         *\n\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.\n\t         *\n\t         * @example\n\t         *\n\t         *     bufferedBlockAlgorithm._append('data');\n\t         *     bufferedBlockAlgorithm._append(wordArray);\n\t         */\n\t        _append: function (data) {\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof data == 'string') {\n\t                data = Utf8.parse(data);\n\t            }\n\n\t            // Append\n\t            this._data.concat(data);\n\t            this._nDataBytes += data.sigBytes;\n\t        },\n\n\t        /**\n\t         * Processes available data blocks.\n\t         *\n\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n\t         *\n\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n\t         *\n\t         * @return {WordArray} The processed data.\n\t         *\n\t         * @example\n\t         *\n\t         *     var processedData = bufferedBlockAlgorithm._process();\n\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n\t         */\n\t        _process: function (doFlush) {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var dataSigBytes = data.sigBytes;\n\t            var blockSize = this.blockSize;\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count blocks ready\n\t            var nBlocksReady = dataSigBytes / blockSizeBytes;\n\t            if (doFlush) {\n\t                // Round up to include partial blocks\n\t                nBlocksReady = Math.ceil(nBlocksReady);\n\t            } else {\n\t                // Round down to include only full blocks,\n\t                // less the number of blocks that must remain in the buffer\n\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n\t            }\n\n\t            // Count words ready\n\t            var nWordsReady = nBlocksReady * blockSize;\n\n\t            // Count bytes ready\n\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n\t            // Process blocks\n\t            if (nWordsReady) {\n\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {\n\t                    // Perform concrete-algorithm logic\n\t                    this._doProcessBlock(dataWords, offset);\n\t                }\n\n\t                // Remove processed words\n\t                var processedWords = dataWords.splice(0, nWordsReady);\n\t                data.sigBytes -= nBytesReady;\n\t            }\n\n\t            // Return processed words\n\t            return new WordArray.init(processedWords, nBytesReady);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this object.\n\t         *\n\t         * @return {Object} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = bufferedBlockAlgorithm.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\t            clone._data = this._data.clone();\n\n\t            return clone;\n\t        },\n\n\t        _minBufferSize: 0\n\t    });\n\n\t    /**\n\t     * Abstract hasher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n\t     */\n\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Initializes a newly created hasher.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hasher = CryptoJS.algo.SHA256.create();\n\t         */\n\t        init: function (cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this hasher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-hasher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Updates this hasher with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {Hasher} This hasher.\n\t         *\n\t         * @example\n\t         *\n\t         *     hasher.update('message');\n\t         *     hasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            // Append\n\t            this._append(messageUpdate);\n\n\t            // Update the hash\n\t            this._process();\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the hash computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The hash.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hash = hasher.finalize();\n\t         *     var hash = hasher.finalize('message');\n\t         *     var hash = hasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Final message update\n\t            if (messageUpdate) {\n\t                this._append(messageUpdate);\n\t            }\n\n\t            // Perform concrete-hasher logic\n\t            var hash = this._doFinalize();\n\n\t            return hash;\n\t        },\n\n\t        blockSize: 512/32,\n\n\t        /**\n\t         * Creates a shortcut function to a hasher's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to create a helper for.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHelper: function (hasher) {\n\t            return function (message, cfg) {\n\t                return new hasher.init(cfg).finalize(message);\n\t            };\n\t        },\n\n\t        /**\n\t         * Creates a shortcut function to the HMAC's object interface.\n\t         *\n\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.\n\t         *\n\t         * @return {Function} The shortcut function.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n\t         */\n\t        _createHmacHelper: function (hasher) {\n\t            return function (message, key) {\n\t                return new C_algo.HMAC.init(hasher, key).finalize(message);\n\t            };\n\t        }\n\t    });\n\n\t    /**\n\t     * Algorithm namespace.\n\t     */\n\t    var C_algo = C.algo = {};\n\n\t    return C;\n\t}(Math));\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Initialization and round constants tables\n\t    var H = [];\n\t    var K = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        function isPrime(n) {\n\t            var sqrtN = Math.sqrt(n);\n\t            for (var factor = 2; factor <= sqrtN; factor++) {\n\t                if (!(n % factor)) {\n\t                    return false;\n\t                }\n\t            }\n\n\t            return true;\n\t        }\n\n\t        function getFractionalBits(n) {\n\t            return ((n - (n | 0)) * 0x100000000) | 0;\n\t        }\n\n\t        var n = 2;\n\t        var nPrime = 0;\n\t        while (nPrime < 64) {\n\t            if (isPrime(n)) {\n\t                if (nPrime < 8) {\n\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));\n\t                }\n\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));\n\n\t                nPrime++;\n\t            }\n\n\t            n++;\n\t        }\n\t    }());\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-256 hash algorithm.\n\t     */\n\t    var SHA256 = C_algo.SHA256 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init(H.slice(0));\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\t            var f = H[5];\n\t            var g = H[6];\n\t            var h = H[7];\n\n\t            // Computation\n\t            for (var i = 0; i < 64; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var gamma0x = W[i - 15];\n\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^\n\t                                   (gamma0x >>> 3);\n\n\t                    var gamma1x = W[i - 2];\n\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^\n\t                                   (gamma1x >>> 10);\n\n\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n\t                }\n\n\t                var ch  = (e & f) ^ (~e & g);\n\t                var maj = (a & b) ^ (a & c) ^ (b & c);\n\n\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n\t                var t1 = h + sigma1 + ch + K[i] + W[i];\n\t                var t2 = sigma0 + maj;\n\n\t                h = g;\n\t                g = f;\n\t                f = e;\n\t                e = (d + t1) | 0;\n\t                d = c;\n\t                c = b;\n\t                b = a;\n\t                a = (t1 + t2) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t            H[5] = (H[5] + f) | 0;\n\t            H[6] = (H[6] + g) | 0;\n\t            H[7] = (H[7] + h) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA256('message');\n\t     *     var hash = CryptoJS.SHA256(wordArray);\n\t     */\n\t    C.SHA256 = Hasher._createHelper(SHA256);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA256(message, key);\n\t     */\n\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA256;\n\n}));", "//     treeify.js\n//     Luke Plaster <notatestuser@gmail.com>\n//     https://github.com/notatestuser/treeify.js\n\n// do the universal module definition dance\n(function (root, factory) {\n\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    root.treeify = factory();\n  }\n\n}(this, function() {\n\n  function makePrefix(key, last) {\n    var str = (last ? '\u2514' : '\u251C');\n    if (key) {\n      str += '\u2500 ';\n    } else {\n      str += '\u2500\u2500\u2510';\n    }\n    return str;\n  }\n\n  function filterKeys(obj, hideFunctions) {\n    var keys = [];\n    for (var branch in obj) {\n      // always exclude anything in the object's prototype\n      if (!obj.hasOwnProperty(branch)) {\n        continue;\n      }\n      // ... and hide any keys mapped to functions if we've been told to\n      if (hideFunctions && ((typeof obj[branch])===\"function\")) {\n        continue;\n      }\n      keys.push(branch);\n    }\n    return keys;\n  }\n\n  function growBranch(key, root, last, lastStates, showValues, hideFunctions, callback) {\n    var line = '', index = 0, lastKey, circular, lastStatesCopy = lastStates.slice(0);\n\n    if (lastStatesCopy.push([ root, last ]) && lastStates.length > 0) {\n      // based on the \"was last element\" states of whatever we're nested within,\n      // we need to append either blankness or a branch to our line\n      lastStates.forEach(function(lastState, idx) {\n        if (idx > 0) {\n          line += (lastState[1] ? ' ' : '\u2502') + '  ';\n        }\n        if ( ! circular && lastState[0] === root) {\n          circular = true;\n        }\n      });\n\n      // the prefix varies based on whether the key contains something to show and\n      // whether we're dealing with the last element in this collection\n      line += makePrefix(key, last) + key;\n\n      // append values and the circular reference indicator\n      showValues && (typeof root !== 'object' || root instanceof Date) && (line += ': ' + root);\n      circular && (line += ' (circular ref.)');\n\n      callback(line);\n    }\n\n    // can we descend into the next item?\n    if ( ! circular && typeof root === 'object') {\n      var keys = filterKeys(root, hideFunctions);\n      keys.forEach(function(branch){\n        // the last key is always printed with a different prefix, so we'll need to know if we have it\n        lastKey = ++index === keys.length;\n\n        // hold your breath for recursive action\n        growBranch(branch, root[branch], lastKey, lastStatesCopy, showValues, hideFunctions, callback);\n      });\n    }\n  };\n\n  // --------------------\n\n  var Treeify = {};\n\n  // Treeify.asLines\n  // --------------------\n  // Outputs the tree line-by-line, calling the lineCallback when each one is available.\n\n  Treeify.asLines = function(obj, showValues, hideFunctions, lineCallback) {\n    /* hideFunctions and lineCallback are curried, which means we don't break apps using the older form */\n    var hideFunctionsArg = typeof hideFunctions !== 'function' ? hideFunctions : false;\n    growBranch('.', obj, false, [], showValues, hideFunctionsArg, lineCallback || hideFunctions);\n  };\n\n  // Treeify.asTree\n  // --------------------\n  // Outputs the entire tree, returning it as a string with line breaks.\n\n  Treeify.asTree = function(obj, showValues, hideFunctions) {\n    var tree = '';\n    growBranch('.', obj, false, [], showValues, hideFunctions, function(line) {\n      tree += line + '\\n';\n    });\n    return tree;\n  };\n\n  // --------------------\n\n  return Treeify;\n\n}));\n", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var X32WordArray = C_lib.WordArray;\n\n\t    /**\n\t     * x64 namespace.\n\t     */\n\t    var C_x64 = C.x64 = {};\n\n\t    /**\n\t     * A 64-bit word.\n\t     */\n\t    var X64Word = C_x64.Word = Base.extend({\n\t        /**\n\t         * Initializes a newly created 64-bit word.\n\t         *\n\t         * @param {number} high The high 32 bits.\n\t         * @param {number} low The low 32 bits.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);\n\t         */\n\t        init: function (high, low) {\n\t            this.high = high;\n\t            this.low = low;\n\t        }\n\n\t        /**\n\t         * Bitwise NOTs this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after negating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var negated = x64Word.not();\n\t         */\n\t        // not: function () {\n\t            // var high = ~this.high;\n\t            // var low = ~this.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ANDs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to AND with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ANDing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var anded = x64Word.and(anotherX64Word);\n\t         */\n\t        // and: function (word) {\n\t            // var high = this.high & word.high;\n\t            // var low = this.low & word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise ORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to OR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after ORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var ored = x64Word.or(anotherX64Word);\n\t         */\n\t        // or: function (word) {\n\t            // var high = this.high | word.high;\n\t            // var low = this.low | word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Bitwise XORs this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to XOR with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after XORing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var xored = x64Word.xor(anotherX64Word);\n\t         */\n\t        // xor: function (word) {\n\t            // var high = this.high ^ word.high;\n\t            // var low = this.low ^ word.low;\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftL(25);\n\t         */\n\t        // shiftL: function (n) {\n\t            // if (n < 32) {\n\t                // var high = (this.high << n) | (this.low >>> (32 - n));\n\t                // var low = this.low << n;\n\t            // } else {\n\t                // var high = this.low << (n - 32);\n\t                // var low = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Shifts this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to shift.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after shifting.\n\t         *\n\t         * @example\n\t         *\n\t         *     var shifted = x64Word.shiftR(7);\n\t         */\n\t        // shiftR: function (n) {\n\t            // if (n < 32) {\n\t                // var low = (this.low >>> n) | (this.high << (32 - n));\n\t                // var high = this.high >>> n;\n\t            // } else {\n\t                // var low = this.high >>> (n - 32);\n\t                // var high = 0;\n\t            // }\n\n\t            // return X64Word.create(high, low);\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the left.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotL(25);\n\t         */\n\t        // rotL: function (n) {\n\t            // return this.shiftL(n).or(this.shiftR(64 - n));\n\t        // },\n\n\t        /**\n\t         * Rotates this word n bits to the right.\n\t         *\n\t         * @param {number} n The number of bits to rotate.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after rotating.\n\t         *\n\t         * @example\n\t         *\n\t         *     var rotated = x64Word.rotR(7);\n\t         */\n\t        // rotR: function (n) {\n\t            // return this.shiftR(n).or(this.shiftL(64 - n));\n\t        // },\n\n\t        /**\n\t         * Adds this word with the passed word.\n\t         *\n\t         * @param {X64Word} word The x64-Word to add with this word.\n\t         *\n\t         * @return {X64Word} A new x64-Word object after adding.\n\t         *\n\t         * @example\n\t         *\n\t         *     var added = x64Word.add(anotherX64Word);\n\t         */\n\t        // add: function (word) {\n\t            // var low = (this.low + word.low) | 0;\n\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;\n\t            // var high = (this.high + word.high + carry) | 0;\n\n\t            // return X64Word.create(high, low);\n\t        // }\n\t    });\n\n\t    /**\n\t     * An array of 64-bit words.\n\t     *\n\t     * @property {Array} words The array of CryptoJS.x64.Word objects.\n\t     * @property {number} sigBytes The number of significant bytes in this word array.\n\t     */\n\t    var X64WordArray = C_x64.WordArray = Base.extend({\n\t        /**\n\t         * Initializes a newly created word array.\n\t         *\n\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.\n\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create();\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ]);\n\t         *\n\t         *     var wordArray = CryptoJS.x64.WordArray.create([\n\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),\n\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)\n\t         *     ], 10);\n\t         */\n\t        init: function (words, sigBytes) {\n\t            words = this.words = words || [];\n\n\t            if (sigBytes != undefined) {\n\t                this.sigBytes = sigBytes;\n\t            } else {\n\t                this.sigBytes = words.length * 8;\n\t            }\n\t        },\n\n\t        /**\n\t         * Converts this 64-bit word array to a 32-bit word array.\n\t         *\n\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.\n\t         *\n\t         * @example\n\t         *\n\t         *     var x32WordArray = x64WordArray.toX32();\n\t         */\n\t        toX32: function () {\n\t            // Shortcuts\n\t            var x64Words = this.words;\n\t            var x64WordsLength = x64Words.length;\n\n\t            // Convert\n\t            var x32Words = [];\n\t            for (var i = 0; i < x64WordsLength; i++) {\n\t                var x64Word = x64Words[i];\n\t                x32Words.push(x64Word.high);\n\t                x32Words.push(x64Word.low);\n\t            }\n\n\t            return X32WordArray.create(x32Words, this.sigBytes);\n\t        },\n\n\t        /**\n\t         * Creates a copy of this word array.\n\t         *\n\t         * @return {X64WordArray} The clone.\n\t         *\n\t         * @example\n\t         *\n\t         *     var clone = x64WordArray.clone();\n\t         */\n\t        clone: function () {\n\t            var clone = Base.clone.call(this);\n\n\t            // Clone \"words\" array\n\t            var words = clone.words = this.words.slice(0);\n\n\t            // Clone each X64Word object\n\t            var wordsLength = words.length;\n\t            for (var i = 0; i < wordsLength; i++) {\n\t                words[i] = words[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\t}());\n\n\n\treturn CryptoJS;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Check if typed arrays are supported\n\t    if (typeof ArrayBuffer != 'function') {\n\t        return;\n\t    }\n\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\n\t    // Reference original init\n\t    var superInit = WordArray.init;\n\n\t    // Augment WordArray.init to handle typed arrays\n\t    var subInit = WordArray.init = function (typedArray) {\n\t        // Convert buffers to uint8\n\t        if (typedArray instanceof ArrayBuffer) {\n\t            typedArray = new Uint8Array(typedArray);\n\t        }\n\n\t        // Convert other array views to uint8\n\t        if (\n\t            typedArray instanceof Int8Array ||\n\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||\n\t            typedArray instanceof Int16Array ||\n\t            typedArray instanceof Uint16Array ||\n\t            typedArray instanceof Int32Array ||\n\t            typedArray instanceof Uint32Array ||\n\t            typedArray instanceof Float32Array ||\n\t            typedArray instanceof Float64Array\n\t        ) {\n\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n\t        }\n\n\t        // Handle Uint8Array\n\t        if (typedArray instanceof Uint8Array) {\n\t            // Shortcut\n\t            var typedArrayByteLength = typedArray.byteLength;\n\n\t            // Extract bytes\n\t            var words = [];\n\t            for (var i = 0; i < typedArrayByteLength; i++) {\n\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n\t            }\n\n\t            // Initialize this word array\n\t            superInit.call(this, words, typedArrayByteLength);\n\t        } else {\n\t            // Else call normal init\n\t            superInit.apply(this, arguments);\n\t        }\n\t    };\n\n\t    subInit.prototype = WordArray;\n\t}());\n\n\n\treturn CryptoJS.lib.WordArray;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * UTF-16 BE encoding strategy.\n\t     */\n\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 BE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 BE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 BE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 BE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    /**\n\t     * UTF-16 LE encoding strategy.\n\t     */\n\t    C_enc.Utf16LE = {\n\t        /**\n\t         * Converts a word array to a UTF-16 LE string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The UTF-16 LE string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\n\t            // Convert\n\t            var utf16Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 2) {\n\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);\n\t                utf16Chars.push(String.fromCharCode(codePoint));\n\t            }\n\n\t            return utf16Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a UTF-16 LE string to a word array.\n\t         *\n\t         * @param {string} utf16Str The UTF-16 LE string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);\n\t         */\n\t        parse: function (utf16Str) {\n\t            // Shortcut\n\t            var utf16StrLength = utf16Str.length;\n\n\t            // Convert\n\t            var words = [];\n\t            for (var i = 0; i < utf16StrLength; i++) {\n\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));\n\t            }\n\n\t            return WordArray.create(words, utf16StrLength * 2);\n\t        }\n\t    };\n\n\t    function swapEndian(word) {\n\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Utf16;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_enc = C.enc;\n\n\t    /**\n\t     * Base64 encoding strategy.\n\t     */\n\t    var Base64 = C_enc.Base64 = {\n\t        /**\n\t         * Converts a word array to a Base64 string.\n\t         *\n\t         * @param {WordArray} wordArray The word array.\n\t         *\n\t         * @return {string} The Base64 string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);\n\t         */\n\t        stringify: function (wordArray) {\n\t            // Shortcuts\n\t            var words = wordArray.words;\n\t            var sigBytes = wordArray.sigBytes;\n\t            var map = this._map;\n\n\t            // Clamp excess bits\n\t            wordArray.clamp();\n\n\t            // Convert\n\t            var base64Chars = [];\n\t            for (var i = 0; i < sigBytes; i += 3) {\n\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;\n\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {\n\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n\t                }\n\t            }\n\n\t            // Add padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                while (base64Chars.length % 4) {\n\t                    base64Chars.push(paddingChar);\n\t                }\n\t            }\n\n\t            return base64Chars.join('');\n\t        },\n\n\t        /**\n\t         * Converts a Base64 string to a word array.\n\t         *\n\t         * @param {string} base64Str The Base64 string.\n\t         *\n\t         * @return {WordArray} The word array.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);\n\t         */\n\t        parse: function (base64Str) {\n\t            // Shortcuts\n\t            var base64StrLength = base64Str.length;\n\t            var map = this._map;\n\t            var reverseMap = this._reverseMap;\n\n\t            if (!reverseMap) {\n\t                    reverseMap = this._reverseMap = [];\n\t                    for (var j = 0; j < map.length; j++) {\n\t                        reverseMap[map.charCodeAt(j)] = j;\n\t                    }\n\t            }\n\n\t            // Ignore padding\n\t            var paddingChar = map.charAt(64);\n\t            if (paddingChar) {\n\t                var paddingIndex = base64Str.indexOf(paddingChar);\n\t                if (paddingIndex !== -1) {\n\t                    base64StrLength = paddingIndex;\n\t                }\n\t            }\n\n\t            // Convert\n\t            return parseLoop(base64Str, base64StrLength, reverseMap);\n\n\t        },\n\n\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n\t    };\n\n\t    function parseLoop(base64Str, base64StrLength, reverseMap) {\n\t      var words = [];\n\t      var nBytes = 0;\n\t      for (var i = 0; i < base64StrLength; i++) {\n\t          if (i % 4) {\n\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);\n\t              nBytes++;\n\t          }\n\t      }\n\t      return WordArray.create(words, nBytes);\n\t    }\n\t}());\n\n\n\treturn CryptoJS.enc.Base64;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var T = [];\n\n\t    // Compute constants\n\t    (function () {\n\t        for (var i = 0; i < 64; i++) {\n\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n\t        }\n\t    }());\n\n\t    /**\n\t     * MD5 hash algorithm.\n\t     */\n\t    var MD5 = C_algo.MD5 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var M_offset_0  = M[offset + 0];\n\t            var M_offset_1  = M[offset + 1];\n\t            var M_offset_2  = M[offset + 2];\n\t            var M_offset_3  = M[offset + 3];\n\t            var M_offset_4  = M[offset + 4];\n\t            var M_offset_5  = M[offset + 5];\n\t            var M_offset_6  = M[offset + 6];\n\t            var M_offset_7  = M[offset + 7];\n\t            var M_offset_8  = M[offset + 8];\n\t            var M_offset_9  = M[offset + 9];\n\t            var M_offset_10 = M[offset + 10];\n\t            var M_offset_11 = M[offset + 11];\n\t            var M_offset_12 = M[offset + 12];\n\t            var M_offset_13 = M[offset + 13];\n\t            var M_offset_14 = M[offset + 14];\n\t            var M_offset_15 = M[offset + 15];\n\n\t            // Working varialbes\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\n\t            // Computation\n\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);\n\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);\n\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);\n\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);\n\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);\n\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);\n\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);\n\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);\n\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);\n\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);\n\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);\n\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);\n\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);\n\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);\n\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);\n\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);\n\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);\n\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);\n\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);\n\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);\n\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);\n\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);\n\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);\n\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);\n\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);\n\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);\n\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);\n\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);\n\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);\n\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);\n\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);\n\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);\n\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);\n\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);\n\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);\n\n\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);\n\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);\n\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);\n\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);\n\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);\n\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);\n\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);\n\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);\n\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);\n\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);\n\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);\n\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);\n\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);\n\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);\n\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);\n\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\n\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n\t            var nBitsTotalL = nBitsTotal;\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)\n\t            );\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)\n\t            );\n\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    function FF(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & c) | (~b & d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function GG(a, b, c, d, x, s, t) {\n\t        var n = a + ((b & d) | (c & ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function HH(a, b, c, d, x, s, t) {\n\t        var n = a + (b ^ c ^ d) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    function II(a, b, c, d, x, s, t) {\n\t        var n = a + (c ^ (b | ~d)) + x + t;\n\t        return ((n << s) | (n >>> (32 - s))) + b;\n\t    }\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.MD5('message');\n\t     *     var hash = CryptoJS.MD5(wordArray);\n\t     */\n\t    C.MD5 = Hasher._createHelper(MD5);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacMD5(message, key);\n\t     */\n\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);\n\t}(Math));\n\n\n\treturn CryptoJS.MD5;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable object\n\t    var W = [];\n\n\t    /**\n\t     * SHA-1 hash algorithm.\n\t     */\n\t    var SHA1 = C_algo.SHA1 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0x67452301, 0xefcdab89,\n\t                0x98badcfe, 0x10325476,\n\t                0xc3d2e1f0\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var H = this._hash.words;\n\n\t            // Working variables\n\t            var a = H[0];\n\t            var b = H[1];\n\t            var c = H[2];\n\t            var d = H[3];\n\t            var e = H[4];\n\n\t            // Computation\n\t            for (var i = 0; i < 80; i++) {\n\t                if (i < 16) {\n\t                    W[i] = M[offset + i] | 0;\n\t                } else {\n\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];\n\t                    W[i] = (n << 1) | (n >>> 31);\n\t                }\n\n\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];\n\t                if (i < 20) {\n\t                    t += ((b & c) | (~b & d)) + 0x5a827999;\n\t                } else if (i < 40) {\n\t                    t += (b ^ c ^ d) + 0x6ed9eba1;\n\t                } else if (i < 60) {\n\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;\n\t                } else /* if (i < 80) */ {\n\t                    t += (b ^ c ^ d) - 0x359d3e2a;\n\t                }\n\n\t                e = d;\n\t                d = c;\n\t                c = (b << 30) | (b >>> 2);\n\t                b = a;\n\t                a = t;\n\t            }\n\n\t            // Intermediate hash value\n\t            H[0] = (H[0] + a) | 0;\n\t            H[1] = (H[1] + b) | 0;\n\t            H[2] = (H[2] + c) | 0;\n\t            H[3] = (H[3] + d) | 0;\n\t            H[4] = (H[4] + e) | 0;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Return final computed hash\n\t            return this._hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA1('message');\n\t     *     var hash = CryptoJS.SHA1(wordArray);\n\t     */\n\t    C.SHA1 = Hasher._createHelper(SHA1);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA1(message, key);\n\t     */\n\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);\n\t}());\n\n\n\treturn CryptoJS.SHA1;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha256\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA256 = C_algo.SHA256;\n\n\t    /**\n\t     * SHA-224 hash algorithm.\n\t     */\n\t    var SHA224 = C_algo.SHA224 = SHA256.extend({\n\t        _doReset: function () {\n\t            this._hash = new WordArray.init([\n\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA256._doFinalize.call(this);\n\n\t            hash.sigBytes -= 4;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA224('message');\n\t     *     var hash = CryptoJS.SHA224(wordArray);\n\t     */\n\t    C.SHA224 = SHA256._createHelper(SHA224);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA224(message, key);\n\t     */\n\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);\n\t}());\n\n\n\treturn CryptoJS.SHA224;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\n\t    function X64Word_create() {\n\t        return X64Word.create.apply(X64Word, arguments);\n\t    }\n\n\t    // Constants\n\t    var K = [\n\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),\n\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),\n\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),\n\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),\n\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),\n\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),\n\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),\n\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),\n\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),\n\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),\n\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),\n\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),\n\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),\n\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),\n\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),\n\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),\n\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),\n\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),\n\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),\n\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),\n\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),\n\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),\n\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),\n\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),\n\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),\n\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),\n\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),\n\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),\n\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),\n\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),\n\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),\n\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),\n\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),\n\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),\n\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),\n\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),\n\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),\n\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),\n\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),\n\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)\n\t    ];\n\n\t    // Reusable objects\n\t    var W = [];\n\t    (function () {\n\t        for (var i = 0; i < 80; i++) {\n\t            W[i] = X64Word_create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-512 hash algorithm.\n\t     */\n\t    var SHA512 = C_algo.SHA512 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),\n\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),\n\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),\n\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)\n\t            ]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var H = this._hash.words;\n\n\t            var H0 = H[0];\n\t            var H1 = H[1];\n\t            var H2 = H[2];\n\t            var H3 = H[3];\n\t            var H4 = H[4];\n\t            var H5 = H[5];\n\t            var H6 = H[6];\n\t            var H7 = H[7];\n\n\t            var H0h = H0.high;\n\t            var H0l = H0.low;\n\t            var H1h = H1.high;\n\t            var H1l = H1.low;\n\t            var H2h = H2.high;\n\t            var H2l = H2.low;\n\t            var H3h = H3.high;\n\t            var H3l = H3.low;\n\t            var H4h = H4.high;\n\t            var H4l = H4.low;\n\t            var H5h = H5.high;\n\t            var H5l = H5.low;\n\t            var H6h = H6.high;\n\t            var H6l = H6.low;\n\t            var H7h = H7.high;\n\t            var H7l = H7.low;\n\n\t            // Working variables\n\t            var ah = H0h;\n\t            var al = H0l;\n\t            var bh = H1h;\n\t            var bl = H1l;\n\t            var ch = H2h;\n\t            var cl = H2l;\n\t            var dh = H3h;\n\t            var dl = H3l;\n\t            var eh = H4h;\n\t            var el = H4l;\n\t            var fh = H5h;\n\t            var fl = H5l;\n\t            var gh = H6h;\n\t            var gl = H6l;\n\t            var hh = H7h;\n\t            var hl = H7l;\n\n\t            // Rounds\n\t            for (var i = 0; i < 80; i++) {\n\t                // Shortcut\n\t                var Wi = W[i];\n\n\t                // Extend message\n\t                if (i < 16) {\n\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;\n\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;\n\t                } else {\n\t                    // Gamma0\n\t                    var gamma0x  = W[i - 15];\n\t                    var gamma0xh = gamma0x.high;\n\t                    var gamma0xl = gamma0x.low;\n\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);\n\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));\n\n\t                    // Gamma1\n\t                    var gamma1x  = W[i - 2];\n\t                    var gamma1xh = gamma1x.high;\n\t                    var gamma1xl = gamma1x.low;\n\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);\n\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));\n\n\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]\n\t                    var Wi7  = W[i - 7];\n\t                    var Wi7h = Wi7.high;\n\t                    var Wi7l = Wi7.low;\n\n\t                    var Wi16  = W[i - 16];\n\t                    var Wi16h = Wi16.high;\n\t                    var Wi16l = Wi16.low;\n\n\t                    var Wil = gamma0l + Wi7l;\n\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + gamma1l;\n\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);\n\t                    var Wil = Wil + Wi16l;\n\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);\n\n\t                    Wi.high = Wih;\n\t                    Wi.low  = Wil;\n\t                }\n\n\t                var chh  = (eh & fh) ^ (~eh & gh);\n\t                var chl  = (el & fl) ^ (~el & gl);\n\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);\n\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);\n\n\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));\n\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));\n\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));\n\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));\n\n\t                // t1 = h + sigma1 + ch + K[i] + W[i]\n\t                var Ki  = K[i];\n\t                var Kih = Ki.high;\n\t                var Kil = Ki.low;\n\n\t                var t1l = hl + sigma1l;\n\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + chl;\n\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Kil;\n\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);\n\t                var t1l = t1l + Wil;\n\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);\n\n\t                // t2 = sigma0 + maj\n\t                var t2l = sigma0l + majl;\n\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);\n\n\t                // Update working variables\n\t                hh = gh;\n\t                hl = gl;\n\t                gh = fh;\n\t                gl = fl;\n\t                fh = eh;\n\t                fl = el;\n\t                el = (dl + t1l) | 0;\n\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;\n\t                dh = ch;\n\t                dl = cl;\n\t                ch = bh;\n\t                cl = bl;\n\t                bh = ah;\n\t                bl = al;\n\t                al = (t1l + t2l) | 0;\n\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;\n\t            }\n\n\t            // Intermediate hash value\n\t            H0l = H0.low  = (H0l + al);\n\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));\n\t            H1l = H1.low  = (H1l + bl);\n\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));\n\t            H2l = H2.low  = (H2l + cl);\n\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));\n\t            H3l = H3.low  = (H3l + dl);\n\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));\n\t            H4l = H4.low  = (H4l + el);\n\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));\n\t            H5l = H5.low  = (H5l + fl);\n\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));\n\t            H6l = H6.low  = (H6l + gl);\n\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));\n\t            H7l = H7.low  = (H7l + hl);\n\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);\n\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Convert hash to 32-bit word array before returning\n\t            var hash = this._hash.toX32();\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        },\n\n\t        blockSize: 1024/32\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA512('message');\n\t     *     var hash = CryptoJS.SHA512(wordArray);\n\t     */\n\t    C.SHA512 = Hasher._createHelper(SHA512);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA512(message, key);\n\t     */\n\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);\n\t}());\n\n\n\treturn CryptoJS.SHA512;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var X64WordArray = C_x64.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA512 = C_algo.SHA512;\n\n\t    /**\n\t     * SHA-384 hash algorithm.\n\t     */\n\t    var SHA384 = C_algo.SHA384 = SHA512.extend({\n\t        _doReset: function () {\n\t            this._hash = new X64WordArray.init([\n\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),\n\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),\n\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),\n\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)\n\t            ]);\n\t        },\n\n\t        _doFinalize: function () {\n\t            var hash = SHA512._doFinalize.call(this);\n\n\t            hash.sigBytes -= 16;\n\n\t            return hash;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA384('message');\n\t     *     var hash = CryptoJS.SHA384(wordArray);\n\t     */\n\t    C.SHA384 = SHA512._createHelper(SHA384);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA384(message, key);\n\t     */\n\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);\n\t}());\n\n\n\treturn CryptoJS.SHA384;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_x64 = C.x64;\n\t    var X64Word = C_x64.Word;\n\t    var C_algo = C.algo;\n\n\t    // Constants tables\n\t    var RHO_OFFSETS = [];\n\t    var PI_INDEXES  = [];\n\t    var ROUND_CONSTANTS = [];\n\n\t    // Compute Constants\n\t    (function () {\n\t        // Compute rho offset constants\n\t        var x = 1, y = 0;\n\t        for (var t = 0; t < 24; t++) {\n\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;\n\n\t            var newX = y % 5;\n\t            var newY = (2 * x + 3 * y) % 5;\n\t            x = newX;\n\t            y = newY;\n\t        }\n\n\t        // Compute pi index constants\n\t        for (var x = 0; x < 5; x++) {\n\t            for (var y = 0; y < 5; y++) {\n\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;\n\t            }\n\t        }\n\n\t        // Compute round constants\n\t        var LFSR = 0x01;\n\t        for (var i = 0; i < 24; i++) {\n\t            var roundConstantMsw = 0;\n\t            var roundConstantLsw = 0;\n\n\t            for (var j = 0; j < 7; j++) {\n\t                if (LFSR & 0x01) {\n\t                    var bitPosition = (1 << j) - 1;\n\t                    if (bitPosition < 32) {\n\t                        roundConstantLsw ^= 1 << bitPosition;\n\t                    } else /* if (bitPosition >= 32) */ {\n\t                        roundConstantMsw ^= 1 << (bitPosition - 32);\n\t                    }\n\t                }\n\n\t                // Compute next LFSR\n\t                if (LFSR & 0x80) {\n\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1\n\t                    LFSR = (LFSR << 1) ^ 0x71;\n\t                } else {\n\t                    LFSR <<= 1;\n\t                }\n\t            }\n\n\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);\n\t        }\n\t    }());\n\n\t    // Reusable objects for temporary values\n\t    var T = [];\n\t    (function () {\n\t        for (var i = 0; i < 25; i++) {\n\t            T[i] = X64Word.create();\n\t        }\n\t    }());\n\n\t    /**\n\t     * SHA-3 hash algorithm.\n\t     */\n\t    var SHA3 = C_algo.SHA3 = Hasher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} outputLength\n\t         *   The desired number of bits in the output hash.\n\t         *   Only values permitted are: 224, 256, 384, 512.\n\t         *   Default: 512\n\t         */\n\t        cfg: Hasher.cfg.extend({\n\t            outputLength: 512\n\t        }),\n\n\t        _doReset: function () {\n\t            var state = this._state = []\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = new X64Word.init();\n\t            }\n\n\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var nBlockSizeLanes = this.blockSize / 2;\n\n\t            // Absorb\n\t            for (var i = 0; i < nBlockSizeLanes; i++) {\n\t                // Shortcuts\n\t                var M2i  = M[offset + 2 * i];\n\t                var M2i1 = M[offset + 2 * i + 1];\n\n\t                // Swap endian\n\t                M2i = (\n\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)\n\t                );\n\t                M2i1 = (\n\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |\n\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Absorb message into state\n\t                var lane = state[i];\n\t                lane.high ^= M2i1;\n\t                lane.low  ^= M2i;\n\t            }\n\n\t            // Rounds\n\t            for (var round = 0; round < 24; round++) {\n\t                // Theta\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Mix column lanes\n\t                    var tMsw = 0, tLsw = 0;\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        tMsw ^= lane.high;\n\t                        tLsw ^= lane.low;\n\t                    }\n\n\t                    // Temporary values\n\t                    var Tx = T[x];\n\t                    Tx.high = tMsw;\n\t                    Tx.low  = tLsw;\n\t                }\n\t                for (var x = 0; x < 5; x++) {\n\t                    // Shortcuts\n\t                    var Tx4 = T[(x + 4) % 5];\n\t                    var Tx1 = T[(x + 1) % 5];\n\t                    var Tx1Msw = Tx1.high;\n\t                    var Tx1Lsw = Tx1.low;\n\n\t                    // Mix surrounding columns\n\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));\n\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));\n\t                    for (var y = 0; y < 5; y++) {\n\t                        var lane = state[x + 5 * y];\n\t                        lane.high ^= tMsw;\n\t                        lane.low  ^= tLsw;\n\t                    }\n\t                }\n\n\t                // Rho Pi\n\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {\n\t                    // Shortcuts\n\t                    var lane = state[laneIndex];\n\t                    var laneMsw = lane.high;\n\t                    var laneLsw = lane.low;\n\t                    var rhoOffset = RHO_OFFSETS[laneIndex];\n\n\t                    // Rotate lanes\n\t                    if (rhoOffset < 32) {\n\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));\n\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));\n\t                    } else /* if (rhoOffset >= 32) */ {\n\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));\n\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));\n\t                    }\n\n\t                    // Transpose lanes\n\t                    var TPiLane = T[PI_INDEXES[laneIndex]];\n\t                    TPiLane.high = tMsw;\n\t                    TPiLane.low  = tLsw;\n\t                }\n\n\t                // Rho pi at x = y = 0\n\t                var T0 = T[0];\n\t                var state0 = state[0];\n\t                T0.high = state0.high;\n\t                T0.low  = state0.low;\n\n\t                // Chi\n\t                for (var x = 0; x < 5; x++) {\n\t                    for (var y = 0; y < 5; y++) {\n\t                        // Shortcuts\n\t                        var laneIndex = x + 5 * y;\n\t                        var lane = state[laneIndex];\n\t                        var TLane = T[laneIndex];\n\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];\n\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];\n\n\t                        // Mix rows\n\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);\n\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);\n\t                    }\n\t                }\n\n\t                // Iota\n\t                var lane = state[0];\n\t                var roundConstant = ROUND_CONSTANTS[round];\n\t                lane.high ^= roundConstant.high;\n\t                lane.low  ^= roundConstant.low;;\n\t            }\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\t            var blockSizeBits = this.blockSize * 32;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);\n\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;\n\t            data.sigBytes = dataWords.length * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var state = this._state;\n\t            var outputLengthBytes = this.cfg.outputLength / 8;\n\t            var outputLengthLanes = outputLengthBytes / 8;\n\n\t            // Squeeze\n\t            var hashWords = [];\n\t            for (var i = 0; i < outputLengthLanes; i++) {\n\t                // Shortcuts\n\t                var lane = state[i];\n\t                var laneMsw = lane.high;\n\t                var laneLsw = lane.low;\n\n\t                // Swap endian\n\t                laneMsw = (\n\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)\n\t                );\n\t                laneLsw = (\n\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |\n\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)\n\t                );\n\n\t                // Squeeze state to retrieve hash\n\t                hashWords.push(laneLsw);\n\t                hashWords.push(laneMsw);\n\t            }\n\n\t            // Return final computed hash\n\t            return new WordArray.init(hashWords, outputLengthBytes);\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\n\t            var state = clone._state = this._state.slice(0);\n\t            for (var i = 0; i < 25; i++) {\n\t                state[i] = state[i].clone();\n\t            }\n\n\t            return clone;\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.SHA3('message');\n\t     *     var hash = CryptoJS.SHA3(wordArray);\n\t     */\n\t    C.SHA3 = Hasher._createHelper(SHA3);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacSHA3(message, key);\n\t     */\n\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);\n\t}(Math));\n\n\n\treturn CryptoJS.SHA3;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t(c) 2012 by C\u00E9dric Mesnil. All rights reserved.\n\n\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\n\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\t*/\n\n\t(function (Math) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var Hasher = C_lib.Hasher;\n\t    var C_algo = C.algo;\n\n\t    // Constants table\n\t    var _zl = WordArray.create([\n\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,\n\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,\n\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,\n\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,\n\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);\n\t    var _zr = WordArray.create([\n\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,\n\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,\n\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,\n\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,\n\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);\n\t    var _sl = WordArray.create([\n\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,\n\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,\n\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,\n\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,\n\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);\n\t    var _sr = WordArray.create([\n\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,\n\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,\n\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,\n\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,\n\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);\n\n\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);\n\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);\n\n\t    /**\n\t     * RIPEMD160 hash algorithm.\n\t     */\n\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({\n\t        _doReset: function () {\n\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\n\t            // Swap endian\n\t            for (var i = 0; i < 16; i++) {\n\t                // Shortcuts\n\t                var offset_i = offset + i;\n\t                var M_offset_i = M[offset_i];\n\n\t                // Swap\n\t                M[offset_i] = (\n\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |\n\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)\n\t                );\n\t            }\n\t            // Shortcut\n\t            var H  = this._hash.words;\n\t            var hl = _hl.words;\n\t            var hr = _hr.words;\n\t            var zl = _zl.words;\n\t            var zr = _zr.words;\n\t            var sl = _sl.words;\n\t            var sr = _sr.words;\n\n\t            // Working variables\n\t            var al, bl, cl, dl, el;\n\t            var ar, br, cr, dr, er;\n\n\t            ar = al = H[0];\n\t            br = bl = H[1];\n\t            cr = cl = H[2];\n\t            dr = dl = H[3];\n\t            er = el = H[4];\n\t            // Computation\n\t            var t;\n\t            for (var i = 0; i < 80; i += 1) {\n\t                t = (al +  M[offset+zl[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f1(bl,cl,dl) + hl[0];\n\t                } else if (i<32) {\n\t\t            t +=  f2(bl,cl,dl) + hl[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(bl,cl,dl) + hl[2];\n\t                } else if (i<64) {\n\t\t            t +=  f4(bl,cl,dl) + hl[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f5(bl,cl,dl) + hl[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sl[i]);\n\t                t = (t+el)|0;\n\t                al = el;\n\t                el = dl;\n\t                dl = rotl(cl, 10);\n\t                cl = bl;\n\t                bl = t;\n\n\t                t = (ar + M[offset+zr[i]])|0;\n\t                if (i<16){\n\t\t            t +=  f5(br,cr,dr) + hr[0];\n\t                } else if (i<32) {\n\t\t            t +=  f4(br,cr,dr) + hr[1];\n\t                } else if (i<48) {\n\t\t            t +=  f3(br,cr,dr) + hr[2];\n\t                } else if (i<64) {\n\t\t            t +=  f2(br,cr,dr) + hr[3];\n\t                } else {// if (i<80) {\n\t\t            t +=  f1(br,cr,dr) + hr[4];\n\t                }\n\t                t = t|0;\n\t                t =  rotl(t,sr[i]) ;\n\t                t = (t+er)|0;\n\t                ar = er;\n\t                er = dr;\n\t                dr = rotl(cr, 10);\n\t                cr = br;\n\t                br = t;\n\t            }\n\t            // Intermediate hash value\n\t            t    = (H[1] + cl + dr)|0;\n\t            H[1] = (H[2] + dl + er)|0;\n\t            H[2] = (H[3] + el + ar)|0;\n\t            H[3] = (H[4] + al + br)|0;\n\t            H[4] = (H[0] + bl + cr)|0;\n\t            H[0] =  t;\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcuts\n\t            var data = this._data;\n\t            var dataWords = data.words;\n\n\t            var nBitsTotal = this._nDataBytes * 8;\n\t            var nBitsLeft = data.sigBytes * 8;\n\n\t            // Add padding\n\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);\n\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |\n\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)\n\t            );\n\t            data.sigBytes = (dataWords.length + 1) * 4;\n\n\t            // Hash final blocks\n\t            this._process();\n\n\t            // Shortcuts\n\t            var hash = this._hash;\n\t            var H = hash.words;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 5; i++) {\n\t                // Shortcut\n\t                var H_i = H[i];\n\n\t                // Swap\n\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |\n\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Return final computed hash\n\t            return hash;\n\t        },\n\n\t        clone: function () {\n\t            var clone = Hasher.clone.call(this);\n\t            clone._hash = this._hash.clone();\n\n\t            return clone;\n\t        }\n\t    });\n\n\n\t    function f1(x, y, z) {\n\t        return ((x) ^ (y) ^ (z));\n\n\t    }\n\n\t    function f2(x, y, z) {\n\t        return (((x)&(y)) | ((~x)&(z)));\n\t    }\n\n\t    function f3(x, y, z) {\n\t        return (((x) | (~(y))) ^ (z));\n\t    }\n\n\t    function f4(x, y, z) {\n\t        return (((x) & (z)) | ((y)&(~(z))));\n\t    }\n\n\t    function f5(x, y, z) {\n\t        return ((x) ^ ((y) |(~(z))));\n\n\t    }\n\n\t    function rotl(x,n) {\n\t        return (x<<n) | (x>>>(32-n));\n\t    }\n\n\n\t    /**\n\t     * Shortcut function to the hasher's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     *\n\t     * @return {WordArray} The hash.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hash = CryptoJS.RIPEMD160('message');\n\t     *     var hash = CryptoJS.RIPEMD160(wordArray);\n\t     */\n\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);\n\n\t    /**\n\t     * Shortcut function to the HMAC's object interface.\n\t     *\n\t     * @param {WordArray|string} message The message to hash.\n\t     * @param {WordArray|string} key The secret key.\n\t     *\n\t     * @return {WordArray} The HMAC.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);\n\t     */\n\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);\n\t}(Math));\n\n\n\treturn CryptoJS.RIPEMD160;\n\n}));", ";(function (root, factory) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * HMAC algorithm.\n\t     */\n\t    var HMAC = C_algo.HMAC = Base.extend({\n\t        /**\n\t         * Initializes a newly created HMAC.\n\t         *\n\t         * @param {Hasher} hasher The hash algorithm to use.\n\t         * @param {WordArray|string} key The secret key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n\t         */\n\t        init: function (hasher, key) {\n\t            // Init hasher\n\t            hasher = this._hasher = new hasher.init();\n\n\t            // Convert string to WordArray, else assume WordArray already\n\t            if (typeof key == 'string') {\n\t                key = Utf8.parse(key);\n\t            }\n\n\t            // Shortcuts\n\t            var hasherBlockSize = hasher.blockSize;\n\t            var hasherBlockSizeBytes = hasherBlockSize * 4;\n\n\t            // Allow arbitrary length keys\n\t            if (key.sigBytes > hasherBlockSizeBytes) {\n\t                key = hasher.finalize(key);\n\t            }\n\n\t            // Clamp excess bits\n\t            key.clamp();\n\n\t            // Clone key for inner and outer pads\n\t            var oKey = this._oKey = key.clone();\n\t            var iKey = this._iKey = key.clone();\n\n\t            // Shortcuts\n\t            var oKeyWords = oKey.words;\n\t            var iKeyWords = iKey.words;\n\n\t            // XOR keys with pad constants\n\t            for (var i = 0; i < hasherBlockSize; i++) {\n\t                oKeyWords[i] ^= 0x5c5c5c5c;\n\t                iKeyWords[i] ^= 0x36363636;\n\t            }\n\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this HMAC to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.reset();\n\t         */\n\t        reset: function () {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Reset\n\t            hasher.reset();\n\t            hasher.update(this._iKey);\n\t        },\n\n\t        /**\n\t         * Updates this HMAC with a message.\n\t         *\n\t         * @param {WordArray|string} messageUpdate The message to append.\n\t         *\n\t         * @return {HMAC} This HMAC instance.\n\t         *\n\t         * @example\n\t         *\n\t         *     hmacHasher.update('message');\n\t         *     hmacHasher.update(wordArray);\n\t         */\n\t        update: function (messageUpdate) {\n\t            this._hasher.update(messageUpdate);\n\n\t            // Chainable\n\t            return this;\n\t        },\n\n\t        /**\n\t         * Finalizes the HMAC computation.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.\n\t         *\n\t         * @return {WordArray} The HMAC.\n\t         *\n\t         * @example\n\t         *\n\t         *     var hmac = hmacHasher.finalize();\n\t         *     var hmac = hmacHasher.finalize('message');\n\t         *     var hmac = hmacHasher.finalize(wordArray);\n\t         */\n\t        finalize: function (messageUpdate) {\n\t            // Shortcut\n\t            var hasher = this._hasher;\n\n\t            // Compute HMAC\n\t            var innerHash = hasher.finalize(messageUpdate);\n\t            hasher.reset();\n\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n\t            return hmac;\n\t        }\n\t    });\n\t}());\n\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var SHA1 = C_algo.SHA1;\n\t    var HMAC = C_algo.HMAC;\n\n\t    /**\n\t     * Password-Based Key Derivation Function 2 algorithm.\n\t     */\n\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hasher to use. Default: SHA1\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: SHA1,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create();\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Computes the Password-Based Key Derivation Function 2.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init HMAC\n\t            var hmac = HMAC.create(cfg.hasher, password);\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\t            var blockIndex = WordArray.create([0x00000001]);\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var blockIndexWords = blockIndex.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                var block = hmac.update(salt).finalize(blockIndex);\n\t                hmac.reset();\n\n\t                // Shortcuts\n\t                var blockWords = block.words;\n\t                var blockWordsLength = blockWords.length;\n\n\t                // Iterations\n\t                var intermediate = block;\n\t                for (var i = 1; i < iterations; i++) {\n\t                    intermediate = hmac.finalize(intermediate);\n\t                    hmac.reset();\n\n\t                    // Shortcut\n\t                    var intermediateWords = intermediate.words;\n\n\t                    // XOR intermediate with block\n\t                    for (var j = 0; j < blockWordsLength; j++) {\n\t                        blockWords[j] ^= intermediateWords[j];\n\t                    }\n\t                }\n\n\t                derivedKey.concat(block);\n\t                blockIndexWords[0]++;\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Computes the Password-Based Key Derivation Function 2.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.PBKDF2(password, salt);\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.PBKDF2 = function (password, salt, cfg) {\n\t        return PBKDF2.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.PBKDF2;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var C_algo = C.algo;\n\t    var MD5 = C_algo.MD5;\n\n\t    /**\n\t     * This key derivation function is meant to conform with EVP_BytesToKey.\n\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n\t     */\n\t    var EvpKDF = C_algo.EvpKDF = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n\t         * @property {number} iterations The number of iterations to perform. Default: 1\n\t         */\n\t        cfg: Base.extend({\n\t            keySize: 128/32,\n\t            hasher: MD5,\n\t            iterations: 1\n\t        }),\n\n\t        /**\n\t         * Initializes a newly created key derivation function.\n\t         *\n\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create();\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n\t         */\n\t        init: function (cfg) {\n\t            this.cfg = this.cfg.extend(cfg);\n\t        },\n\n\t        /**\n\t         * Derives a key from a password.\n\t         *\n\t         * @param {WordArray|string} password The password.\n\t         * @param {WordArray|string} salt A salt.\n\t         *\n\t         * @return {WordArray} The derived key.\n\t         *\n\t         * @example\n\t         *\n\t         *     var key = kdf.compute(password, salt);\n\t         */\n\t        compute: function (password, salt) {\n\t            // Shortcut\n\t            var cfg = this.cfg;\n\n\t            // Init hasher\n\t            var hasher = cfg.hasher.create();\n\n\t            // Initial values\n\t            var derivedKey = WordArray.create();\n\n\t            // Shortcuts\n\t            var derivedKeyWords = derivedKey.words;\n\t            var keySize = cfg.keySize;\n\t            var iterations = cfg.iterations;\n\n\t            // Generate key\n\t            while (derivedKeyWords.length < keySize) {\n\t                if (block) {\n\t                    hasher.update(block);\n\t                }\n\t                var block = hasher.update(password).finalize(salt);\n\t                hasher.reset();\n\n\t                // Iterations\n\t                for (var i = 1; i < iterations; i++) {\n\t                    block = hasher.finalize(block);\n\t                    hasher.reset();\n\t                }\n\n\t                derivedKey.concat(block);\n\t            }\n\t            derivedKey.sigBytes = keySize * 4;\n\n\t            return derivedKey;\n\t        }\n\t    });\n\n\t    /**\n\t     * Derives a key from a password.\n\t     *\n\t     * @param {WordArray|string} password The password.\n\t     * @param {WordArray|string} salt A salt.\n\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.\n\t     *\n\t     * @return {WordArray} The derived key.\n\t     *\n\t     * @static\n\t     *\n\t     * @example\n\t     *\n\t     *     var key = CryptoJS.EvpKDF(password, salt);\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n\t     */\n\t    C.EvpKDF = function (password, salt, cfg) {\n\t        return EvpKDF.create(cfg).compute(password, salt);\n\t    };\n\t}());\n\n\n\treturn CryptoJS.EvpKDF;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./evpkdf\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./evpkdf\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher core components.\n\t */\n\tCryptoJS.lib.Cipher || (function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var Base = C_lib.Base;\n\t    var WordArray = C_lib.WordArray;\n\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;\n\t    var C_enc = C.enc;\n\t    var Utf8 = C_enc.Utf8;\n\t    var Base64 = C_enc.Base64;\n\t    var C_algo = C.algo;\n\t    var EvpKDF = C_algo.EvpKDF;\n\n\t    /**\n\t     * Abstract base cipher template.\n\t     *\n\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n\t     */\n\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {WordArray} iv The IV to use for this operation.\n\t         */\n\t        cfg: Base.extend(),\n\n\t        /**\n\t         * Creates this cipher in encryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createEncryptor: function (key, cfg) {\n\t            return this.create(this._ENC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Creates this cipher in decryption mode.\n\t         *\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {Cipher} A cipher instance.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n\t         */\n\t        createDecryptor: function (key, cfg) {\n\t            return this.create(this._DEC_XFORM_MODE, key, cfg);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created cipher.\n\t         *\n\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });\n\t         */\n\t        init: function (xformMode, key, cfg) {\n\t            // Apply config defaults\n\t            this.cfg = this.cfg.extend(cfg);\n\n\t            // Store transform mode and key\n\t            this._xformMode = xformMode;\n\t            this._key = key;\n\n\t            // Set initial values\n\t            this.reset();\n\t        },\n\n\t        /**\n\t         * Resets this cipher to its initial state.\n\t         *\n\t         * @example\n\t         *\n\t         *     cipher.reset();\n\t         */\n\t        reset: function () {\n\t            // Reset data buffer\n\t            BufferedBlockAlgorithm.reset.call(this);\n\n\t            // Perform concrete-cipher logic\n\t            this._doReset();\n\t        },\n\n\t        /**\n\t         * Adds data to be encrypted or decrypted.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.process('data');\n\t         *     var encrypted = cipher.process(wordArray);\n\t         */\n\t        process: function (dataUpdate) {\n\t            // Append\n\t            this._append(dataUpdate);\n\n\t            // Process available blocks\n\t            return this._process();\n\t        },\n\n\t        /**\n\t         * Finalizes the encryption or decryption process.\n\t         * Note that the finalize operation is effectively a destructive, read-once operation.\n\t         *\n\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n\t         *\n\t         * @return {WordArray} The data after final processing.\n\t         *\n\t         * @example\n\t         *\n\t         *     var encrypted = cipher.finalize();\n\t         *     var encrypted = cipher.finalize('data');\n\t         *     var encrypted = cipher.finalize(wordArray);\n\t         */\n\t        finalize: function (dataUpdate) {\n\t            // Final data update\n\t            if (dataUpdate) {\n\t                this._append(dataUpdate);\n\t            }\n\n\t            // Perform concrete-cipher logic\n\t            var finalProcessedData = this._doFinalize();\n\n\t            return finalProcessedData;\n\t        },\n\n\t        keySize: 128/32,\n\n\t        ivSize: 128/32,\n\n\t        _ENC_XFORM_MODE: 1,\n\n\t        _DEC_XFORM_MODE: 2,\n\n\t        /**\n\t         * Creates shortcut functions to a cipher's object interface.\n\t         *\n\t         * @param {Cipher} cipher The cipher to create a helper for.\n\t         *\n\t         * @return {Object} An object with encrypt and decrypt shortcut functions.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n\t         */\n\t        _createHelper: (function () {\n\t            function selectCipherStrategy(key) {\n\t                if (typeof key == 'string') {\n\t                    return PasswordBasedCipher;\n\t                } else {\n\t                    return SerializableCipher;\n\t                }\n\t            }\n\n\t            return function (cipher) {\n\t                return {\n\t                    encrypt: function (message, key, cfg) {\n\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);\n\t                    },\n\n\t                    decrypt: function (ciphertext, key, cfg) {\n\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);\n\t                    }\n\t                };\n\t            };\n\t        }())\n\t    });\n\n\t    /**\n\t     * Abstract base stream cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n\t     */\n\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({\n\t        _doFinalize: function () {\n\t            // Process partial blocks\n\t            var finalProcessedBlocks = this._process(!!'flush');\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 1\n\t    });\n\n\t    /**\n\t     * Mode namespace.\n\t     */\n\t    var C_mode = C.mode = {};\n\n\t    /**\n\t     * Abstract base block cipher mode template.\n\t     */\n\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({\n\t        /**\n\t         * Creates this mode for encryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n\t         */\n\t        createEncryptor: function (cipher, iv) {\n\t            return this.Encryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Creates this mode for decryption.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n\t         */\n\t        createDecryptor: function (cipher, iv) {\n\t            return this.Decryptor.create(cipher, iv);\n\t        },\n\n\t        /**\n\t         * Initializes a newly created mode.\n\t         *\n\t         * @param {Cipher} cipher A block cipher instance.\n\t         * @param {Array} iv The IV words.\n\t         *\n\t         * @example\n\t         *\n\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n\t         */\n\t        init: function (cipher, iv) {\n\t            this._cipher = cipher;\n\t            this._iv = iv;\n\t        }\n\t    });\n\n\t    /**\n\t     * Cipher Block Chaining mode.\n\t     */\n\t    var CBC = C_mode.CBC = (function () {\n\t        /**\n\t         * Abstract base CBC mode.\n\t         */\n\t        var CBC = BlockCipherMode.extend();\n\n\t        /**\n\t         * CBC encryptor.\n\t         */\n\t        CBC.Encryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // XOR and encrypt\n\t                xorBlock.call(this, words, offset, blockSize);\n\t                cipher.encryptBlock(words, offset);\n\n\t                // Remember this block to use with next block\n\t                this._prevBlock = words.slice(offset, offset + blockSize);\n\t            }\n\t        });\n\n\t        /**\n\t         * CBC decryptor.\n\t         */\n\t        CBC.Decryptor = CBC.extend({\n\t            /**\n\t             * Processes the data block at offset.\n\t             *\n\t             * @param {Array} words The data words to operate on.\n\t             * @param {number} offset The offset where the block starts.\n\t             *\n\t             * @example\n\t             *\n\t             *     mode.processBlock(data.words, offset);\n\t             */\n\t            processBlock: function (words, offset) {\n\t                // Shortcuts\n\t                var cipher = this._cipher;\n\t                var blockSize = cipher.blockSize;\n\n\t                // Remember this block to use with next block\n\t                var thisBlock = words.slice(offset, offset + blockSize);\n\n\t                // Decrypt and XOR\n\t                cipher.decryptBlock(words, offset);\n\t                xorBlock.call(this, words, offset, blockSize);\n\n\t                // This block becomes the previous block\n\t                this._prevBlock = thisBlock;\n\t            }\n\t        });\n\n\t        function xorBlock(words, offset, blockSize) {\n\t            // Shortcut\n\t            var iv = this._iv;\n\n\t            // Choose mixing block\n\t            if (iv) {\n\t                var block = iv;\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            } else {\n\t                var block = this._prevBlock;\n\t            }\n\n\t            // XOR blocks\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= block[i];\n\t            }\n\t        }\n\n\t        return CBC;\n\t    }());\n\n\t    /**\n\t     * Padding namespace.\n\t     */\n\t    var C_pad = C.pad = {};\n\n\t    /**\n\t     * PKCS #5/7 padding strategy.\n\t     */\n\t    var Pkcs7 = C_pad.Pkcs7 = {\n\t        /**\n\t         * Pads data using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to pad.\n\t         * @param {number} blockSize The multiple that the data should be padded to.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n\t         */\n\t        pad: function (data, blockSize) {\n\t            // Shortcut\n\t            var blockSizeBytes = blockSize * 4;\n\n\t            // Count padding bytes\n\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t            // Create padding word\n\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;\n\n\t            // Create padding\n\t            var paddingWords = [];\n\t            for (var i = 0; i < nPaddingBytes; i += 4) {\n\t                paddingWords.push(paddingWord);\n\t            }\n\t            var padding = WordArray.create(paddingWords, nPaddingBytes);\n\n\t            // Add padding\n\t            data.concat(padding);\n\t        },\n\n\t        /**\n\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n\t         *\n\t         * @param {WordArray} data The data to unpad.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n\t         */\n\t        unpad: function (data) {\n\t            // Get number of padding bytes from last byte\n\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t            // Remove padding\n\t            data.sigBytes -= nPaddingBytes;\n\t        }\n\t    };\n\n\t    /**\n\t     * Abstract base block cipher template.\n\t     *\n\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n\t     */\n\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Mode} mode The block mode to use. Default: CBC\n\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n\t         */\n\t        cfg: Cipher.cfg.extend({\n\t            mode: CBC,\n\t            padding: Pkcs7\n\t        }),\n\n\t        reset: function () {\n\t            // Reset cipher\n\t            Cipher.reset.call(this);\n\n\t            // Shortcuts\n\t            var cfg = this.cfg;\n\t            var iv = cfg.iv;\n\t            var mode = cfg.mode;\n\n\t            // Reset block mode\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                var modeCreator = mode.createEncryptor;\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                var modeCreator = mode.createDecryptor;\n\t                // Keep at least one block in the buffer for unpadding\n\t                this._minBufferSize = 1;\n\t            }\n\n\t            if (this._mode && this._mode.__creator == modeCreator) {\n\t                this._mode.init(this, iv && iv.words);\n\t            } else {\n\t                this._mode = modeCreator.call(mode, this, iv && iv.words);\n\t                this._mode.__creator = modeCreator;\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (words, offset) {\n\t            this._mode.processBlock(words, offset);\n\t        },\n\n\t        _doFinalize: function () {\n\t            // Shortcut\n\t            var padding = this.cfg.padding;\n\n\t            // Finalize\n\t            if (this._xformMode == this._ENC_XFORM_MODE) {\n\t                // Pad data\n\t                padding.pad(this._data, this.blockSize);\n\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n\t                // Process final blocks\n\t                var finalProcessedBlocks = this._process(!!'flush');\n\n\t                // Unpad data\n\t                padding.unpad(finalProcessedBlocks);\n\t            }\n\n\t            return finalProcessedBlocks;\n\t        },\n\n\t        blockSize: 128/32\n\t    });\n\n\t    /**\n\t     * A collection of cipher parameters.\n\t     *\n\t     * @property {WordArray} ciphertext The raw ciphertext.\n\t     * @property {WordArray} key The key to this ciphertext.\n\t     * @property {WordArray} iv The IV used in the ciphering operation.\n\t     * @property {WordArray} salt The salt used with a key derivation function.\n\t     * @property {Cipher} algorithm The cipher algorithm.\n\t     * @property {Mode} mode The block mode used in the ciphering operation.\n\t     * @property {Padding} padding The padding scheme used in the ciphering operation.\n\t     * @property {number} blockSize The block size of the cipher.\n\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.\n\t     */\n\t    var CipherParams = C_lib.CipherParams = Base.extend({\n\t        /**\n\t         * Initializes a newly created cipher params object.\n\t         *\n\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({\n\t         *         ciphertext: ciphertextWordArray,\n\t         *         key: keyWordArray,\n\t         *         iv: ivWordArray,\n\t         *         salt: saltWordArray,\n\t         *         algorithm: CryptoJS.algo.AES,\n\t         *         mode: CryptoJS.mode.CBC,\n\t         *         padding: CryptoJS.pad.PKCS7,\n\t         *         blockSize: 4,\n\t         *         formatter: CryptoJS.format.OpenSSL\n\t         *     });\n\t         */\n\t        init: function (cipherParams) {\n\t            this.mixIn(cipherParams);\n\t        },\n\n\t        /**\n\t         * Converts this cipher params object to a string.\n\t         *\n\t         * @param {Format} formatter (Optional) The formatting strategy to use.\n\t         *\n\t         * @return {string} The stringified cipher params.\n\t         *\n\t         * @throws Error If neither the formatter nor the default formatter is set.\n\t         *\n\t         * @example\n\t         *\n\t         *     var string = cipherParams + '';\n\t         *     var string = cipherParams.toString();\n\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n\t         */\n\t        toString: function (formatter) {\n\t            return (formatter || this.formatter).stringify(this);\n\t        }\n\t    });\n\n\t    /**\n\t     * Format namespace.\n\t     */\n\t    var C_format = C.format = {};\n\n\t    /**\n\t     * OpenSSL formatting strategy.\n\t     */\n\t    var OpenSSLFormatter = C_format.OpenSSL = {\n\t        /**\n\t         * Converts a cipher params object to an OpenSSL-compatible string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The OpenSSL-compatible string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            // Shortcuts\n\t            var ciphertext = cipherParams.ciphertext;\n\t            var salt = cipherParams.salt;\n\n\t            // Format\n\t            if (salt) {\n\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n\t            } else {\n\t                var wordArray = ciphertext;\n\t            }\n\n\t            return wordArray.toString(Base64);\n\t        },\n\n\t        /**\n\t         * Converts an OpenSSL-compatible string to a cipher params object.\n\t         *\n\t         * @param {string} openSSLStr The OpenSSL-compatible string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n\t         */\n\t        parse: function (openSSLStr) {\n\t            // Parse base64\n\t            var ciphertext = Base64.parse(openSSLStr);\n\n\t            // Shortcut\n\t            var ciphertextWords = ciphertext.words;\n\n\t            // Test for salt\n\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {\n\t                // Extract salt\n\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n\t                // Remove salt from ciphertext\n\t                ciphertextWords.splice(0, 4);\n\t                ciphertext.sigBytes -= 16;\n\t            }\n\n\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL\n\t         */\n\t        cfg: Base.extend({\n\t            format: OpenSSLFormatter\n\t        }),\n\n\t        /**\n\t         * Encrypts a message.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Encrypt\n\t            var encryptor = cipher.createEncryptor(key, cfg);\n\t            var ciphertext = encryptor.finalize(message);\n\n\t            // Shortcut\n\t            var cipherCfg = encryptor.cfg;\n\n\t            // Create and return serializable cipher params\n\t            return CipherParams.create({\n\t                ciphertext: ciphertext,\n\t                key: key,\n\t                iv: cipherCfg.iv,\n\t                algorithm: cipher,\n\t                mode: cipherCfg.mode,\n\t                padding: cipherCfg.padding,\n\t                blockSize: cipher.blockSize,\n\t                formatter: cfg.format\n\t            });\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {WordArray} key The key.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, key, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Decrypt\n\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);\n\n\t            return plaintext;\n\t        },\n\n\t        /**\n\t         * Converts serialized ciphertext to CipherParams,\n\t         * else assumed CipherParams already and returns ciphertext unchanged.\n\t         *\n\t         * @param {CipherParams|string} ciphertext The ciphertext.\n\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n\t         *\n\t         * @return {CipherParams} The unserialized ciphertext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);\n\t         */\n\t        _parse: function (ciphertext, format) {\n\t            if (typeof ciphertext == 'string') {\n\t                return format.parse(ciphertext, this);\n\t            } else {\n\t                return ciphertext;\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Key derivation function namespace.\n\t     */\n\t    var C_kdf = C.kdf = {};\n\n\t    /**\n\t     * OpenSSL key derivation function.\n\t     */\n\t    var OpenSSLKdf = C_kdf.OpenSSL = {\n\t        /**\n\t         * Derives a key and IV from a password.\n\t         *\n\t         * @param {string} password The password to derive from.\n\t         * @param {number} keySize The size in words of the key to generate.\n\t         * @param {number} ivSize The size in words of the IV to generate.\n\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n\t         *\n\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n\t         */\n\t        execute: function (password, keySize, ivSize, salt) {\n\t            // Generate random salt\n\t            if (!salt) {\n\t                salt = WordArray.random(64/8);\n\t            }\n\n\t            // Derive key and IV\n\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);\n\n\t            // Separate key and IV\n\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n\t            key.sigBytes = keySize * 4;\n\n\t            // Return params\n\t            return CipherParams.create({ key: key, iv: iv, salt: salt });\n\t        }\n\t    };\n\n\t    /**\n\t     * A serializable cipher wrapper that derives the key from a password,\n\t     * and returns ciphertext as a serializable cipher params object.\n\t     */\n\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL\n\t         */\n\t        cfg: SerializableCipher.cfg.extend({\n\t            kdf: OpenSSLKdf\n\t        }),\n\n\t        /**\n\t         * Encrypts a message using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {WordArray|string} message The message to encrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {CipherParams} A cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');\n\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        encrypt: function (cipher, message, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Encrypt\n\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);\n\n\t            // Mix in derived params\n\t            ciphertext.mixIn(derivedParams);\n\n\t            return ciphertext;\n\t        },\n\n\t        /**\n\t         * Decrypts serialized ciphertext using a password.\n\t         *\n\t         * @param {Cipher} cipher The cipher algorithm to use.\n\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n\t         * @param {string} password The password.\n\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.\n\t         *\n\t         * @return {WordArray} The plaintext.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });\n\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });\n\t         */\n\t        decrypt: function (cipher, ciphertext, password, cfg) {\n\t            // Apply config defaults\n\t            cfg = this.cfg.extend(cfg);\n\n\t            // Convert string to CipherParams\n\t            ciphertext = this._parse(ciphertext, cfg.format);\n\n\t            // Derive key and other params\n\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);\n\n\t            // Add IV to config\n\t            cfg.iv = derivedParams.iv;\n\n\t            // Decrypt\n\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);\n\n\t            return plaintext;\n\t        }\n\t    });\n\t}());\n\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Cipher Feedback block mode.\n\t */\n\tCryptoJS.mode.CFB = (function () {\n\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    CFB.Encryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // Remember this block to use with next block\n\t            this._prevBlock = words.slice(offset, offset + blockSize);\n\t        }\n\t    });\n\n\t    CFB.Decryptor = CFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher;\n\t            var blockSize = cipher.blockSize;\n\n\t            // Remember this block to use with next block\n\t            var thisBlock = words.slice(offset, offset + blockSize);\n\n\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);\n\n\t            // This block becomes the previous block\n\t            this._prevBlock = thisBlock;\n\t        }\n\t    });\n\n\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {\n\t        // Shortcut\n\t        var iv = this._iv;\n\n\t        // Generate keystream\n\t        if (iv) {\n\t            var keystream = iv.slice(0);\n\n\t            // Remove IV for subsequent blocks\n\t            this._iv = undefined;\n\t        } else {\n\t            var keystream = this._prevBlock;\n\t        }\n\t        cipher.encryptBlock(keystream, 0);\n\n\t        // Encrypt\n\t        for (var i = 0; i < blockSize; i++) {\n\t            words[offset + i] ^= keystream[i];\n\t        }\n\t    }\n\n\t    return CFB;\n\t}());\n\n\n\treturn CryptoJS.mode.CFB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Counter block mode.\n\t */\n\tCryptoJS.mode.CTR = (function () {\n\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = CTR.Encryptor = CTR.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            var keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Increment counter\n\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTR.Decryptor = Encryptor;\n\n\t    return CTR;\n\t}());\n\n\n\treturn CryptoJS.mode.CTR;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/** @preserve\n\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c\n\t * derived from CryptoJS.mode.CTR\n\t * Jan Hruby jhruby.web@gmail.com\n\t */\n\tCryptoJS.mode.CTRGladman = (function () {\n\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();\n\n\t\tfunction incWord(word)\n\t\t{\n\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow\n\t\t\tvar b1 = (word >> 16)&0xff;\n\t\t\tvar b2 = (word >> 8)&0xff;\n\t\t\tvar b3 = word & 0xff;\n\n\t\t\tif (b1 === 0xff) // overflow b1\n\t\t\t{\n\t\t\tb1 = 0;\n\t\t\tif (b2 === 0xff)\n\t\t\t{\n\t\t\t\tb2 = 0;\n\t\t\t\tif (b3 === 0xff)\n\t\t\t\t{\n\t\t\t\t\tb3 = 0;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t++b3;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\t++b2;\n\t\t\t}\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t++b1;\n\t\t\t}\n\n\t\t\tword = 0;\n\t\t\tword += (b1 << 16);\n\t\t\tword += (b2 << 8);\n\t\t\tword += b3;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\tword += (0x01 << 24);\n\t\t\t}\n\t\t\treturn word;\n\t\t}\n\n\t\tfunction incCounter(counter)\n\t\t{\n\t\t\tif ((counter[0] = incWord(counter[0])) === 0)\n\t\t\t{\n\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8\n\t\t\t\tcounter[1] = incWord(counter[1]);\n\t\t\t}\n\t\t\treturn counter;\n\t\t}\n\n\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var counter = this._counter;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                counter = this._counter = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\n\t\t\t\tincCounter(counter);\n\n\t\t\t\tvar keystream = counter.slice(0);\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    CTRGladman.Decryptor = Encryptor;\n\n\t    return CTRGladman;\n\t}());\n\n\n\n\n\treturn CryptoJS.mode.CTRGladman;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Output Feedback block mode.\n\t */\n\tCryptoJS.mode.OFB = (function () {\n\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    var Encryptor = OFB.Encryptor = OFB.extend({\n\t        processBlock: function (words, offset) {\n\t            // Shortcuts\n\t            var cipher = this._cipher\n\t            var blockSize = cipher.blockSize;\n\t            var iv = this._iv;\n\t            var keystream = this._keystream;\n\n\t            // Generate keystream\n\t            if (iv) {\n\t                keystream = this._keystream = iv.slice(0);\n\n\t                // Remove IV for subsequent blocks\n\t                this._iv = undefined;\n\t            }\n\t            cipher.encryptBlock(keystream, 0);\n\n\t            // Encrypt\n\t            for (var i = 0; i < blockSize; i++) {\n\t                words[offset + i] ^= keystream[i];\n\t            }\n\t        }\n\t    });\n\n\t    OFB.Decryptor = Encryptor;\n\n\t    return OFB;\n\t}());\n\n\n\treturn CryptoJS.mode.OFB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Electronic Codebook block mode.\n\t */\n\tCryptoJS.mode.ECB = (function () {\n\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();\n\n\t    ECB.Encryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.encryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    ECB.Decryptor = ECB.extend({\n\t        processBlock: function (words, offset) {\n\t            this._cipher.decryptBlock(words, offset);\n\t        }\n\t    });\n\n\t    return ECB;\n\t}());\n\n\n\treturn CryptoJS.mode.ECB;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ANSI X.923 padding strategy.\n\t */\n\tCryptoJS.pad.AnsiX923 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcuts\n\t        var dataSigBytes = data.sigBytes;\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;\n\n\t        // Compute last byte position\n\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);\n\t        data.sigBytes += nPaddingBytes;\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Ansix923;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO 10126 padding strategy.\n\t */\n\tCryptoJS.pad.Iso10126 = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Count padding bytes\n\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;\n\n\t        // Pad\n\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).\n\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));\n\t    },\n\n\t    unpad: function (data) {\n\t        // Get number of padding bytes from last byte\n\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;\n\n\t        // Remove padding\n\t        data.sigBytes -= nPaddingBytes;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso10126;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * ISO/IEC 9797-1 Padding Method 2.\n\t */\n\tCryptoJS.pad.Iso97971 = {\n\t    pad: function (data, blockSize) {\n\t        // Add 0x80 byte\n\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));\n\n\t        // Zero pad the rest\n\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Remove zero padding\n\t        CryptoJS.pad.ZeroPadding.unpad(data);\n\n\t        // Remove one more byte -- the 0x80 byte\n\t        data.sigBytes--;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.Iso97971;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * Zero padding strategy.\n\t */\n\tCryptoJS.pad.ZeroPadding = {\n\t    pad: function (data, blockSize) {\n\t        // Shortcut\n\t        var blockSizeBytes = blockSize * 4;\n\n\t        // Pad\n\t        data.clamp();\n\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);\n\t    },\n\n\t    unpad: function (data) {\n\t        // Shortcut\n\t        var dataWords = data.words;\n\n\t        // Unpad\n\t        var i = data.sigBytes - 1;\n\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {\n\t            i--;\n\t        }\n\t        data.sigBytes = i + 1;\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.ZeroPadding;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t/**\n\t * A noop padding strategy.\n\t */\n\tCryptoJS.pad.NoPadding = {\n\t    pad: function () {\n\t    },\n\n\t    unpad: function () {\n\t    }\n\t};\n\n\n\treturn CryptoJS.pad.NoPadding;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function (undefined) {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var CipherParams = C_lib.CipherParams;\n\t    var C_enc = C.enc;\n\t    var Hex = C_enc.Hex;\n\t    var C_format = C.format;\n\n\t    var HexFormatter = C_format.Hex = {\n\t        /**\n\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.\n\t         *\n\t         * @param {CipherParams} cipherParams The cipher params object.\n\t         *\n\t         * @return {string} The hexadecimally encoded string.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);\n\t         */\n\t        stringify: function (cipherParams) {\n\t            return cipherParams.ciphertext.toString(Hex);\n\t        },\n\n\t        /**\n\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.\n\t         *\n\t         * @param {string} input The hexadecimally encoded string.\n\t         *\n\t         * @return {CipherParams} The cipher params object.\n\t         *\n\t         * @static\n\t         *\n\t         * @example\n\t         *\n\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);\n\t         */\n\t        parse: function (input) {\n\t            var ciphertext = Hex.parse(input);\n\t            return CipherParams.create({ ciphertext: ciphertext });\n\t        }\n\t    };\n\t}());\n\n\n\treturn CryptoJS.format.Hex;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Lookup tables\n\t    var SBOX = [];\n\t    var INV_SBOX = [];\n\t    var SUB_MIX_0 = [];\n\t    var SUB_MIX_1 = [];\n\t    var SUB_MIX_2 = [];\n\t    var SUB_MIX_3 = [];\n\t    var INV_SUB_MIX_0 = [];\n\t    var INV_SUB_MIX_1 = [];\n\t    var INV_SUB_MIX_2 = [];\n\t    var INV_SUB_MIX_3 = [];\n\n\t    // Compute lookup tables\n\t    (function () {\n\t        // Compute double table\n\t        var d = [];\n\t        for (var i = 0; i < 256; i++) {\n\t            if (i < 128) {\n\t                d[i] = i << 1;\n\t            } else {\n\t                d[i] = (i << 1) ^ 0x11b;\n\t            }\n\t        }\n\n\t        // Walk GF(2^8)\n\t        var x = 0;\n\t        var xi = 0;\n\t        for (var i = 0; i < 256; i++) {\n\t            // Compute sbox\n\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n\t            SBOX[x] = sx;\n\t            INV_SBOX[sx] = x;\n\n\t            // Compute multiplication\n\t            var x2 = d[x];\n\t            var x4 = d[x2];\n\t            var x8 = d[x4];\n\n\t            // Compute sub bytes, mix columns tables\n\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);\n\t            SUB_MIX_3[x] = t;\n\n\t            // Compute inv sub bytes, inv mix columns tables\n\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);\n\t            INV_SUB_MIX_3[sx] = t;\n\n\t            // Compute next counter\n\t            if (!x) {\n\t                x = xi = 1;\n\t            } else {\n\t                x = x2 ^ d[d[d[x8 ^ x2]]];\n\t                xi ^= d[d[xi]];\n\t            }\n\t        }\n\t    }());\n\n\t    // Precomputed Rcon lookup\n\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n\t    /**\n\t     * AES block cipher algorithm.\n\t     */\n\t    var AES = C_algo.AES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Skip reset of nRounds has been set before and key did not change\n\t            if (this._nRounds && this._keyPriorReset === this._key) {\n\t                return;\n\t            }\n\n\t            // Shortcuts\n\t            var key = this._keyPriorReset = this._key;\n\t            var keyWords = key.words;\n\t            var keySize = key.sigBytes / 4;\n\n\t            // Compute number of rounds\n\t            var nRounds = this._nRounds = keySize + 6;\n\n\t            // Compute number of key schedule rows\n\t            var ksRows = (nRounds + 1) * 4;\n\n\t            // Compute key schedule\n\t            var keySchedule = this._keySchedule = [];\n\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {\n\t                if (ksRow < keySize) {\n\t                    keySchedule[ksRow] = keyWords[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 1];\n\n\t                    if (!(ksRow % keySize)) {\n\t                        // Rot word\n\t                        t = (t << 8) | (t >>> 24);\n\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\n\t                        // Mix Rcon\n\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;\n\t                    } else if (keySize > 6 && ksRow % keySize == 4) {\n\t                        // Sub word\n\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];\n\t                    }\n\n\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n\t                }\n\t            }\n\n\t            // Compute inv key schedule\n\t            var invKeySchedule = this._invKeySchedule = [];\n\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {\n\t                var ksRow = ksRows - invKsRow;\n\n\t                if (invKsRow % 4) {\n\t                    var t = keySchedule[ksRow];\n\t                } else {\n\t                    var t = keySchedule[ksRow - 4];\n\t                }\n\n\t                if (invKsRow < 4 || ksRow <= 4) {\n\t                    invKeySchedule[invKsRow] = t;\n\t                } else {\n\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^\n\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];\n\t                }\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            // Swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\n\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);\n\n\t            // Inv swap 2nd and 4th rows\n\t            var t = M[offset + 1];\n\t            M[offset + 1] = M[offset + 3];\n\t            M[offset + 3] = t;\n\t        },\n\n\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n\t            // Shortcut\n\t            var nRounds = this._nRounds;\n\n\t            // Get input, add round key\n\t            var s0 = M[offset]     ^ keySchedule[0];\n\t            var s1 = M[offset + 1] ^ keySchedule[1];\n\t            var s2 = M[offset + 2] ^ keySchedule[2];\n\t            var s3 = M[offset + 3] ^ keySchedule[3];\n\n\t            // Key schedule row counter\n\t            var ksRow = 4;\n\n\t            // Rounds\n\t            for (var round = 1; round < nRounds; round++) {\n\t                // Shift rows, sub bytes, mix columns, add round key\n\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];\n\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];\n\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];\n\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];\n\n\t                // Update state\n\t                s0 = t0;\n\t                s1 = t1;\n\t                s2 = t2;\n\t                s3 = t3;\n\t            }\n\n\t            // Shift rows, sub bytes, add round key\n\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];\n\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];\n\n\t            // Set output\n\t            M[offset]     = t0;\n\t            M[offset + 1] = t1;\n\t            M[offset + 2] = t2;\n\t            M[offset + 3] = t3;\n\t        },\n\n\t        keySize: 256/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.AES = BlockCipher._createHelper(AES);\n\t}());\n\n\n\treturn CryptoJS.AES;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var WordArray = C_lib.WordArray;\n\t    var BlockCipher = C_lib.BlockCipher;\n\t    var C_algo = C.algo;\n\n\t    // Permuted Choice 1 constants\n\t    var PC1 = [\n\t        57, 49, 41, 33, 25, 17, 9,  1,\n\t        58, 50, 42, 34, 26, 18, 10, 2,\n\t        59, 51, 43, 35, 27, 19, 11, 3,\n\t        60, 52, 44, 36, 63, 55, 47, 39,\n\t        31, 23, 15, 7,  62, 54, 46, 38,\n\t        30, 22, 14, 6,  61, 53, 45, 37,\n\t        29, 21, 13, 5,  28, 20, 12, 4\n\t    ];\n\n\t    // Permuted Choice 2 constants\n\t    var PC2 = [\n\t        14, 17, 11, 24, 1,  5,\n\t        3,  28, 15, 6,  21, 10,\n\t        23, 19, 12, 4,  26, 8,\n\t        16, 7,  27, 20, 13, 2,\n\t        41, 52, 31, 37, 47, 55,\n\t        30, 40, 51, 45, 33, 48,\n\t        44, 49, 39, 56, 34, 53,\n\t        46, 42, 50, 36, 29, 32\n\t    ];\n\n\t    // Cumulative bit shift constants\n\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];\n\n\t    // SBOXes and round permutation constants\n\t    var SBOX_P = [\n\t        {\n\t            0x0: 0x808200,\n\t            0x10000000: 0x8000,\n\t            0x20000000: 0x808002,\n\t            0x30000000: 0x2,\n\t            0x40000000: 0x200,\n\t            0x50000000: 0x808202,\n\t            0x60000000: 0x800202,\n\t            0x70000000: 0x800000,\n\t            0x80000000: 0x202,\n\t            0x90000000: 0x800200,\n\t            0xa0000000: 0x8200,\n\t            0xb0000000: 0x808000,\n\t            0xc0000000: 0x8002,\n\t            0xd0000000: 0x800002,\n\t            0xe0000000: 0x0,\n\t            0xf0000000: 0x8202,\n\t            0x8000000: 0x0,\n\t            0x18000000: 0x808202,\n\t            0x28000000: 0x8202,\n\t            0x38000000: 0x8000,\n\t            0x48000000: 0x808200,\n\t            0x58000000: 0x200,\n\t            0x68000000: 0x808002,\n\t            0x78000000: 0x2,\n\t            0x88000000: 0x800200,\n\t            0x98000000: 0x8200,\n\t            0xa8000000: 0x808000,\n\t            0xb8000000: 0x800202,\n\t            0xc8000000: 0x800002,\n\t            0xd8000000: 0x8002,\n\t            0xe8000000: 0x202,\n\t            0xf8000000: 0x800000,\n\t            0x1: 0x8000,\n\t            0x10000001: 0x2,\n\t            0x20000001: 0x808200,\n\t            0x30000001: 0x800000,\n\t            0x40000001: 0x808002,\n\t            0x50000001: 0x8200,\n\t            0x60000001: 0x200,\n\t            0x70000001: 0x800202,\n\t            0x80000001: 0x808202,\n\t            0x90000001: 0x808000,\n\t            0xa0000001: 0x800002,\n\t            0xb0000001: 0x8202,\n\t            0xc0000001: 0x202,\n\t            0xd0000001: 0x800200,\n\t            0xe0000001: 0x8002,\n\t            0xf0000001: 0x0,\n\t            0x8000001: 0x808202,\n\t            0x18000001: 0x808000,\n\t            0x28000001: 0x800000,\n\t            0x38000001: 0x200,\n\t            0x48000001: 0x8000,\n\t            0x58000001: 0x800002,\n\t            0x68000001: 0x2,\n\t            0x78000001: 0x8202,\n\t            0x88000001: 0x8002,\n\t            0x98000001: 0x800202,\n\t            0xa8000001: 0x202,\n\t            0xb8000001: 0x808200,\n\t            0xc8000001: 0x800200,\n\t            0xd8000001: 0x0,\n\t            0xe8000001: 0x8200,\n\t            0xf8000001: 0x808002\n\t        },\n\t        {\n\t            0x0: 0x40084010,\n\t            0x1000000: 0x4000,\n\t            0x2000000: 0x80000,\n\t            0x3000000: 0x40080010,\n\t            0x4000000: 0x40000010,\n\t            0x5000000: 0x40084000,\n\t            0x6000000: 0x40004000,\n\t            0x7000000: 0x10,\n\t            0x8000000: 0x84000,\n\t            0x9000000: 0x40004010,\n\t            0xa000000: 0x40000000,\n\t            0xb000000: 0x84010,\n\t            0xc000000: 0x80010,\n\t            0xd000000: 0x0,\n\t            0xe000000: 0x4010,\n\t            0xf000000: 0x40080000,\n\t            0x800000: 0x40004000,\n\t            0x1800000: 0x84010,\n\t            0x2800000: 0x10,\n\t            0x3800000: 0x40004010,\n\t            0x4800000: 0x40084010,\n\t            0x5800000: 0x40000000,\n\t            0x6800000: 0x80000,\n\t            0x7800000: 0x40080010,\n\t            0x8800000: 0x80010,\n\t            0x9800000: 0x0,\n\t            0xa800000: 0x4000,\n\t            0xb800000: 0x40080000,\n\t            0xc800000: 0x40000010,\n\t            0xd800000: 0x84000,\n\t            0xe800000: 0x40084000,\n\t            0xf800000: 0x4010,\n\t            0x10000000: 0x0,\n\t            0x11000000: 0x40080010,\n\t            0x12000000: 0x40004010,\n\t            0x13000000: 0x40084000,\n\t            0x14000000: 0x40080000,\n\t            0x15000000: 0x10,\n\t            0x16000000: 0x84010,\n\t            0x17000000: 0x4000,\n\t            0x18000000: 0x4010,\n\t            0x19000000: 0x80000,\n\t            0x1a000000: 0x80010,\n\t            0x1b000000: 0x40000010,\n\t            0x1c000000: 0x84000,\n\t            0x1d000000: 0x40004000,\n\t            0x1e000000: 0x40000000,\n\t            0x1f000000: 0x40084010,\n\t            0x10800000: 0x84010,\n\t            0x11800000: 0x80000,\n\t            0x12800000: 0x40080000,\n\t            0x13800000: 0x4000,\n\t            0x14800000: 0x40004000,\n\t            0x15800000: 0x40084010,\n\t            0x16800000: 0x10,\n\t            0x17800000: 0x40000000,\n\t            0x18800000: 0x40084000,\n\t            0x19800000: 0x40000010,\n\t            0x1a800000: 0x40004010,\n\t            0x1b800000: 0x80010,\n\t            0x1c800000: 0x0,\n\t            0x1d800000: 0x4010,\n\t            0x1e800000: 0x40080010,\n\t            0x1f800000: 0x84000\n\t        },\n\t        {\n\t            0x0: 0x104,\n\t            0x100000: 0x0,\n\t            0x200000: 0x4000100,\n\t            0x300000: 0x10104,\n\t            0x400000: 0x10004,\n\t            0x500000: 0x4000004,\n\t            0x600000: 0x4010104,\n\t            0x700000: 0x4010000,\n\t            0x800000: 0x4000000,\n\t            0x900000: 0x4010100,\n\t            0xa00000: 0x10100,\n\t            0xb00000: 0x4010004,\n\t            0xc00000: 0x4000104,\n\t            0xd00000: 0x10000,\n\t            0xe00000: 0x4,\n\t            0xf00000: 0x100,\n\t            0x80000: 0x4010100,\n\t            0x180000: 0x4010004,\n\t            0x280000: 0x0,\n\t            0x380000: 0x4000100,\n\t            0x480000: 0x4000004,\n\t            0x580000: 0x10000,\n\t            0x680000: 0x10004,\n\t            0x780000: 0x104,\n\t            0x880000: 0x4,\n\t            0x980000: 0x100,\n\t            0xa80000: 0x4010000,\n\t            0xb80000: 0x10104,\n\t            0xc80000: 0x10100,\n\t            0xd80000: 0x4000104,\n\t            0xe80000: 0x4010104,\n\t            0xf80000: 0x4000000,\n\t            0x1000000: 0x4010100,\n\t            0x1100000: 0x10004,\n\t            0x1200000: 0x10000,\n\t            0x1300000: 0x4000100,\n\t            0x1400000: 0x100,\n\t            0x1500000: 0x4010104,\n\t            0x1600000: 0x4000004,\n\t            0x1700000: 0x0,\n\t            0x1800000: 0x4000104,\n\t            0x1900000: 0x4000000,\n\t            0x1a00000: 0x4,\n\t            0x1b00000: 0x10100,\n\t            0x1c00000: 0x4010000,\n\t            0x1d00000: 0x104,\n\t            0x1e00000: 0x10104,\n\t            0x1f00000: 0x4010004,\n\t            0x1080000: 0x4000000,\n\t            0x1180000: 0x104,\n\t            0x1280000: 0x4010100,\n\t            0x1380000: 0x0,\n\t            0x1480000: 0x10004,\n\t            0x1580000: 0x4000100,\n\t            0x1680000: 0x100,\n\t            0x1780000: 0x4010004,\n\t            0x1880000: 0x10000,\n\t            0x1980000: 0x4010104,\n\t            0x1a80000: 0x10104,\n\t            0x1b80000: 0x4000004,\n\t            0x1c80000: 0x4000104,\n\t            0x1d80000: 0x4010000,\n\t            0x1e80000: 0x4,\n\t            0x1f80000: 0x10100\n\t        },\n\t        {\n\t            0x0: 0x80401000,\n\t            0x10000: 0x80001040,\n\t            0x20000: 0x401040,\n\t            0x30000: 0x80400000,\n\t            0x40000: 0x0,\n\t            0x50000: 0x401000,\n\t            0x60000: 0x80000040,\n\t            0x70000: 0x400040,\n\t            0x80000: 0x80000000,\n\t            0x90000: 0x400000,\n\t            0xa0000: 0x40,\n\t            0xb0000: 0x80001000,\n\t            0xc0000: 0x80400040,\n\t            0xd0000: 0x1040,\n\t            0xe0000: 0x1000,\n\t            0xf0000: 0x80401040,\n\t            0x8000: 0x80001040,\n\t            0x18000: 0x40,\n\t            0x28000: 0x80400040,\n\t            0x38000: 0x80001000,\n\t            0x48000: 0x401000,\n\t            0x58000: 0x80401040,\n\t            0x68000: 0x0,\n\t            0x78000: 0x80400000,\n\t            0x88000: 0x1000,\n\t            0x98000: 0x80401000,\n\t            0xa8000: 0x400000,\n\t            0xb8000: 0x1040,\n\t            0xc8000: 0x80000000,\n\t            0xd8000: 0x400040,\n\t            0xe8000: 0x401040,\n\t            0xf8000: 0x80000040,\n\t            0x100000: 0x400040,\n\t            0x110000: 0x401000,\n\t            0x120000: 0x80000040,\n\t            0x130000: 0x0,\n\t            0x140000: 0x1040,\n\t            0x150000: 0x80400040,\n\t            0x160000: 0x80401000,\n\t            0x170000: 0x80001040,\n\t            0x180000: 0x80401040,\n\t            0x190000: 0x80000000,\n\t            0x1a0000: 0x80400000,\n\t            0x1b0000: 0x401040,\n\t            0x1c0000: 0x80001000,\n\t            0x1d0000: 0x400000,\n\t            0x1e0000: 0x40,\n\t            0x1f0000: 0x1000,\n\t            0x108000: 0x80400000,\n\t            0x118000: 0x80401040,\n\t            0x128000: 0x0,\n\t            0x138000: 0x401000,\n\t            0x148000: 0x400040,\n\t            0x158000: 0x80000000,\n\t            0x168000: 0x80001040,\n\t            0x178000: 0x40,\n\t            0x188000: 0x80000040,\n\t            0x198000: 0x1000,\n\t            0x1a8000: 0x80001000,\n\t            0x1b8000: 0x80400040,\n\t            0x1c8000: 0x1040,\n\t            0x1d8000: 0x80401000,\n\t            0x1e8000: 0x400000,\n\t            0x1f8000: 0x401040\n\t        },\n\t        {\n\t            0x0: 0x80,\n\t            0x1000: 0x1040000,\n\t            0x2000: 0x40000,\n\t            0x3000: 0x20000000,\n\t            0x4000: 0x20040080,\n\t            0x5000: 0x1000080,\n\t            0x6000: 0x21000080,\n\t            0x7000: 0x40080,\n\t            0x8000: 0x1000000,\n\t            0x9000: 0x20040000,\n\t            0xa000: 0x20000080,\n\t            0xb000: 0x21040080,\n\t            0xc000: 0x21040000,\n\t            0xd000: 0x0,\n\t            0xe000: 0x1040080,\n\t            0xf000: 0x21000000,\n\t            0x800: 0x1040080,\n\t            0x1800: 0x21000080,\n\t            0x2800: 0x80,\n\t            0x3800: 0x1040000,\n\t            0x4800: 0x40000,\n\t            0x5800: 0x20040080,\n\t            0x6800: 0x21040000,\n\t            0x7800: 0x20000000,\n\t            0x8800: 0x20040000,\n\t            0x9800: 0x0,\n\t            0xa800: 0x21040080,\n\t            0xb800: 0x1000080,\n\t            0xc800: 0x20000080,\n\t            0xd800: 0x21000000,\n\t            0xe800: 0x1000000,\n\t            0xf800: 0x40080,\n\t            0x10000: 0x40000,\n\t            0x11000: 0x80,\n\t            0x12000: 0x20000000,\n\t            0x13000: 0x21000080,\n\t            0x14000: 0x1000080,\n\t            0x15000: 0x21040000,\n\t            0x16000: 0x20040080,\n\t            0x17000: 0x1000000,\n\t            0x18000: 0x21040080,\n\t            0x19000: 0x21000000,\n\t            0x1a000: 0x1040000,\n\t            0x1b000: 0x20040000,\n\t            0x1c000: 0x40080,\n\t            0x1d000: 0x20000080,\n\t            0x1e000: 0x0,\n\t            0x1f000: 0x1040080,\n\t            0x10800: 0x21000080,\n\t            0x11800: 0x1000000,\n\t            0x12800: 0x1040000,\n\t            0x13800: 0x20040080,\n\t            0x14800: 0x20000000,\n\t            0x15800: 0x1040080,\n\t            0x16800: 0x80,\n\t            0x17800: 0x21040000,\n\t            0x18800: 0x40080,\n\t            0x19800: 0x21040080,\n\t            0x1a800: 0x0,\n\t            0x1b800: 0x21000000,\n\t            0x1c800: 0x1000080,\n\t            0x1d800: 0x40000,\n\t            0x1e800: 0x20040000,\n\t            0x1f800: 0x20000080\n\t        },\n\t        {\n\t            0x0: 0x10000008,\n\t            0x100: 0x2000,\n\t            0x200: 0x10200000,\n\t            0x300: 0x10202008,\n\t            0x400: 0x10002000,\n\t            0x500: 0x200000,\n\t            0x600: 0x200008,\n\t            0x700: 0x10000000,\n\t            0x800: 0x0,\n\t            0x900: 0x10002008,\n\t            0xa00: 0x202000,\n\t            0xb00: 0x8,\n\t            0xc00: 0x10200008,\n\t            0xd00: 0x202008,\n\t            0xe00: 0x2008,\n\t            0xf00: 0x10202000,\n\t            0x80: 0x10200000,\n\t            0x180: 0x10202008,\n\t            0x280: 0x8,\n\t            0x380: 0x200000,\n\t            0x480: 0x202008,\n\t            0x580: 0x10000008,\n\t            0x680: 0x10002000,\n\t            0x780: 0x2008,\n\t            0x880: 0x200008,\n\t            0x980: 0x2000,\n\t            0xa80: 0x10002008,\n\t            0xb80: 0x10200008,\n\t            0xc80: 0x0,\n\t            0xd80: 0x10202000,\n\t            0xe80: 0x202000,\n\t            0xf80: 0x10000000,\n\t            0x1000: 0x10002000,\n\t            0x1100: 0x10200008,\n\t            0x1200: 0x10202008,\n\t            0x1300: 0x2008,\n\t            0x1400: 0x200000,\n\t            0x1500: 0x10000000,\n\t            0x1600: 0x10000008,\n\t            0x1700: 0x202000,\n\t            0x1800: 0x202008,\n\t            0x1900: 0x0,\n\t            0x1a00: 0x8,\n\t            0x1b00: 0x10200000,\n\t            0x1c00: 0x2000,\n\t            0x1d00: 0x10002008,\n\t            0x1e00: 0x10202000,\n\t            0x1f00: 0x200008,\n\t            0x1080: 0x8,\n\t            0x1180: 0x202000,\n\t            0x1280: 0x200000,\n\t            0x1380: 0x10000008,\n\t            0x1480: 0x10002000,\n\t            0x1580: 0x2008,\n\t            0x1680: 0x10202008,\n\t            0x1780: 0x10200000,\n\t            0x1880: 0x10202000,\n\t            0x1980: 0x10200008,\n\t            0x1a80: 0x2000,\n\t            0x1b80: 0x202008,\n\t            0x1c80: 0x200008,\n\t            0x1d80: 0x0,\n\t            0x1e80: 0x10000000,\n\t            0x1f80: 0x10002008\n\t        },\n\t        {\n\t            0x0: 0x100000,\n\t            0x10: 0x2000401,\n\t            0x20: 0x400,\n\t            0x30: 0x100401,\n\t            0x40: 0x2100401,\n\t            0x50: 0x0,\n\t            0x60: 0x1,\n\t            0x70: 0x2100001,\n\t            0x80: 0x2000400,\n\t            0x90: 0x100001,\n\t            0xa0: 0x2000001,\n\t            0xb0: 0x2100400,\n\t            0xc0: 0x2100000,\n\t            0xd0: 0x401,\n\t            0xe0: 0x100400,\n\t            0xf0: 0x2000000,\n\t            0x8: 0x2100001,\n\t            0x18: 0x0,\n\t            0x28: 0x2000401,\n\t            0x38: 0x2100400,\n\t            0x48: 0x100000,\n\t            0x58: 0x2000001,\n\t            0x68: 0x2000000,\n\t            0x78: 0x401,\n\t            0x88: 0x100401,\n\t            0x98: 0x2000400,\n\t            0xa8: 0x2100000,\n\t            0xb8: 0x100001,\n\t            0xc8: 0x400,\n\t            0xd8: 0x2100401,\n\t            0xe8: 0x1,\n\t            0xf8: 0x100400,\n\t            0x100: 0x2000000,\n\t            0x110: 0x100000,\n\t            0x120: 0x2000401,\n\t            0x130: 0x2100001,\n\t            0x140: 0x100001,\n\t            0x150: 0x2000400,\n\t            0x160: 0x2100400,\n\t            0x170: 0x100401,\n\t            0x180: 0x401,\n\t            0x190: 0x2100401,\n\t            0x1a0: 0x100400,\n\t            0x1b0: 0x1,\n\t            0x1c0: 0x0,\n\t            0x1d0: 0x2100000,\n\t            0x1e0: 0x2000001,\n\t            0x1f0: 0x400,\n\t            0x108: 0x100400,\n\t            0x118: 0x2000401,\n\t            0x128: 0x2100001,\n\t            0x138: 0x1,\n\t            0x148: 0x2000000,\n\t            0x158: 0x100000,\n\t            0x168: 0x401,\n\t            0x178: 0x2100400,\n\t            0x188: 0x2000001,\n\t            0x198: 0x2100000,\n\t            0x1a8: 0x0,\n\t            0x1b8: 0x2100401,\n\t            0x1c8: 0x100401,\n\t            0x1d8: 0x400,\n\t            0x1e8: 0x2000400,\n\t            0x1f8: 0x100001\n\t        },\n\t        {\n\t            0x0: 0x8000820,\n\t            0x1: 0x20000,\n\t            0x2: 0x8000000,\n\t            0x3: 0x20,\n\t            0x4: 0x20020,\n\t            0x5: 0x8020820,\n\t            0x6: 0x8020800,\n\t            0x7: 0x800,\n\t            0x8: 0x8020000,\n\t            0x9: 0x8000800,\n\t            0xa: 0x20800,\n\t            0xb: 0x8020020,\n\t            0xc: 0x820,\n\t            0xd: 0x0,\n\t            0xe: 0x8000020,\n\t            0xf: 0x20820,\n\t            0x80000000: 0x800,\n\t            0x80000001: 0x8020820,\n\t            0x80000002: 0x8000820,\n\t            0x80000003: 0x8000000,\n\t            0x80000004: 0x8020000,\n\t            0x80000005: 0x20800,\n\t            0x80000006: 0x20820,\n\t            0x80000007: 0x20,\n\t            0x80000008: 0x8000020,\n\t            0x80000009: 0x820,\n\t            0x8000000a: 0x20020,\n\t            0x8000000b: 0x8020800,\n\t            0x8000000c: 0x0,\n\t            0x8000000d: 0x8020020,\n\t            0x8000000e: 0x8000800,\n\t            0x8000000f: 0x20000,\n\t            0x10: 0x20820,\n\t            0x11: 0x8020800,\n\t            0x12: 0x20,\n\t            0x13: 0x800,\n\t            0x14: 0x8000800,\n\t            0x15: 0x8000020,\n\t            0x16: 0x8020020,\n\t            0x17: 0x20000,\n\t            0x18: 0x0,\n\t            0x19: 0x20020,\n\t            0x1a: 0x8020000,\n\t            0x1b: 0x8000820,\n\t            0x1c: 0x8020820,\n\t            0x1d: 0x20800,\n\t            0x1e: 0x820,\n\t            0x1f: 0x8000000,\n\t            0x80000010: 0x20000,\n\t            0x80000011: 0x800,\n\t            0x80000012: 0x8020020,\n\t            0x80000013: 0x20820,\n\t            0x80000014: 0x20,\n\t            0x80000015: 0x8020000,\n\t            0x80000016: 0x8000000,\n\t            0x80000017: 0x8000820,\n\t            0x80000018: 0x8020820,\n\t            0x80000019: 0x8000020,\n\t            0x8000001a: 0x8000800,\n\t            0x8000001b: 0x0,\n\t            0x8000001c: 0x20800,\n\t            0x8000001d: 0x820,\n\t            0x8000001e: 0x20020,\n\t            0x8000001f: 0x8020800\n\t        }\n\t    ];\n\n\t    // Masks that select the SBOX input\n\t    var SBOX_MASK = [\n\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,\n\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f\n\t    ];\n\n\t    /**\n\t     * DES block cipher algorithm.\n\t     */\n\t    var DES = C_algo.DES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Select 56 bits according to PC1\n\t            var keyBits = [];\n\t            for (var i = 0; i < 56; i++) {\n\t                var keyBitPos = PC1[i] - 1;\n\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;\n\t            }\n\n\t            // Assemble 16 subkeys\n\t            var subKeys = this._subKeys = [];\n\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {\n\t                // Create subkey\n\t                var subKey = subKeys[nSubKey] = [];\n\n\t                // Shortcut\n\t                var bitShift = BIT_SHIFTS[nSubKey];\n\n\t                // Select 48 bits according to PC2\n\t                for (var i = 0; i < 24; i++) {\n\t                    // Select from the left 28 key bits\n\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);\n\n\t                    // Select from the right 28 key bits\n\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);\n\t                }\n\n\t                // Since each subkey is applied to an expanded 32-bit input,\n\t                // the subkey can be broken into 8 values scaled to 32-bits,\n\t                // which allows the key to be used without expansion\n\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);\n\t                for (var i = 1; i < 7; i++) {\n\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);\n\t                }\n\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);\n\t            }\n\n\t            // Compute inverse subkeys\n\t            var invSubKeys = this._invSubKeys = [];\n\t            for (var i = 0; i < 16; i++) {\n\t                invSubKeys[i] = subKeys[15 - i];\n\t            }\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._subKeys);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._doCryptBlock(M, offset, this._invSubKeys);\n\t        },\n\n\t        _doCryptBlock: function (M, offset, subKeys) {\n\t            // Get input\n\t            this._lBlock = M[offset];\n\t            this._rBlock = M[offset + 1];\n\n\t            // Initial permutation\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeLR.call(this, 1,  0x55555555);\n\n\t            // Rounds\n\t            for (var round = 0; round < 16; round++) {\n\t                // Shortcuts\n\t                var subKey = subKeys[round];\n\t                var lBlock = this._lBlock;\n\t                var rBlock = this._rBlock;\n\n\t                // Feistel function\n\t                var f = 0;\n\t                for (var i = 0; i < 8; i++) {\n\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];\n\t                }\n\t                this._lBlock = rBlock;\n\t                this._rBlock = lBlock ^ f;\n\t            }\n\n\t            // Undo swap from last round\n\t            var t = this._lBlock;\n\t            this._lBlock = this._rBlock;\n\t            this._rBlock = t;\n\n\t            // Final permutation\n\t            exchangeLR.call(this, 1,  0x55555555);\n\t            exchangeRL.call(this, 8,  0x00ff00ff);\n\t            exchangeRL.call(this, 2,  0x33333333);\n\t            exchangeLR.call(this, 16, 0x0000ffff);\n\t            exchangeLR.call(this, 4,  0x0f0f0f0f);\n\n\t            // Set output\n\t            M[offset] = this._lBlock;\n\t            M[offset + 1] = this._rBlock;\n\t        },\n\n\t        keySize: 64/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    // Swap bits across the left and right words\n\t    function exchangeLR(offset, mask) {\n\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;\n\t        this._rBlock ^= t;\n\t        this._lBlock ^= t << offset;\n\t    }\n\n\t    function exchangeRL(offset, mask) {\n\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;\n\t        this._lBlock ^= t;\n\t        this._rBlock ^= t << offset;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.DES = BlockCipher._createHelper(DES);\n\n\t    /**\n\t     * Triple-DES block cipher algorithm.\n\t     */\n\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\n\t            // Create DES instances\n\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));\n\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));\n\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));\n\t        },\n\n\t        encryptBlock: function (M, offset) {\n\t            this._des1.encryptBlock(M, offset);\n\t            this._des2.decryptBlock(M, offset);\n\t            this._des3.encryptBlock(M, offset);\n\t        },\n\n\t        decryptBlock: function (M, offset) {\n\t            this._des3.decryptBlock(M, offset);\n\t            this._des2.encryptBlock(M, offset);\n\t            this._des1.decryptBlock(M, offset);\n\t        },\n\n\t        keySize: 192/32,\n\n\t        ivSize: 64/32,\n\n\t        blockSize: 64/32\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.TripleDES = BlockCipher._createHelper(TripleDES);\n\t}());\n\n\n\treturn CryptoJS.TripleDES;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    /**\n\t     * RC4 stream cipher algorithm.\n\t     */\n\t    var RC4 = C_algo.RC4 = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var key = this._key;\n\t            var keyWords = key.words;\n\t            var keySigBytes = key.sigBytes;\n\n\t            // Init sbox\n\t            var S = this._S = [];\n\t            for (var i = 0; i < 256; i++) {\n\t                S[i] = i;\n\t            }\n\n\t            // Key setup\n\t            for (var i = 0, j = 0; i < 256; i++) {\n\t                var keyByteIndex = i % keySigBytes;\n\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;\n\n\t                j = (j + S[i] + keyByte) % 256;\n\n\t                // Swap\n\t                var t = S[i];\n\t                S[i] = S[j];\n\t                S[j] = t;\n\t            }\n\n\t            // Counters\n\t            this._i = this._j = 0;\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            M[offset] ^= generateKeystreamWord.call(this);\n\t        },\n\n\t        keySize: 256/32,\n\n\t        ivSize: 0\n\t    });\n\n\t    function generateKeystreamWord() {\n\t        // Shortcuts\n\t        var S = this._S;\n\t        var i = this._i;\n\t        var j = this._j;\n\n\t        // Generate keystream word\n\t        var keystreamWord = 0;\n\t        for (var n = 0; n < 4; n++) {\n\t            i = (i + 1) % 256;\n\t            j = (j + S[i]) % 256;\n\n\t            // Swap\n\t            var t = S[i];\n\t            S[i] = S[j];\n\t            S[j] = t;\n\n\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);\n\t        }\n\n\t        // Update counters\n\t        this._i = i;\n\t        this._j = j;\n\n\t        return keystreamWord;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4 = StreamCipher._createHelper(RC4);\n\n\t    /**\n\t     * Modified RC4 stream cipher algorithm.\n\t     */\n\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({\n\t        /**\n\t         * Configuration options.\n\t         *\n\t         * @property {number} drop The number of keystream words to drop. Default 192\n\t         */\n\t        cfg: RC4.cfg.extend({\n\t            drop: 192\n\t        }),\n\n\t        _doReset: function () {\n\t            RC4._doReset.call(this);\n\n\t            // Drop\n\t            for (var i = this.cfg.drop; i > 0; i--) {\n\t                generateKeystreamWord.call(this);\n\t            }\n\t        }\n\t    });\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);\n\t}());\n\n\n\treturn CryptoJS.RC4;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm\n\t     */\n\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Swap endian\n\t            for (var i = 0; i < 4; i++) {\n\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);\n\t            }\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.Rabbit = StreamCipher._createHelper(Rabbit);\n\t}());\n\n\n\treturn CryptoJS.Rabbit;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\tfactory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\t(function () {\n\t    // Shortcuts\n\t    var C = CryptoJS;\n\t    var C_lib = C.lib;\n\t    var StreamCipher = C_lib.StreamCipher;\n\t    var C_algo = C.algo;\n\n\t    // Reusable objects\n\t    var S  = [];\n\t    var C_ = [];\n\t    var G  = [];\n\n\t    /**\n\t     * Rabbit stream cipher algorithm.\n\t     *\n\t     * This is a legacy version that neglected to convert the key to little-endian.\n\t     * This error doesn't affect the cipher's security,\n\t     * but it does affect its compatibility with other implementations.\n\t     */\n\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({\n\t        _doReset: function () {\n\t            // Shortcuts\n\t            var K = this._key.words;\n\t            var iv = this.cfg.iv;\n\n\t            // Generate initial state values\n\t            var X = this._X = [\n\t                K[0], (K[3] << 16) | (K[2] >>> 16),\n\t                K[1], (K[0] << 16) | (K[3] >>> 16),\n\t                K[2], (K[1] << 16) | (K[0] >>> 16),\n\t                K[3], (K[2] << 16) | (K[1] >>> 16)\n\t            ];\n\n\t            // Generate initial counter values\n\t            var C = this._C = [\n\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),\n\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),\n\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),\n\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)\n\t            ];\n\n\t            // Carry bit\n\t            this._b = 0;\n\n\t            // Iterate the system four times\n\t            for (var i = 0; i < 4; i++) {\n\t                nextState.call(this);\n\t            }\n\n\t            // Modify the counters\n\t            for (var i = 0; i < 8; i++) {\n\t                C[i] ^= X[(i + 4) & 7];\n\t            }\n\n\t            // IV setup\n\t            if (iv) {\n\t                // Shortcuts\n\t                var IV = iv.words;\n\t                var IV_0 = IV[0];\n\t                var IV_1 = IV[1];\n\n\t                // Generate four subvectors\n\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);\n\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);\n\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);\n\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);\n\n\t                // Modify counter values\n\t                C[0] ^= i0;\n\t                C[1] ^= i1;\n\t                C[2] ^= i2;\n\t                C[3] ^= i3;\n\t                C[4] ^= i0;\n\t                C[5] ^= i1;\n\t                C[6] ^= i2;\n\t                C[7] ^= i3;\n\n\t                // Iterate the system four times\n\t                for (var i = 0; i < 4; i++) {\n\t                    nextState.call(this);\n\t                }\n\t            }\n\t        },\n\n\t        _doProcessBlock: function (M, offset) {\n\t            // Shortcut\n\t            var X = this._X;\n\n\t            // Iterate the system\n\t            nextState.call(this);\n\n\t            // Generate four keystream words\n\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);\n\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);\n\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);\n\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);\n\n\t            for (var i = 0; i < 4; i++) {\n\t                // Swap endian\n\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |\n\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);\n\n\t                // Encrypt\n\t                M[offset + i] ^= S[i];\n\t            }\n\t        },\n\n\t        blockSize: 128/32,\n\n\t        ivSize: 64/32\n\t    });\n\n\t    function nextState() {\n\t        // Shortcuts\n\t        var X = this._X;\n\t        var C = this._C;\n\n\t        // Save old counter values\n\t        for (var i = 0; i < 8; i++) {\n\t            C_[i] = C[i];\n\t        }\n\n\t        // Calculate new counter values\n\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;\n\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;\n\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;\n\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;\n\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;\n\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;\n\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;\n\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;\n\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;\n\n\t        // Calculate the g-values\n\t        for (var i = 0; i < 8; i++) {\n\t            var gx = X[i] + C[i];\n\n\t            // Construct high and low argument for squaring\n\t            var ga = gx & 0xffff;\n\t            var gb = gx >>> 16;\n\n\t            // Calculate high and low result of squaring\n\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;\n\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);\n\n\t            // High XOR low\n\t            G[i] = gh ^ gl;\n\t        }\n\n\t        // Calculate new state values\n\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;\n\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;\n\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;\n\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;\n\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;\n\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;\n\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;\n\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;\n\t    }\n\n\t    /**\n\t     * Shortcut functions to the cipher's object interface.\n\t     *\n\t     * @example\n\t     *\n\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);\n\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);\n\t     */\n\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);\n\t}());\n\n\n\treturn CryptoJS.RabbitLegacy;\n\n}));", ";(function (root, factory, undef) {\n\tif (typeof exports === \"object\") {\n\t\t// CommonJS\n\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));\n\t}\n\telse if (typeof define === \"function\" && define.amd) {\n\t\t// AMD\n\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);\n\t}\n\telse {\n\t\t// Global (browser)\n\t\troot.CryptoJS = factory(root.CryptoJS);\n\t}\n}(this, function (CryptoJS) {\n\n\treturn CryptoJS;\n\n}));", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Base = void 0;\nconst buffer_1 = require(\"buffer\");\nconst crypto_js_1 = __importDefault(require(\"crypto-js\"));\nclass Base {\n    /**\n     * print\n     * @desc Prints out a visual representation of the merkle tree.\n     * @example\n     *```js\n     *tree.print()\n     *```\n     */\n    print() {\n        Base.print(this);\n    }\n    /**\n     * bufferIndexOf\n     * @desc Returns the first index of which given buffer is found in array.\n     * @param {Buffer[]} haystack - Array of buffers.\n     * @param {Buffer} needle - Buffer to find.\n     * @return {Number} - Index number\n     *\n     * @example\n     * ```js\n     *const index = tree.bufferIndexOf(haystack, needle)\n     *```\n     */\n    _bufferIndexOf(array, element) {\n        for (let i = 0; i < array.length; i++) {\n            if (element.equals(array[i])) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * bufferify\n     * @desc Returns a buffer type for the given value.\n     * @param {String|Number|Object|Buffer|ArrayBuffer} value\n     * @return {Buffer}\n     *\n     * @example\n     * ```js\n     *const buf = MerkleTree.bufferify('0x1234')\n     *```\n     */\n    static bufferify(value) {\n        if (!buffer_1.Buffer.isBuffer(value)) {\n            // crypto-js support\n            if (typeof value === 'object' && value.words) {\n                return buffer_1.Buffer.from(value.toString(crypto_js_1.default.enc.Hex), 'hex');\n            }\n            else if (Base.isHexString(value)) {\n                return buffer_1.Buffer.from(value.replace(/^0x/, ''), 'hex');\n            }\n            else if (typeof value === 'string') {\n                return buffer_1.Buffer.from(value);\n            }\n            else if (typeof value === 'number') {\n                let s = value.toString();\n                if (s.length % 2) {\n                    s = `0${s}`;\n                }\n                return buffer_1.Buffer.from(s, 'hex');\n            }\n            else if (ArrayBuffer.isView(value)) {\n                return buffer_1.Buffer.from(value.buffer, value.byteOffset, value.byteLength);\n            }\n        }\n        return value;\n    }\n    /**\n     * isHexString\n     * @desc Returns true if value is a hex string.\n     * @param {String} value\n     * @return {Boolean}\n     *\n     * @example\n     * ```js\n     *console.log(MerkleTree.isHexString('0x1234'))\n     *```\n     */\n    static isHexString(v) {\n        return (typeof v === 'string' && /^(0x)?[0-9A-Fa-f]*$/.test(v));\n    }\n    /**\n     * print\n     * @desc Prints out a visual representation of the given merkle tree.\n     * @param {Object} tree - Merkle tree instance.\n     * @return {String}\n     * @example\n     *```js\n     *MerkleTree.print(tree)\n     *```\n     */\n    static print(tree) {\n        console.log(tree.toString());\n    }\n    /**\n     * bufferToHex\n     * @desc Returns a hex string with 0x prefix for given buffer.\n     * @param {Buffer} value\n     * @return {String}\n     * @example\n     *```js\n     *const hexStr = tree.bufferToHex(Buffer.from('A'))\n     *```\n     */\n    bufferToHex(value, withPrefix = true) {\n        return Base.bufferToHex(value, withPrefix);\n    }\n    /**\n     * bufferToHex\n     * @desc Returns a hex string with 0x prefix for given buffer.\n     * @param {Buffer} value\n     * @return {String}\n     * @example\n     *```js\n     *const hexStr = MerkleTree.bufferToHex(Buffer.from('A'))\n     *```\n     */\n    static bufferToHex(value, withPrefix = true) {\n        return `${withPrefix ? '0x' : ''}${(value || buffer_1.Buffer.alloc(0)).toString('hex')}`;\n    }\n    /**\n     * bufferify\n     * @desc Returns a buffer type for the given value.\n     * @param {String|Number|Object|Buffer} value\n     * @return {Buffer}\n     *\n     * @example\n     * ```js\n     *const buf = tree.bufferify('0x1234')\n     *```\n     */\n    bufferify(value) {\n        return Base.bufferify(value);\n    }\n    /**\n     * bufferifyFn\n     * @desc Returns a function that will bufferify the return value.\n     * @param {Function}\n     * @return {Function}\n     *\n     * @example\n     * ```js\n     *const fn = tree.bufferifyFn((value) => sha256(value))\n     *```\n     */\n    bufferifyFn(f) {\n        return (value) => {\n            const v = f(value);\n            if (buffer_1.Buffer.isBuffer(v)) {\n                return v;\n            }\n            if (this._isHexString(v)) {\n                return buffer_1.Buffer.from(v.replace('0x', ''), 'hex');\n            }\n            if (typeof v === 'string') {\n                return buffer_1.Buffer.from(v);\n            }\n            if (ArrayBuffer.isView(v)) {\n                return buffer_1.Buffer.from(v.buffer, v.byteOffset, v.byteLength);\n            }\n            // crypto-js support\n            return buffer_1.Buffer.from(f(crypto_js_1.default.enc.Hex.parse(value.toString('hex'))).toString(crypto_js_1.default.enc.Hex), 'hex');\n        };\n    }\n    /**\n     * isHexString\n     * @desc Returns true if value is a hex string.\n     * @param {String} value\n     * @return {Boolean}\n     *\n     * @example\n     * ```js\n     *console.log(MerkleTree.isHexString('0x1234'))\n     *```\n     */\n    _isHexString(value) {\n        return Base.isHexString(value);\n    }\n    /**\n     * log2\n     * @desc Returns the log2 of number.\n     * @param {Number} value\n     * @return {Number}\n     */\n    _log2(n) {\n        return n === 1 ? 0 : 1 + this._log2((n / 2) | 0);\n    }\n    /**\n     * zip\n     * @desc Returns true if value is a hex string.\n     * @param {String[]|Number[]|Buffer[]} a - first array\n     * @param {String[]|Number[]|Buffer[]} b -  second array\n     * @return {String[][]|Number[][]|Buffer[][]}\n     *\n     * @example\n     * ```js\n     *const zipped = tree.zip(['a', 'b'],['A', 'B'])\n     *console.log(zipped) // [ [ 'a', 'A' ], [ 'b', 'B' ] ]\n     *```\n     */\n    _zip(a, b) {\n        return a.map((e, i) => [e, b[i]]);\n    }\n}\nexports.Base = Base;\nexports.default = Base;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MerkleTree = void 0;\nconst buffer_1 = require(\"buffer\");\nconst buffer_reverse_1 = __importDefault(require(\"buffer-reverse\"));\nconst sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\nconst treeify_1 = __importDefault(require(\"treeify\"));\nconst Base_1 = __importDefault(require(\"./Base\"));\n/**\n * Class reprensenting a Merkle Tree\n * @namespace MerkleTree\n */\nclass MerkleTree extends Base_1.default {\n    /**\n     * @desc Constructs a Merkle Tree.\n     * All nodes and leaves are stored as Buffers.\n     * Lonely leaf nodes are promoted to the next level up without being hashed again.\n     * @param {Buffer[]} leaves - Array of hashed leaves. Each leaf must be a Buffer.\n     * @param {Function} hashFunction - Hash function to use for hashing leaves and nodes\n     * @param {Object} options - Additional options\n     * @example\n     *```js\n     *const MerkleTree = require('merkletreejs')\n     *const crypto = require('crypto')\n     *\n     *function sha256(data) {\n     *  // returns Buffer\n     *  return crypto.createHash('sha256').update(data).digest()\n     *}\n     *\n     *const leaves = ['a', 'b', 'c'].map(value => keccak(value))\n     *\n     *const tree = new MerkleTree(leaves, sha256)\n     *```\n     */\n    constructor(leaves, hashFn = sha256_1.default, options = {}) {\n        super();\n        this.duplicateOdd = false;\n        this.hashLeaves = false;\n        this.isBitcoinTree = false;\n        this.leaves = [];\n        this.layers = [];\n        this.sortLeaves = false;\n        this.sortPairs = false;\n        this.sort = false;\n        this.fillDefaultHash = null;\n        this.isBitcoinTree = !!options.isBitcoinTree;\n        this.hashLeaves = !!options.hashLeaves;\n        this.sortLeaves = !!options.sortLeaves;\n        this.sortPairs = !!options.sortPairs;\n        if (options.fillDefaultHash) {\n            if (typeof options.fillDefaultHash === 'function') {\n                this.fillDefaultHash = options.fillDefaultHash;\n            }\n            else if (buffer_1.Buffer.isBuffer(options.fillDefaultHash) || typeof options.fillDefaultHash === 'string') {\n                this.fillDefaultHash = (idx, hashFn) => options.fillDefaultHash;\n            }\n            else {\n                throw new Error('method \"fillDefaultHash\" must be a function, Buffer, or string');\n            }\n        }\n        this.sort = !!options.sort;\n        if (this.sort) {\n            this.sortLeaves = true;\n            this.sortPairs = true;\n        }\n        this.duplicateOdd = !!options.duplicateOdd;\n        this.hashFn = this.bufferifyFn(hashFn);\n        this.processLeaves(leaves);\n    }\n    processLeaves(leaves) {\n        if (this.hashLeaves) {\n            leaves = leaves.map(this.hashFn);\n        }\n        this.leaves = leaves.map(this.bufferify);\n        if (this.sortLeaves) {\n            this.leaves = this.leaves.sort(buffer_1.Buffer.compare);\n        }\n        if (this.fillDefaultHash) {\n            for (let i = 0; i < Math.pow(2, Math.ceil(Math.log2(this.leaves.length))); i++) {\n                if (i >= this.leaves.length) {\n                    this.leaves.push(this.bufferify(this.fillDefaultHash(i, this.hashFn)));\n                }\n            }\n        }\n        this.layers = [this.leaves];\n        this._createHashes(this.leaves);\n    }\n    _createHashes(nodes) {\n        while (nodes.length > 1) {\n            const layerIndex = this.layers.length;\n            this.layers.push([]);\n            for (let i = 0; i < nodes.length; i += 2) {\n                if (i + 1 === nodes.length) {\n                    if (nodes.length % 2 === 1) {\n                        let data = nodes[nodes.length - 1];\n                        let hash = data;\n                        // is bitcoin tree\n                        if (this.isBitcoinTree) {\n                            // Bitcoin method of duplicating the odd ending nodes\n                            data = buffer_1.Buffer.concat([buffer_reverse_1.default(data), buffer_reverse_1.default(data)]);\n                            hash = this.hashFn(data);\n                            hash = buffer_reverse_1.default(this.hashFn(hash));\n                            this.layers[layerIndex].push(hash);\n                            continue;\n                        }\n                        else {\n                            if (this.duplicateOdd) {\n                                // continue with creating layer\n                            }\n                            else {\n                                // push copy of hash and continue iteration\n                                this.layers[layerIndex].push(nodes[i]);\n                                continue;\n                            }\n                        }\n                    }\n                }\n                const left = nodes[i];\n                const right = i + 1 === nodes.length ? left : nodes[i + 1];\n                let data = null;\n                let combined = null;\n                if (this.isBitcoinTree) {\n                    combined = [buffer_reverse_1.default(left), buffer_reverse_1.default(right)];\n                }\n                else {\n                    combined = [left, right];\n                }\n                if (this.sortPairs) {\n                    combined.sort(buffer_1.Buffer.compare);\n                }\n                data = buffer_1.Buffer.concat(combined);\n                let hash = this.hashFn(data);\n                // double hash if bitcoin tree\n                if (this.isBitcoinTree) {\n                    hash = buffer_reverse_1.default(this.hashFn(hash));\n                }\n                this.layers[layerIndex].push(hash);\n            }\n            nodes = this.layers[layerIndex];\n        }\n    }\n    /**\n     * addLeaf\n     * @desc Adds a leaf to the tree and re-calculates layers.\n     * @param {String|Buffer} - Leaf\n     * @param {Boolean} - Set to true if the leaf should be hashed before being added to tree.\n     * @example\n     *```js\n     *tree.addLeaf(newLeaf)\n     *```\n     */\n    addLeaf(leaf, shouldHash = false) {\n        if (shouldHash) {\n            leaf = this.hashFn(leaf);\n        }\n        this.processLeaves(this.leaves.concat(leaf));\n    }\n    /**\n     * addLeaves\n     * @desc Adds multiple leaves to the tree and re-calculates layers.\n     * @param {String[]|Buffer[]} - Array of leaves\n     * @param {Boolean} - Set to true if the leaves should be hashed before being added to tree.\n     * @example\n     *```js\n     *tree.addLeaves(newLeaves)\n     *```\n     */\n    addLeaves(leaves, shouldHash = false) {\n        if (shouldHash) {\n            leaves = leaves.map(this.hashFn);\n        }\n        this.processLeaves(this.leaves.concat(leaves));\n    }\n    /**\n     * getLeaves\n     * @desc Returns array of leaves of Merkle Tree.\n     * @return {Buffer[]}\n     * @example\n     *```js\n     *const leaves = tree.getLeaves()\n     *```\n     */\n    getLeaves(values) {\n        if (Array.isArray(values)) {\n            if (this.hashLeaves) {\n                values = values.map(this.hashFn);\n                if (this.sortLeaves) {\n                    values = values.sort(buffer_1.Buffer.compare);\n                }\n            }\n            return this.leaves.filter(leaf => this._bufferIndexOf(values, leaf) !== -1);\n        }\n        return this.leaves;\n    }\n    /**\n     * getLeaf\n     * @desc Returns the leaf at the given index.\n     * @param {Number} - Index number\n     * @return {Buffer}\n     * @example\n     *```js\n     *const leaf = tree.getLeaf(1)\n     *```\n     */\n    getLeaf(index) {\n        if (index < 0 || index > this.leaves.length - 1) {\n            return buffer_1.Buffer.from([]);\n        }\n        return this.leaves[index];\n    }\n    /**\n     * getLeafIndex\n     * @desc Returns the index of the given leaf, or -1 if the leaf is not found.\n     * @param {String|Buffer} - Target leaf\n     * @return {number}\n     * @example\n     *```js\n     *const leaf = Buffer.from('abc')\n     *const index = tree.getLeafIndex(leaf)\n     *```\n     */\n    getLeafIndex(target) {\n        target = this.bufferify(target);\n        const leaves = this.getLeaves();\n        for (let i = 0; i < leaves.length; i++) {\n            const leaf = leaves[i];\n            if (leaf.equals(target)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n    /**\n     * getLeafCount\n     * @desc Returns the total number of leaves.\n     * @return {number}\n     * @example\n     *```js\n     *const count = tree.getLeafCount()\n     *```\n     */\n    getLeafCount() {\n        return this.leaves.length;\n    }\n    /**\n     * getHexLeaves\n     * @desc Returns array of leaves of Merkle Tree as hex strings.\n     * @return {String[]}\n     * @example\n     *```js\n     *const leaves = tree.getHexLeaves()\n     *```\n     */\n    getHexLeaves() {\n        return this.leaves.map(leaf => this.bufferToHex(leaf));\n    }\n    /**\n     * marshalLeaves\n     * @desc Returns array of leaves of Merkle Tree as a JSON string.\n     * @param {String[]|Buffer[]} - Merkle tree leaves\n     * @return {String} - List of leaves as JSON string\n     * @example\n     *```js\n     *const jsonStr = MerkleTree.marshalLeaves(leaves)\n     *```\n     */\n    static marshalLeaves(leaves) {\n        return JSON.stringify(leaves.map(leaf => MerkleTree.bufferToHex(leaf)), null, 2);\n    }\n    /**\n     * unmarshalLeaves\n     * @desc Returns array of leaves of Merkle Tree as a Buffers.\n     * @param {String|Object} - JSON stringified leaves\n     * @return {Buffer[]} - Unmarshalled list of leaves\n     * @example\n     *```js\n     *const leaves = MerkleTree.unmarshalLeaves(jsonStr)\n     *```\n     */\n    static unmarshalLeaves(jsonStr) {\n        let parsed = null;\n        if (typeof jsonStr === 'string') {\n            parsed = JSON.parse(jsonStr);\n        }\n        else if (jsonStr instanceof Object) {\n            parsed = jsonStr;\n        }\n        else {\n            throw new Error('Expected type of string or object');\n        }\n        if (!parsed) {\n            return [];\n        }\n        if (!Array.isArray(parsed)) {\n            throw new Error('Expected JSON string to be array');\n        }\n        return parsed.map(MerkleTree.bufferify);\n    }\n    /**\n     * getLayers\n     * @desc Returns multi-dimensional array of all layers of Merkle Tree, including leaves and root.\n     * @return {Buffer[]}\n     * @example\n     *```js\n     *const layers = tree.getLayers()\n     *```\n     */\n    getLayers() {\n        return this.layers;\n    }\n    /**\n     * getHexLayers\n     * @desc Returns multi-dimensional array of all layers of Merkle Tree, including leaves and root as hex strings.\n     * @return {String[]}\n     * @example\n     *```js\n     *const layers = tree.getHexLayers()\n     *```\n     */\n    getHexLayers() {\n        return this.layers.reduce((acc, item) => {\n            if (Array.isArray(item)) {\n                acc.push(item.map(layer => this.bufferToHex(layer)));\n            }\n            else {\n                acc.push(item);\n            }\n            return acc;\n        }, []);\n    }\n    /**\n     * getLayersFlat\n     * @desc Returns single flat array of all layers of Merkle Tree, including leaves and root.\n     * @return {Buffer[]}\n     * @example\n     *```js\n     *const layers = tree.getLayersFlat()\n     *```\n     */\n    getLayersFlat() {\n        const layers = this.layers.reduce((acc, item) => {\n            if (Array.isArray(item)) {\n                acc.unshift(...item);\n            }\n            else {\n                acc.unshift(item);\n            }\n            return acc;\n        }, []);\n        layers.unshift(buffer_1.Buffer.from([0]));\n        return layers;\n    }\n    /**\n     * getHexLayersFlat\n     * @desc Returns single flat array of all layers of Merkle Tree, including leaves and root as hex string.\n     * @return {String[]}\n     * @example\n     *```js\n     *const layers = tree.getHexLayersFlat()\n     *```\n     */\n    getHexLayersFlat() {\n        return this.getLayersFlat().map(layer => this.bufferToHex(layer));\n    }\n    /**\n     * getLayerCount\n     * @desc Returns the total number of layers.\n     * @return {number}\n     * @example\n     *```js\n     *const count = tree.getLayerCount()\n     *```\n     */\n    getLayerCount() {\n        return this.getLayers().length;\n    }\n    /**\n     * getRoot\n     * @desc Returns the Merkle root hash as a Buffer.\n     * @return {Buffer}\n     * @example\n     *```js\n     *const root = tree.getRoot()\n     *```\n     */\n    getRoot() {\n        if (this.layers.length === 0) {\n            return buffer_1.Buffer.from([]);\n        }\n        return this.layers[this.layers.length - 1][0] || buffer_1.Buffer.from([]);\n    }\n    /**\n     * getHexRoot\n     * @desc Returns the Merkle root hash as a hex string.\n     * @return {String}\n     * @example\n     *```js\n     *const root = tree.getHexRoot()\n     *```\n     */\n    getHexRoot() {\n        return this.bufferToHex(this.getRoot());\n    }\n    /**\n     * getProof\n     * @desc Returns the proof for a target leaf.\n     * @param {Buffer} leaf - Target leaf\n     * @param {Number} [index] - Target leaf index in leaves array.\n     * Use if there are leaves containing duplicate data in order to distinguish it.\n     * @return {Object[]} - Array of objects containing a position property of type string\n     * with values of 'left' or 'right' and a data property of type Buffer.\n     * @example\n     * ```js\n     *const proof = tree.getProof(leaves[2])\n     *```\n     *\n     * @example\n     *```js\n     *const leaves = ['a', 'b', 'a'].map(value => keccak(value))\n     *const tree = new MerkleTree(leaves, keccak)\n     *const proof = tree.getProof(leaves[2], 2)\n     *```\n     */\n    getProof(leaf, index) {\n        if (typeof leaf === 'undefined') {\n            throw new Error('leaf is required');\n        }\n        leaf = this.bufferify(leaf);\n        const proof = [];\n        if (!Number.isInteger(index)) {\n            index = -1;\n            for (let i = 0; i < this.leaves.length; i++) {\n                if (buffer_1.Buffer.compare(leaf, this.leaves[i]) === 0) {\n                    index = i;\n                }\n            }\n        }\n        if (index <= -1) {\n            return [];\n        }\n        for (let i = 0; i < this.layers.length; i++) {\n            const layer = this.layers[i];\n            const isRightNode = index % 2;\n            const pairIndex = (isRightNode ? index - 1\n                : this.isBitcoinTree && index === layer.length - 1 && i < this.layers.length - 1\n                    // Proof Generation for Bitcoin Trees\n                    ? index\n                    // Proof Generation for Non-Bitcoin Trees\n                    : index + 1);\n            if (pairIndex < layer.length) {\n                proof.push({\n                    position: isRightNode ? 'left' : 'right',\n                    data: layer[pairIndex]\n                });\n            }\n            // set index to parent index\n            index = (index / 2) | 0;\n        }\n        return proof;\n    }\n    /**\n     * getHexProof\n     * @desc Returns the proof for a target leaf as hex strings.\n     * @param {Buffer} leaf - Target leaf\n     * @param {Number} [index] - Target leaf index in leaves array.\n     * Use if there are leaves containing duplicate data in order to distinguish it.\n     * @return {String[]} - Proof array as hex strings.\n     * @example\n     * ```js\n     *const proof = tree.getHexProof(leaves[2])\n     *```\n     */\n    getHexProof(leaf, index) {\n        return this.getProof(leaf, index).map(item => this.bufferToHex(item.data));\n    }\n    /**\n    * getPositionalHexProof\n    * @desc Returns the proof for a target leaf as hex strings and the position in binary (left == 0).\n    * @param {Buffer} leaf - Target leaf\n    * @param {Number} [index] - Target leaf index in leaves array.\n    * Use if there are leaves containing duplicate data in order to distinguish it.\n    * @return {(string | number)[][]} - Proof array as hex strings. position at index 0\n    * @example\n    * ```js\n    *const proof = tree.getPositionalHexProof(leaves[2])\n    *```\n    */\n    getPositionalHexProof(leaf, index) {\n        return this.getProof(leaf, index).map(item => {\n            return [\n                item.position === 'left' ? 0 : 1,\n                this.bufferToHex(item.data)\n            ];\n        });\n    }\n    /**\n     * marshalProof\n     * @desc Returns proof array as JSON string.\n     * @param {String[]|Object[]} proof - Merkle tree proof array\n     * @return {String} - Proof array as JSON string.\n     * @example\n     * ```js\n     *const jsonStr = MerkleTree.marshalProof(proof)\n     *```\n     */\n    static marshalProof(proof) {\n        const json = proof.map(item => {\n            if (typeof item === 'string') {\n                return item;\n            }\n            if (buffer_1.Buffer.isBuffer(item)) {\n                return MerkleTree.bufferToHex(item);\n            }\n            return {\n                position: item.position,\n                data: MerkleTree.bufferToHex(item.data)\n            };\n        });\n        return JSON.stringify(json, null, 2);\n    }\n    /**\n     * unmarshalProof\n     * @desc Returns the proof for a target leaf as a list of Buffers.\n     * @param {String|Object} - Merkle tree leaves\n     * @return {String|Object} - Marshalled proof\n     * @example\n     * ```js\n     *const proof = MerkleTree.unmarshalProof(jsonStr)\n     *```\n     */\n    static unmarshalProof(jsonStr) {\n        let parsed = null;\n        if (typeof jsonStr === 'string') {\n            parsed = JSON.parse(jsonStr);\n        }\n        else if (jsonStr instanceof Object) {\n            parsed = jsonStr;\n        }\n        else {\n            throw new Error('Expected type of string or object');\n        }\n        if (!parsed) {\n            return [];\n        }\n        if (!Array.isArray(parsed)) {\n            throw new Error('Expected JSON string to be array');\n        }\n        return parsed.map(item => {\n            if (typeof item === 'string') {\n                return MerkleTree.bufferify(item);\n            }\n            else if (item instanceof Object) {\n                return {\n                    position: item.position,\n                    data: MerkleTree.bufferify(item.data)\n                };\n            }\n            else {\n                throw new Error('Expected item to be of type string or object');\n            }\n        });\n    }\n    /**\n     * getProofIndices\n     * @desc Returns the proof indices for given tree indices.\n     * @param {Number[]} treeIndices - Tree indices\n     * @param {Number} depth - Tree depth; number of layers.\n     * @return {Number[]} - Proof indices\n     * @example\n     * ```js\n     *const proofIndices = tree.getProofIndices([2,5,6], 4)\n     *console.log(proofIndices) // [ 23, 20, 19, 8, 3 ]\n     *```\n     */\n    getProofIndices(treeIndices, depth) {\n        const leafCount = Math.pow(2, depth);\n        let maximalIndices = new Set();\n        for (const index of treeIndices) {\n            let x = leafCount + index;\n            while (x > 1) {\n                maximalIndices.add(x ^ 1);\n                x = (x / 2) | 0;\n            }\n        }\n        const a = treeIndices.map(index => leafCount + index);\n        const b = Array.from(maximalIndices).sort((a, b) => a - b).reverse();\n        maximalIndices = a.concat(b);\n        const redundantIndices = new Set();\n        const proof = [];\n        for (let index of maximalIndices) {\n            if (!redundantIndices.has(index)) {\n                proof.push(index);\n                while (index > 1) {\n                    redundantIndices.add(index);\n                    if (!redundantIndices.has(index ^ 1))\n                        break;\n                    index = (index / 2) | 0;\n                }\n            }\n        }\n        return proof.filter(index => {\n            return !treeIndices.includes(index - leafCount);\n        });\n    }\n    getProofIndicesForUnevenTree(sortedLeafIndices, leavesCount) {\n        const depth = Math.ceil(Math.log2(leavesCount));\n        const unevenLayers = [];\n        for (let index = 0; index < depth; index++) {\n            const unevenLayer = leavesCount % 2 !== 0;\n            if (unevenLayer) {\n                unevenLayers.push({ index, leavesCount });\n            }\n            leavesCount = Math.ceil(leavesCount / 2);\n        }\n        const proofIndices = [];\n        let layerNodes = sortedLeafIndices;\n        for (let layerIndex = 0; layerIndex < depth; layerIndex++) {\n            const siblingIndices = layerNodes.map((index) => {\n                if (index % 2 === 0) {\n                    return index + 1;\n                }\n                return index - 1;\n            });\n            let proofNodeIndices = siblingIndices.filter((index) => !layerNodes.includes(index));\n            const unevenLayer = unevenLayers.find(({ index }) => index === layerIndex);\n            if (unevenLayer && layerNodes.includes(unevenLayer.leavesCount - 1)) {\n                proofNodeIndices = proofNodeIndices.slice(0, -1);\n            }\n            proofIndices.push(proofNodeIndices);\n            layerNodes = [...new Set(layerNodes.map((index) => {\n                    if (index % 2 === 0) {\n                        return index / 2;\n                    }\n                    if (index % 2 === 0) {\n                        return (index + 1) / 2;\n                    }\n                    return (index - 1) / 2;\n                }))];\n        }\n        return proofIndices;\n    }\n    /**\n     * getMultiProof\n     * @desc Returns the multiproof for given tree indices.\n     * @param {Number[]} indices - Tree indices.\n     * @return {Buffer[]} - Multiproofs\n     * @example\n     * ```js\n     *const indices = [2, 5, 6]\n     *const proof = tree.getMultiProof(indices)\n     *```\n     */\n    getMultiProof(tree, indices) {\n        if (!indices) {\n            indices = tree;\n            tree = this.getLayersFlat();\n        }\n        const isUneven = this.isUnevenTree();\n        if (isUneven) {\n            if (indices.every(Number.isInteger)) {\n                return this.getMultiProofForUnevenTree(indices);\n            }\n        }\n        if (!indices.every(Number.isInteger)) {\n            let els = indices;\n            if (this.sortPairs) {\n                els = els.sort(buffer_1.Buffer.compare);\n            }\n            let ids = els.map((el) => this._bufferIndexOf(this.leaves, el)).sort((a, b) => a === b ? 0 : a > b ? 1 : -1);\n            if (!ids.every((idx) => idx !== -1)) {\n                throw new Error('Element does not exist in Merkle tree');\n            }\n            const hashes = [];\n            const proof = [];\n            let nextIds = [];\n            for (let i = 0; i < this.layers.length; i++) {\n                const layer = this.layers[i];\n                for (let j = 0; j < ids.length; j++) {\n                    const idx = ids[j];\n                    const pairElement = this._getPairNode(layer, idx);\n                    hashes.push(layer[idx]);\n                    if (pairElement) {\n                        proof.push(pairElement);\n                    }\n                    nextIds.push((idx / 2) | 0);\n                }\n                ids = nextIds.filter((value, i, self) => self.indexOf(value) === i);\n                nextIds = [];\n            }\n            return proof.filter((value) => !hashes.includes(value));\n        }\n        return this.getProofIndices(indices, this._log2((tree.length / 2) | 0)).map(index => tree[index]);\n    }\n    getMultiProofForUnevenTree(tree, indices) {\n        if (!indices) {\n            indices = tree;\n            tree = this.getLayers();\n        }\n        let proofHashes = [];\n        let currentLayerIndices = indices;\n        for (const treeLayer of tree) {\n            const siblings = [];\n            for (const index of currentLayerIndices) {\n                if (index % 2 === 0) {\n                    const idx = index + 1;\n                    if (!currentLayerIndices.includes(idx)) {\n                        if (treeLayer[idx]) {\n                            siblings.push(treeLayer[idx]);\n                            continue;\n                        }\n                    }\n                }\n                const idx = index - 1;\n                if (!currentLayerIndices.includes(idx)) {\n                    if (treeLayer[idx]) {\n                        siblings.push(treeLayer[idx]);\n                        continue;\n                    }\n                }\n            }\n            proofHashes = proofHashes.concat(siblings);\n            const uniqueIndices = new Set();\n            for (const index of currentLayerIndices) {\n                if (index % 2 === 0) {\n                    uniqueIndices.add(index / 2);\n                    continue;\n                }\n                if (index % 2 === 0) {\n                    uniqueIndices.add((index + 1) / 2);\n                    continue;\n                }\n                uniqueIndices.add((index - 1) / 2);\n            }\n            currentLayerIndices = Array.from(uniqueIndices);\n        }\n        return proofHashes;\n    }\n    /**\n     * getHexMultiProof\n     * @desc Returns the multiproof for given tree indices as hex strings.\n     * @param {Number[]} indices - Tree indices.\n     * @return {String[]} - Multiproofs as hex strings.\n     * @example\n     * ```js\n     *const indices = [2, 5, 6]\n     *const proof = tree.getHexMultiProof(indices)\n     *```\n     */\n    getHexMultiProof(tree, indices) {\n        return this.getMultiProof(tree, indices).map((x) => this.bufferToHex(x));\n    }\n    /**\n     * getProofFlags\n     * @desc Returns list of booleans where proofs should be used instead of hashing.\n     * Proof flags are used in the Solidity multiproof verifiers.\n     * @param {Number[]|Buffer[]} leaves\n     * @param {Buffer[]} proofs\n     * @return {Boolean[]} - Boolean flags\n     * @example\n     * ```js\n     *const indices = [2, 5, 6]\n     *const proof = tree.getMultiProof(indices)\n     *const proofFlags = tree.getProofFlags(leaves, proof)\n     *```\n     */\n    getProofFlags(leaves, proofs) {\n        if (!Array.isArray(leaves) || leaves.length <= 0) {\n            throw new Error('Invalid Inputs!');\n        }\n        let ids;\n        if (leaves.every(Number.isInteger)) {\n            ids = leaves.sort((a, b) => a === b ? 0 : a > b ? 1 : -1); // Indices where passed\n        }\n        else {\n            ids = leaves.map((el) => this._bufferIndexOf(this.leaves, el)).sort((a, b) => a === b ? 0 : a > b ? 1 : -1);\n        }\n        if (!ids.every((idx) => idx !== -1)) {\n            throw new Error('Element does not exist in Merkle tree');\n        }\n        const _proofs = proofs.map(item => this.bufferify(item));\n        const tested = [];\n        const flags = [];\n        for (let index = 0; index < this.layers.length; index++) {\n            const layer = this.layers[index];\n            ids = ids.reduce((ids, idx) => {\n                const skipped = tested.includes(layer[idx]);\n                if (!skipped) {\n                    const pairElement = this._getPairNode(layer, idx);\n                    const proofUsed = _proofs.includes(layer[idx]) || _proofs.includes(pairElement);\n                    pairElement && flags.push(!proofUsed);\n                    tested.push(layer[idx]);\n                    tested.push(pairElement);\n                }\n                ids.push((idx / 2) | 0);\n                return ids;\n            }, []);\n        }\n        return flags;\n    }\n    /**\n     * verify\n     * @desc Returns true if the proof path (array of hashes) can connect the target node\n     * to the Merkle root.\n     * @param {Object[]} proof - Array of proof objects that should connect\n     * target node to Merkle root.\n     * @param {Buffer} targetNode - Target node Buffer\n     * @param {Buffer} root - Merkle root Buffer\n     * @return {Boolean}\n     * @example\n     *```js\n     *const root = tree.getRoot()\n     *const proof = tree.getProof(leaves[2])\n     *const verified = tree.verify(proof, leaves[2], root)\n     *```\n     */\n    verify(proof, targetNode, root) {\n        let hash = this.bufferify(targetNode);\n        root = this.bufferify(root);\n        if (!Array.isArray(proof) ||\n            !targetNode ||\n            !root) {\n            return false;\n        }\n        for (let i = 0; i < proof.length; i++) {\n            const node = proof[i];\n            let data = null;\n            let isLeftNode = null;\n            // case for when proof is hex values only\n            if (typeof node === 'string') {\n                data = this.bufferify(node);\n                isLeftNode = true;\n            }\n            else if (Array.isArray(node)) {\n                isLeftNode = (node[0] === 0);\n                data = this.bufferify(node[1]);\n            }\n            else if (buffer_1.Buffer.isBuffer(node)) {\n                data = node;\n                isLeftNode = true;\n            }\n            else if (node instanceof Object) {\n                data = this.bufferify(node.data);\n                isLeftNode = (node.position === 'left');\n            }\n            else {\n                throw new Error('Expected node to be of type string or object');\n            }\n            const buffers = [];\n            if (this.isBitcoinTree) {\n                buffers.push(buffer_reverse_1.default(hash));\n                buffers[isLeftNode ? 'unshift' : 'push'](buffer_reverse_1.default(data));\n                hash = this.hashFn(buffer_1.Buffer.concat(buffers));\n                hash = buffer_reverse_1.default(this.hashFn(hash));\n            }\n            else {\n                if (this.sortPairs) {\n                    if (buffer_1.Buffer.compare(hash, data) === -1) {\n                        buffers.push(hash, data);\n                        hash = this.hashFn(buffer_1.Buffer.concat(buffers));\n                    }\n                    else {\n                        buffers.push(data, hash);\n                        hash = this.hashFn(buffer_1.Buffer.concat(buffers));\n                    }\n                }\n                else {\n                    buffers.push(hash);\n                    buffers[isLeftNode ? 'unshift' : 'push'](data);\n                    hash = this.hashFn(buffer_1.Buffer.concat(buffers));\n                }\n            }\n        }\n        return buffer_1.Buffer.compare(hash, root) === 0;\n    }\n    /**\n     * verifyMultiProof\n     * @desc Returns true if the multiproofs can connect the leaves to the Merkle root.\n     * @param {Buffer} root - Merkle tree root\n     * @param {Number[]} proofIndices - Leave indices for proof\n     * @param {Buffer[]} proofLeaves - Leaf values at indices for proof\n     * @param {Number} leavesCount - Count of original leaves\n     * @param {Buffer[]} proof - Multiproofs given indices\n     * @return {Boolean}\n     * @example\n     *```js\n     *const leaves = tree.getLeaves()\n     *const root = tree.getRoot()\n     *const treeFlat = tree.getLayersFlat()\n     *const leavesCount = leaves.length\n     *const proofIndices = [2, 5, 6]\n     *const proofLeaves = proofIndices.map(i => leaves[i])\n     *const proof = tree.getMultiProof(treeFlat, indices)\n     *const verified = tree.verifyMultiProof(root, proofIndices, proofLeaves, leavesCount, proof)\n     *```\n     */\n    verifyMultiProof(root, proofIndices, proofLeaves, leavesCount, proof) {\n        const isUneven = this.isUnevenTree();\n        if (isUneven) {\n            // TODO: combine these functions and simplify\n            return this.verifyMultiProofForUnevenTree(root, proofIndices, proofLeaves, leavesCount, proof);\n        }\n        const depth = Math.ceil(Math.log2(leavesCount));\n        root = this.bufferify(root);\n        proofLeaves = proofLeaves.map(leaf => this.bufferify(leaf));\n        proof = proof.map(leaf => this.bufferify(leaf));\n        const tree = {};\n        for (const [index, leaf] of this._zip(proofIndices, proofLeaves)) {\n            tree[(Math.pow(2, depth)) + index] = leaf;\n        }\n        for (const [index, proofitem] of this._zip(this.getProofIndices(proofIndices, depth), proof)) {\n            tree[index] = proofitem;\n        }\n        let indexqueue = Object.keys(tree).map(value => +value).sort((a, b) => a - b);\n        indexqueue = indexqueue.slice(0, indexqueue.length - 1);\n        let i = 0;\n        while (i < indexqueue.length) {\n            const index = indexqueue[i];\n            if (index >= 2 && ({}).hasOwnProperty.call(tree, index ^ 1)) {\n                let pair = [tree[index - (index % 2)], tree[index - (index % 2) + 1]];\n                if (this.sortPairs) {\n                    pair = pair.sort(buffer_1.Buffer.compare);\n                }\n                const hash = pair[1] ? this.hashFn(buffer_1.Buffer.concat(pair)) : pair[0];\n                tree[(index / 2) | 0] = hash;\n                indexqueue.push((index / 2) | 0);\n            }\n            i += 1;\n        }\n        return !proofIndices.length || (({}).hasOwnProperty.call(tree, 1) && tree[1].equals(root));\n    }\n    verifyMultiProofWithFlags(root, leaves, proofs, proofFlag) {\n        root = this.bufferify(root);\n        leaves = leaves.map(this.bufferify);\n        proofs = proofs.map(this.bufferify);\n        const leavesLen = leaves.length;\n        const totalHashes = proofFlag.length;\n        const hashes = [];\n        let leafPos = 0;\n        let hashPos = 0;\n        let proofPos = 0;\n        for (let i = 0; i < totalHashes; i++) {\n            const bufA = proofFlag[i] ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++]) : proofs[proofPos++];\n            const bufB = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            const buffers = [bufA, bufB].sort(buffer_1.Buffer.compare);\n            hashes[i] = this.hashFn(buffer_1.Buffer.concat(buffers));\n        }\n        return buffer_1.Buffer.compare(hashes[totalHashes - 1], root) === 0;\n    }\n    verifyMultiProofForUnevenTree(root, indices, leaves, leavesCount, proof) {\n        root = this.bufferify(root);\n        leaves = leaves.map(leaf => this.bufferify(leaf));\n        proof = proof.map(leaf => this.bufferify(leaf));\n        const computedRoot = this.calculateRootForUnevenTree(indices, leaves, leavesCount, proof);\n        return root.equals(computedRoot);\n    }\n    /**\n     * getDepth\n     * @desc Returns the tree depth (number of layers)\n     * @return {Number}\n     * @example\n     *```js\n     *const depth = tree.getDepth()\n     *```\n     */\n    getDepth() {\n        return this.getLayers().length - 1;\n    }\n    /**\n     * getLayersAsObject\n     * @desc Returns the layers as nested objects instead of an array.\n     * @example\n     *```js\n     *const layersObj = tree.getLayersAsObject()\n     *```\n     */\n    getLayersAsObject() {\n        const layers = this.getLayers().map((layer) => layer.map((value) => this.bufferToHex(value, false)));\n        const objs = [];\n        for (let i = 0; i < layers.length; i++) {\n            const arr = [];\n            for (let j = 0; j < layers[i].length; j++) {\n                const obj = { [layers[i][j]]: null };\n                if (objs.length) {\n                    obj[layers[i][j]] = {};\n                    const a = objs.shift();\n                    const akey = Object.keys(a)[0];\n                    obj[layers[i][j]][akey] = a[akey];\n                    if (objs.length) {\n                        const b = objs.shift();\n                        const bkey = Object.keys(b)[0];\n                        obj[layers[i][j]][bkey] = b[bkey];\n                    }\n                }\n                arr.push(obj);\n            }\n            objs.push(...arr);\n        }\n        return objs[0];\n    }\n    /**\n     * verify\n     * @desc Returns true if the proof path (array of hashes) can connect the target node\n     * to the Merkle root.\n     * @param {Object[]} proof - Array of proof objects that should connect\n     * target node to Merkle root.\n     * @param {Buffer} targetNode - Target node Buffer\n     * @param {Buffer} root - Merkle root Buffer\n     * @param {Function} hashFunction - Hash function for hashing leaves and nodes\n     * @param {Object} options - Additional options\n     * @return {Boolean}\n     * @example\n     *```js\n     *const verified = MerkleTree.verify(proof, leaf, root, sha256, options)\n     *```\n     */\n    static verify(proof, targetNode, root, hashFn = sha256_1.default, options = {}) {\n        const tree = new MerkleTree([], hashFn, options);\n        return tree.verify(proof, targetNode, root);\n    }\n    /**\n     * getMultiProof\n     * @desc Returns the multiproof for given tree indices.\n     * @param {Buffer[]} tree - Tree as a flat array.\n     * @param {Number[]} indices - Tree indices.\n     * @return {Buffer[]} - Multiproofs\n     *\n     *@example\n     * ```js\n     *const flatTree = tree.getLayersFlat()\n     *const indices = [2, 5, 6]\n     *const proof = MerkleTree.getMultiProof(flatTree, indices)\n     *```\n     */\n    static getMultiProof(tree, indices) {\n        const t = new MerkleTree([]);\n        return t.getMultiProof(tree, indices);\n    }\n    /**\n     * resetTree\n     * @desc Resets the tree by clearing the leaves and layers.\n     * @example\n     *```js\n     *tree.resetTree()\n     *```\n     */\n    resetTree() {\n        this.leaves = [];\n        this.layers = [];\n    }\n    /**\n     * getPairNode\n     * @desc Returns the node at the index for given layer.\n     * @param {Buffer[]} layer - Tree layer\n     * @param {Number} index - Index at layer.\n     * @return {Buffer} - Node\n     *\n     *@example\n     * ```js\n     *const node = tree.getPairNode(layer, index)\n     *```\n     */\n    _getPairNode(layer, idx) {\n        const pairIdx = idx % 2 === 0 ? idx + 1 : idx - 1;\n        if (pairIdx < layer.length) {\n            return layer[pairIdx];\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * toTreeString\n     * @desc Returns a visual representation of the merkle tree as a string.\n     * @return {String}\n     * @example\n     *```js\n     *console.log(tree.toTreeString())\n     *```\n     */\n    _toTreeString() {\n        const obj = this.getLayersAsObject();\n        return treeify_1.default.asTree(obj, true);\n    }\n    /**\n     * toString\n     * @desc Returns a visual representation of the merkle tree as a string.\n     * @example\n     *```js\n     *console.log(tree.toString())\n     *```\n     */\n    toString() {\n        return this._toTreeString();\n    }\n    isUnevenTree(treeLayers) {\n        const depth = (treeLayers === null || treeLayers === void 0 ? void 0 : treeLayers.length) || this.getDepth();\n        return !this.isPowOf2(depth);\n    }\n    isPowOf2(v) {\n        return v && !(v & (v - 1));\n    }\n    calculateRootForUnevenTree(leafIndices, leafHashes, totalLeavesCount, proofHashes) {\n        const leafTuples = this._zip(leafIndices, leafHashes).sort(([indexA], [indexB]) => indexA - indexB);\n        const leafTupleIndices = leafTuples.map(([index]) => index);\n        const proofIndices = this.getProofIndicesForUnevenTree(leafTupleIndices, totalLeavesCount);\n        let nextSliceStart = 0;\n        const proofTuplesByLayers = [];\n        for (let i = 0; i < proofIndices.length; i++) {\n            const indices = proofIndices[i];\n            const sliceStart = nextSliceStart;\n            nextSliceStart += indices.length;\n            proofTuplesByLayers[i] = this._zip(indices, proofHashes.slice(sliceStart, nextSliceStart));\n        }\n        const tree = [leafTuples];\n        for (let layerIndex = 0; layerIndex < proofTuplesByLayers.length; layerIndex++) {\n            const currentLayer = proofTuplesByLayers[layerIndex].concat(tree[layerIndex]).sort(([indexA], [indexB]) => indexA - indexB)\n                .map(([, hash]) => hash);\n            const s = tree[layerIndex].map(([layerIndex]) => layerIndex);\n            const parentIndices = [...new Set(s.map((index) => {\n                    if (index % 2 === 0) {\n                        return index / 2;\n                    }\n                    if (index % 2 === 0) {\n                        return (index + 1) / 2;\n                    }\n                    return (index - 1) / 2;\n                }))];\n            const parentLayer = [];\n            for (let i = 0; i < parentIndices.length; i++) {\n                const parentNodeTreeIndex = parentIndices[i];\n                const bufA = currentLayer[i * 2];\n                const bufB = currentLayer[i * 2 + 1];\n                const hash = bufB ? this.hashFn(buffer_1.Buffer.concat([bufA, bufB])) : bufA;\n                parentLayer.push([parentNodeTreeIndex, hash]);\n            }\n            tree.push(parentLayer);\n        }\n        return tree[tree.length - 1][0][1];\n    }\n}\nexports.MerkleTree = MerkleTree;\nif (typeof window !== 'undefined') {\n    ;\n    window.MerkleTree = MerkleTree;\n}\nexports.default = MerkleTree;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MerkleMountainRange = void 0;\nconst buffer_1 = require(\"buffer\");\nconst sha256_1 = __importDefault(require(\"crypto-js/sha256\"));\nconst Base_1 = __importDefault(require(\"./Base\"));\n// @credit: https://github.com/wanseob/solidity-mmr\n/**\n * @desc The index of this MMR implementation starts from 1 not 0.\n */\nclass MerkleMountainRange extends Base_1.default {\n    constructor(hashFn = sha256_1.default, leaves = [], hashLeafFn, peakBaggingFn, hashBranchFn) {\n        super();\n        this.root = buffer_1.Buffer.alloc(0);\n        this.size = 0;\n        this.width = 0;\n        this.hashes = {};\n        this.data = {};\n        leaves = leaves.map(this.bufferify);\n        this.hashFn = this.bufferifyFn(hashFn);\n        this.hashLeafFn = hashLeafFn;\n        this.peakBaggingFn = peakBaggingFn;\n        this.hashBranchFn = hashBranchFn;\n        for (const leaf of leaves) {\n            this.append(leaf);\n        }\n    }\n    /**\n     * @desc This only stores the hashed value of the leaf.\n     * If you need to retrieve the detail data later, use a map to store them.\n     */\n    append(data) {\n        data = this.bufferify(data);\n        const dataHash = this.hashFn(data);\n        const dataHashHex = this.bufferToHex(dataHash);\n        if (!this.data[dataHashHex] || this.bufferToHex(this.hashFn(this.data[dataHashHex])) !== dataHashHex) {\n            this.data[dataHashHex] = data;\n        }\n        const leaf = this.hashLeaf(this.size + 1, dataHash);\n        this.hashes[this.size + 1] = leaf;\n        this.width += 1;\n        // find peaks for enlarged tree\n        const peakIndexes = this.getPeakIndexes(this.width);\n        // the right most peak's value is the new size of the updated tree\n        this.size = this.getSize(this.width);\n        // starting from the left-most peak, get all peak hashes\n        const peaks = [];\n        for (let i = 0; i < peakIndexes.length; i++) {\n            peaks[i] = this._getOrCreateNode(peakIndexes[i]);\n        }\n        // update the tree root hash\n        this.root = this.peakBagging(this.width, peaks);\n    }\n    /**\n     * @desc It returns the hash of a leaf node with hash(M | DATA )\n     *       M is the index of the node.\n     */\n    hashLeaf(index, dataHash) {\n        dataHash = this.bufferify(dataHash);\n        if (this.hashLeafFn) {\n            return this.bufferify(this.hashLeafFn(index, dataHash));\n        }\n        return this.hashFn(buffer_1.Buffer.concat([this.bufferify(index), dataHash]));\n    }\n    /**\n     * @desc It returns the hash a parent node with hash(M | Left child | Right child)\n     *       M is the index of the node.\n     */\n    hashBranch(index, left, right) {\n        if (this.hashBranchFn) {\n            return this.bufferify(this.hashBranchFn(index, left, right));\n        }\n        return this.hashFn(buffer_1.Buffer.concat([this.bufferify(index), this.bufferify(left), this.bufferify(right)]));\n    }\n    getPeaks() {\n        const peakIndexes = this.getPeakIndexes(this.width);\n        const peaks = [];\n        for (let i = 0; i < peakIndexes.length; i++) {\n            peaks[i] = this.hashes[peakIndexes[i]];\n        }\n        return peaks;\n    }\n    getLeafIndex(width) {\n        if (width % 2 === 1) {\n            return this.getSize(width);\n        }\n        return this.getSize(width - 1) + 1;\n    }\n    /**\n     * @desc It returns all peaks of the smallest merkle mountain range tree which includes\n     *       the given index(size).\n     */\n    getPeakIndexes(width) {\n        const numPeaks = this.numOfPeaks(width);\n        const peakIndexes = [];\n        let count = 0;\n        let size = 0;\n        for (let i = 255; i > 0; i--) {\n            if ((width & (1 << (i - 1))) !== 0) {\n                // peak exists\n                size = size + (1 << i) - 1;\n                peakIndexes[count++] = size;\n                if (peakIndexes.length >= numPeaks) {\n                    break;\n                }\n            }\n        }\n        if (count !== peakIndexes.length) {\n            throw new Error('invalid bit calculation');\n        }\n        return peakIndexes;\n    }\n    numOfPeaks(width) {\n        let bits = width;\n        let num = 0;\n        while (bits > 0) {\n            if (bits % 2 === 1) {\n                num++;\n            }\n            bits = bits >> 1;\n        }\n        return num;\n    }\n    peakBagging(width, peaks) {\n        const size = this.getSize(width);\n        if (this.numOfPeaks(width) !== peaks.length) {\n            throw new Error('received invalid number of peaks');\n        }\n        if (width === 0 && !peaks.length) {\n            return buffer_1.Buffer.alloc(0);\n        }\n        if (this.peakBaggingFn) {\n            return this.bufferify(this.peakBaggingFn(size, peaks));\n        }\n        return this.hashFn(buffer_1.Buffer.concat([this.bufferify(size), ...peaks.map(this.bufferify)]));\n    }\n    /**\n     * @desc It returns the size of the tree.\n     */\n    getSize(width) {\n        return (width << 1) - this.numOfPeaks(width);\n    }\n    /**\n     * @desc It returns the root value of the tree.\n     */\n    getRoot() {\n        return this.root;\n    }\n    getHexRoot() {\n        return this.bufferToHex(this.getRoot());\n    }\n    /**\n     * @dev It returns the hash value of a node for the given position. Note that the index starts from 1.\n     */\n    getNode(index) {\n        return this.hashes[index];\n    }\n    /**\n     * @desc It returns the height of the highest peak.\n     */\n    mountainHeight(size) {\n        let height = 1;\n        while (1 << height <= size + height) {\n            height++;\n        }\n        return height - 1;\n    }\n    /**\n     * @desc It returns the height of the index.\n     */\n    heightAt(index) {\n        let reducedIndex = index;\n        let peakIndex = 0;\n        let height = 0;\n        // if an index has a left mountain then subtract the mountain\n        while (reducedIndex > peakIndex) {\n            reducedIndex -= (1 << height) - 1;\n            height = this.mountainHeight(reducedIndex);\n            peakIndex = (1 << height) - 1;\n        }\n        // index is on the right slope\n        return height - (peakIndex - reducedIndex);\n    }\n    /**\n     * @desc It returns whether the index is the leaf node or not\n     */\n    isLeaf(index) {\n        return this.heightAt(index) === 1;\n    }\n    /**\n     * @desc It returns the children when it is a parent node.\n     */\n    getChildren(index) {\n        const left = index - (1 << (this.heightAt(index) - 1));\n        const right = index - 1;\n        if (left === right) {\n            throw new Error('not a parent');\n        }\n        return [left, right];\n    }\n    /**\n     * @desc It returns a merkle proof for a leaf. Note that the index starts from 1.\n     */\n    getMerkleProof(index) {\n        if (index > this.size) {\n            throw new Error('out of range');\n        }\n        if (!this.isLeaf(index)) {\n            throw new Error('not a leaf');\n        }\n        const root = this.root;\n        const width = this.width;\n        // find all peaks for bagging\n        const peaks = this.getPeakIndexes(this.width);\n        const peakBagging = [];\n        let cursor = 0;\n        for (let i = 0; i < peaks.length; i++) {\n            // collect the hash of all peaks\n            peakBagging[i] = this.hashes[peaks[i]];\n            // find the peak which includes the target index\n            if (peaks[i] >= index && cursor === 0) {\n                cursor = peaks[i];\n            }\n        }\n        let left = 0;\n        let right = 0;\n        // get hashes of the siblings in the mountain which the index belgons to.\n        // it moves the cursor from the summit of the mountain down to the target index\n        let height = this.heightAt(cursor);\n        const siblings = [];\n        while (cursor !== index) {\n            height--;\n            ([left, right] = this.getChildren(cursor));\n            // move the cursor down to the left size or right size\n            cursor = index <= left ? left : right;\n            // remaining node is the sibling\n            siblings[height - 1] = this.hashes[index <= left ? right : left];\n        }\n        return {\n            root,\n            width,\n            peakBagging,\n            siblings\n        };\n    }\n    /**\n     * @desc It returns true when the given params verifies that the given value exists in the tree or reverts the transaction.\n     */\n    verify(root, width, index, value, peaks, siblings) {\n        value = this.bufferify(value);\n        const size = this.getSize(width);\n        if (size < index) {\n            throw new Error('index is out of range');\n        }\n        // check the root equals the peak bagging hash\n        if (!root.equals(this.peakBagging(width, peaks))) {\n            throw new Error('invalid root hash from the peaks');\n        }\n        // find the mountain where the target index belongs to\n        let cursor = 0;\n        let targetPeak;\n        const peakIndexes = this.getPeakIndexes(width);\n        for (let i = 0; i < peakIndexes.length; i++) {\n            if (peakIndexes[i] >= index) {\n                targetPeak = peaks[i];\n                cursor = peakIndexes[i];\n                break;\n            }\n        }\n        if (!targetPeak) {\n            throw new Error('target not found');\n        }\n        // find the path climbing down\n        let height = siblings.length + 1;\n        const path = new Array(height);\n        let left = 0;\n        let right = 0;\n        while (height > 0) {\n            // record the current cursor and climb down\n            path[--height] = cursor;\n            if (cursor === index) {\n                // on the leaf node. Stop climbing down\n                break;\n            }\n            else {\n                // on the parent node. Go left or right\n                ([left, right] = this.getChildren(cursor));\n                cursor = index > left ? right : left;\n                continue;\n            }\n        }\n        // calculate the summit hash climbing up again\n        let node;\n        while (height < path.length) {\n            // move cursor\n            cursor = path[height];\n            if (height === 0) {\n                // cusor is on the leaf\n                node = this.hashLeaf(cursor, this.hashFn(value));\n            }\n            else if (cursor - 1 === path[height - 1]) {\n                // cursor is on a parent and a siblings is on the left\n                node = this.hashBranch(cursor, siblings[height - 1], node);\n            }\n            else {\n                // cursor is on a parent and a siblings is on the right\n                node = this.hashBranch(cursor, node, siblings[height - 1]);\n            }\n            // climb up\n            height++;\n        }\n        // computed hash value of the summit should equal to the target peak hash\n        if (!node.equals(targetPeak)) {\n            throw new Error('hashed peak is invalid');\n        }\n        return true;\n    }\n    peaksToPeakMap(width, peaks) {\n        const peakMap = {};\n        let bitIndex = 0;\n        let peakRef = 0;\n        let count = peaks.length;\n        for (let height = 1; height <= 32; height++) {\n            // index starts from the right most bit\n            bitIndex = 32 - height;\n            peakRef = 1 << (height - 1);\n            if ((width & peakRef) !== 0) {\n                peakMap[bitIndex] = peaks[--count];\n            }\n            else {\n                peakMap[bitIndex] = 0;\n            }\n        }\n        if (count !== 0) {\n            throw new Error('invalid number of peaks');\n        }\n        return peakMap;\n    }\n    peakMapToPeaks(width, peakMap) {\n        const arrLength = this.numOfPeaks(width);\n        const peaks = new Array(arrLength);\n        let count = 0;\n        for (let i = 0; i < 32; i++) {\n            if (peakMap[i] !== 0) {\n                peaks[count++] = peakMap[i];\n            }\n        }\n        if (count !== arrLength) {\n            throw new Error('invalid number of peaks');\n        }\n        return peaks;\n    }\n    peakUpdate(width, prevPeakMap, itemHash) {\n        const nextPeakMap = {};\n        const newWidth = width + 1;\n        let cursorIndex = this.getLeafIndex(newWidth);\n        let cursorNode = this.hashLeaf(cursorIndex, itemHash);\n        let bitIndex = 0;\n        let peakRef = 0;\n        let prevPeakExist = false;\n        let nextPeakExist = false;\n        let obtained = false;\n        for (let height = 1; height <= 32; height++) {\n            // index starts from the right most bit\n            bitIndex = 32 - height;\n            if (obtained) {\n                nextPeakMap[bitIndex] = prevPeakMap[bitIndex];\n            }\n            else {\n                peakRef = 1 << (height - 1);\n                prevPeakExist = (width & peakRef) !== 0;\n                nextPeakExist = (newWidth & peakRef) !== 0;\n                // get new cursor node with hashing the peak and the current cursor\n                cursorIndex++;\n                if (prevPeakExist) {\n                    cursorNode = this.hashBranch(cursorIndex, prevPeakMap[bitIndex], cursorNode);\n                }\n                // if new peak exists for the bit index\n                if (nextPeakExist) {\n                    // if prev peak exists for the bit index\n                    if (prevPeakExist) {\n                        nextPeakMap[bitIndex] = prevPeakMap[bitIndex];\n                    }\n                    else {\n                        nextPeakMap[bitIndex] = cursorNode;\n                    }\n                    obtained = true;\n                }\n                else {\n                    nextPeakMap[bitIndex] = 0;\n                }\n            }\n        }\n        return nextPeakMap;\n    }\n    rollUp(root, width, peaks, itemHashes) {\n        // check the root equals the peak bagging hash\n        if (!root.equals(this.peakBagging(width, peaks))) {\n            throw new Error('invalid root hash from the peaks');\n        }\n        let tmpWidth = width;\n        let tmpPeakMap = this.peaksToPeakMap(width, peaks);\n        for (let i = 0; i < itemHashes.length; i++) {\n            tmpPeakMap = this.peakUpdate(tmpWidth, tmpPeakMap, itemHashes[i]);\n            tmpWidth++;\n        }\n        return this.peakBagging(tmpWidth, this.peakMapToPeaks(tmpWidth, tmpPeakMap));\n    }\n    /**\n     * @desc It returns the hash value of the node for the index.\n     *      If the hash already exists it simply returns the stored value. On the other hand,\n     *      it computes hashes recursively downward.\n     *      Only appending an item calls this function.\n     */\n    _getOrCreateNode(index) {\n        if (index > this.size) {\n            throw new Error('out of range');\n        }\n        if (!this.hashes[index]) {\n            const [leftIndex, rightIndex] = this.getChildren(index);\n            const leftHash = this._getOrCreateNode(leftIndex);\n            const rightHash = this._getOrCreateNode(rightIndex);\n            this.hashes[index] = this.hashBranch(index, leftHash, rightHash);\n        }\n        return this.hashes[index];\n    }\n}\nexports.MerkleMountainRange = MerkleMountainRange;\nexports.default = MerkleMountainRange;\n", "\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MerkleTree = void 0;\nconst MerkleTree_1 = __importDefault(require(\"./MerkleTree\"));\nexports.MerkleTree = MerkleTree_1.default;\nvar MerkleMountainRange_1 = require(\"./MerkleMountainRange\");\nObject.defineProperty(exports, \"MerkleMountainRange\", { enumerable: true, get: function () { return MerkleMountainRange_1.MerkleMountainRange; } });\nexports.default = MerkleTree_1.default;\n", "'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n", "/* eslint-env browser */\nmodule.exports = typeof self == 'object' ? self.FormData : window.FormData;\n", "var util;\n(function (util) {\n    util.assertEqual = (val) => val;\n    function assertIs(_arg) { }\n    util.assertIs = assertIs;\n    function assertNever(_x) {\n        throw new Error();\n    }\n    util.assertNever = assertNever;\n    util.arrayToEnum = (items) => {\n        const obj = {};\n        for (const item of items) {\n            obj[item] = item;\n        }\n        return obj;\n    };\n    util.getValidEnumValues = (obj) => {\n        const validKeys = util.objectKeys(obj).filter((k) => typeof obj[obj[k]] !== \"number\");\n        const filtered = {};\n        for (const k of validKeys) {\n            filtered[k] = obj[k];\n        }\n        return util.objectValues(filtered);\n    };\n    util.objectValues = (obj) => {\n        return util.objectKeys(obj).map(function (e) {\n            return obj[e];\n        });\n    };\n    util.objectKeys = typeof Object.keys === \"function\" // eslint-disable-line ban/ban\n        ? (obj) => Object.keys(obj) // eslint-disable-line ban/ban\n        : (object) => {\n            const keys = [];\n            for (const key in object) {\n                if (Object.prototype.hasOwnProperty.call(object, key)) {\n                    keys.push(key);\n                }\n            }\n            return keys;\n        };\n    util.find = (arr, checker) => {\n        for (const item of arr) {\n            if (checker(item))\n                return item;\n        }\n        return undefined;\n    };\n    util.isInteger = typeof Number.isInteger === \"function\"\n        ? (val) => Number.isInteger(val) // eslint-disable-line ban/ban\n        : (val) => typeof val === \"number\" && isFinite(val) && Math.floor(val) === val;\n    function joinValues(array, separator = \" | \") {\n        return array\n            .map((val) => (typeof val === \"string\" ? `'${val}'` : val))\n            .join(separator);\n    }\n    util.joinValues = joinValues;\n    util.jsonStringifyReplacer = (_, value) => {\n        if (typeof value === \"bigint\") {\n            return value.toString();\n        }\n        return value;\n    };\n})(util || (util = {}));\nconst ZodParsedType = util.arrayToEnum([\n    \"string\",\n    \"nan\",\n    \"number\",\n    \"integer\",\n    \"float\",\n    \"boolean\",\n    \"date\",\n    \"bigint\",\n    \"symbol\",\n    \"function\",\n    \"undefined\",\n    \"null\",\n    \"array\",\n    \"object\",\n    \"unknown\",\n    \"promise\",\n    \"void\",\n    \"never\",\n    \"map\",\n    \"set\",\n]);\nconst getParsedType = (data) => {\n    const t = typeof data;\n    switch (t) {\n        case \"undefined\":\n            return ZodParsedType.undefined;\n        case \"string\":\n            return ZodParsedType.string;\n        case \"number\":\n            return isNaN(data) ? ZodParsedType.nan : ZodParsedType.number;\n        case \"boolean\":\n            return ZodParsedType.boolean;\n        case \"function\":\n            return ZodParsedType.function;\n        case \"bigint\":\n            return ZodParsedType.bigint;\n        case \"symbol\":\n            return ZodParsedType.symbol;\n        case \"object\":\n            if (Array.isArray(data)) {\n                return ZodParsedType.array;\n            }\n            if (data === null) {\n                return ZodParsedType.null;\n            }\n            if (data.then &&\n                typeof data.then === \"function\" &&\n                data.catch &&\n                typeof data.catch === \"function\") {\n                return ZodParsedType.promise;\n            }\n            if (typeof Map !== \"undefined\" && data instanceof Map) {\n                return ZodParsedType.map;\n            }\n            if (typeof Set !== \"undefined\" && data instanceof Set) {\n                return ZodParsedType.set;\n            }\n            if (typeof Date !== \"undefined\" && data instanceof Date) {\n                return ZodParsedType.date;\n            }\n            return ZodParsedType.object;\n        default:\n            return ZodParsedType.unknown;\n    }\n};\n\nconst ZodIssueCode = util.arrayToEnum([\n    \"invalid_type\",\n    \"invalid_literal\",\n    \"custom\",\n    \"invalid_union\",\n    \"invalid_union_discriminator\",\n    \"invalid_enum_value\",\n    \"unrecognized_keys\",\n    \"invalid_arguments\",\n    \"invalid_return_type\",\n    \"invalid_date\",\n    \"invalid_string\",\n    \"too_small\",\n    \"too_big\",\n    \"invalid_intersection_types\",\n    \"not_multiple_of\",\n    \"not_finite\",\n]);\nconst quotelessJson = (obj) => {\n    const json = JSON.stringify(obj, null, 2);\n    return json.replace(/\"([^\"]+)\":/g, \"$1:\");\n};\nclass ZodError extends Error {\n    constructor(issues) {\n        super();\n        this.issues = [];\n        this.addIssue = (sub) => {\n            this.issues = [...this.issues, sub];\n        };\n        this.addIssues = (subs = []) => {\n            this.issues = [...this.issues, ...subs];\n        };\n        const actualProto = new.target.prototype;\n        if (Object.setPrototypeOf) {\n            // eslint-disable-next-line ban/ban\n            Object.setPrototypeOf(this, actualProto);\n        }\n        else {\n            this.__proto__ = actualProto;\n        }\n        this.name = \"ZodError\";\n        this.issues = issues;\n    }\n    get errors() {\n        return this.issues;\n    }\n    format(_mapper) {\n        const mapper = _mapper ||\n            function (issue) {\n                return issue.message;\n            };\n        const fieldErrors = { _errors: [] };\n        const processError = (error) => {\n            for (const issue of error.issues) {\n                if (issue.code === \"invalid_union\") {\n                    issue.unionErrors.map(processError);\n                }\n                else if (issue.code === \"invalid_return_type\") {\n                    processError(issue.returnTypeError);\n                }\n                else if (issue.code === \"invalid_arguments\") {\n                    processError(issue.argumentsError);\n                }\n                else if (issue.path.length === 0) {\n                    fieldErrors._errors.push(mapper(issue));\n                }\n                else {\n                    let curr = fieldErrors;\n                    let i = 0;\n                    while (i < issue.path.length) {\n                        const el = issue.path[i];\n                        const terminal = i === issue.path.length - 1;\n                        if (!terminal) {\n                            curr[el] = curr[el] || { _errors: [] };\n                            // if (typeof el === \"string\") {\n                            //   curr[el] = curr[el] || { _errors: [] };\n                            // } else if (typeof el === \"number\") {\n                            //   const errorArray: any = [];\n                            //   errorArray._errors = [];\n                            //   curr[el] = curr[el] || errorArray;\n                            // }\n                        }\n                        else {\n                            curr[el] = curr[el] || { _errors: [] };\n                            curr[el]._errors.push(mapper(issue));\n                        }\n                        curr = curr[el];\n                        i++;\n                    }\n                }\n            }\n        };\n        processError(this);\n        return fieldErrors;\n    }\n    toString() {\n        return this.message;\n    }\n    get message() {\n        return JSON.stringify(this.issues, util.jsonStringifyReplacer, 2);\n    }\n    get isEmpty() {\n        return this.issues.length === 0;\n    }\n    flatten(mapper = (issue) => issue.message) {\n        const fieldErrors = {};\n        const formErrors = [];\n        for (const sub of this.issues) {\n            if (sub.path.length > 0) {\n                fieldErrors[sub.path[0]] = fieldErrors[sub.path[0]] || [];\n                fieldErrors[sub.path[0]].push(mapper(sub));\n            }\n            else {\n                formErrors.push(mapper(sub));\n            }\n        }\n        return { formErrors, fieldErrors };\n    }\n    get formErrors() {\n        return this.flatten();\n    }\n}\nZodError.create = (issues) => {\n    const error = new ZodError(issues);\n    return error;\n};\n\nconst errorMap = (issue, _ctx) => {\n    let message;\n    switch (issue.code) {\n        case ZodIssueCode.invalid_type:\n            if (issue.received === ZodParsedType.undefined) {\n                message = \"Required\";\n            }\n            else {\n                message = `Expected ${issue.expected}, received ${issue.received}`;\n            }\n            break;\n        case ZodIssueCode.invalid_literal:\n            message = `Invalid literal value, expected ${JSON.stringify(issue.expected, util.jsonStringifyReplacer)}`;\n            break;\n        case ZodIssueCode.unrecognized_keys:\n            message = `Unrecognized key(s) in object: ${util.joinValues(issue.keys, \", \")}`;\n            break;\n        case ZodIssueCode.invalid_union:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_union_discriminator:\n            message = `Invalid discriminator value. Expected ${util.joinValues(issue.options)}`;\n            break;\n        case ZodIssueCode.invalid_enum_value:\n            message = `Invalid enum value. Expected ${util.joinValues(issue.options)}, received '${issue.received}'`;\n            break;\n        case ZodIssueCode.invalid_arguments:\n            message = `Invalid function arguments`;\n            break;\n        case ZodIssueCode.invalid_return_type:\n            message = `Invalid function return type`;\n            break;\n        case ZodIssueCode.invalid_date:\n            message = `Invalid date`;\n            break;\n        case ZodIssueCode.invalid_string:\n            if (typeof issue.validation === \"object\") {\n                if (\"startsWith\" in issue.validation) {\n                    message = `Invalid input: must start with \"${issue.validation.startsWith}\"`;\n                }\n                else if (\"endsWith\" in issue.validation) {\n                    message = `Invalid input: must end with \"${issue.validation.endsWith}\"`;\n                }\n                else {\n                    util.assertNever(issue.validation);\n                }\n            }\n            else if (issue.validation !== \"regex\") {\n                message = `Invalid ${issue.validation}`;\n            }\n            else {\n                message = \"Invalid\";\n            }\n            break;\n        case ZodIssueCode.too_small:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `more than`} ${issue.minimum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? \"exactly\" : issue.inclusive ? `at least` : `over`} ${issue.minimum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${issue.minimum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly equal to `\n                    : issue.inclusive\n                        ? `greater than or equal to `\n                        : `greater than `}${new Date(issue.minimum)}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.too_big:\n            if (issue.type === \"array\")\n                message = `Array must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `less than`} ${issue.maximum} element(s)`;\n            else if (issue.type === \"string\")\n                message = `String must contain ${issue.exact ? `exactly` : issue.inclusive ? `at most` : `under`} ${issue.maximum} character(s)`;\n            else if (issue.type === \"number\")\n                message = `Number must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `less than or equal to`\n                        : `less than`} ${issue.maximum}`;\n            else if (issue.type === \"date\")\n                message = `Date must be ${issue.exact\n                    ? `exactly`\n                    : issue.inclusive\n                        ? `smaller than or equal to`\n                        : `smaller than`} ${new Date(issue.maximum)}`;\n            else\n                message = \"Invalid input\";\n            break;\n        case ZodIssueCode.custom:\n            message = `Invalid input`;\n            break;\n        case ZodIssueCode.invalid_intersection_types:\n            message = `Intersection results could not be merged`;\n            break;\n        case ZodIssueCode.not_multiple_of:\n            message = `Number must be a multiple of ${issue.multipleOf}`;\n            break;\n        case ZodIssueCode.not_finite:\n            message = \"Number must be finite\";\n            break;\n        default:\n            message = _ctx.defaultError;\n            util.assertNever(issue);\n    }\n    return { message };\n};\n\nlet overrideErrorMap = errorMap;\nfunction setErrorMap(map) {\n    overrideErrorMap = map;\n}\nfunction getErrorMap() {\n    return overrideErrorMap;\n}\n\nconst makeIssue = (params) => {\n    const { data, path, errorMaps, issueData } = params;\n    const fullPath = [...path, ...(issueData.path || [])];\n    const fullIssue = {\n        ...issueData,\n        path: fullPath,\n    };\n    let errorMessage = \"\";\n    const maps = errorMaps\n        .filter((m) => !!m)\n        .slice()\n        .reverse();\n    for (const map of maps) {\n        errorMessage = map(fullIssue, { data, defaultError: errorMessage }).message;\n    }\n    return {\n        ...issueData,\n        path: fullPath,\n        message: issueData.message || errorMessage,\n    };\n};\nconst EMPTY_PATH = [];\nfunction addIssueToContext(ctx, issueData) {\n    const issue = makeIssue({\n        issueData: issueData,\n        data: ctx.data,\n        path: ctx.path,\n        errorMaps: [\n            ctx.common.contextualErrorMap,\n            ctx.schemaErrorMap,\n            getErrorMap(),\n            errorMap, // then global default map\n        ].filter((x) => !!x),\n    });\n    ctx.common.issues.push(issue);\n}\nclass ParseStatus {\n    constructor() {\n        this.value = \"valid\";\n    }\n    dirty() {\n        if (this.value === \"valid\")\n            this.value = \"dirty\";\n    }\n    abort() {\n        if (this.value !== \"aborted\")\n            this.value = \"aborted\";\n    }\n    static mergeArray(status, results) {\n        const arrayValue = [];\n        for (const s of results) {\n            if (s.status === \"aborted\")\n                return INVALID;\n            if (s.status === \"dirty\")\n                status.dirty();\n            arrayValue.push(s.value);\n        }\n        return { status: status.value, value: arrayValue };\n    }\n    static async mergeObjectAsync(status, pairs) {\n        const syncPairs = [];\n        for (const pair of pairs) {\n            syncPairs.push({\n                key: await pair.key,\n                value: await pair.value,\n            });\n        }\n        return ParseStatus.mergeObjectSync(status, syncPairs);\n    }\n    static mergeObjectSync(status, pairs) {\n        const finalObject = {};\n        for (const pair of pairs) {\n            const { key, value } = pair;\n            if (key.status === \"aborted\")\n                return INVALID;\n            if (value.status === \"aborted\")\n                return INVALID;\n            if (key.status === \"dirty\")\n                status.dirty();\n            if (value.status === \"dirty\")\n                status.dirty();\n            if (typeof value.value !== \"undefined\" || pair.alwaysSet) {\n                finalObject[key.value] = value.value;\n            }\n        }\n        return { status: status.value, value: finalObject };\n    }\n}\nconst INVALID = Object.freeze({\n    status: \"aborted\",\n});\nconst DIRTY = (value) => ({ status: \"dirty\", value });\nconst OK = (value) => ({ status: \"valid\", value });\nconst isAborted = (x) => x.status === \"aborted\";\nconst isDirty = (x) => x.status === \"dirty\";\nconst isValid = (x) => x.status === \"valid\";\nconst isAsync = (x) => typeof Promise !== undefined && x instanceof Promise;\n\nvar errorUtil;\n(function (errorUtil) {\n    errorUtil.errToObj = (message) => typeof message === \"string\" ? { message } : message || {};\n    errorUtil.toString = (message) => typeof message === \"string\" ? message : message === null || message === void 0 ? void 0 : message.message;\n})(errorUtil || (errorUtil = {}));\n\nclass ParseInputLazyPath {\n    constructor(parent, value, path, key) {\n        this.parent = parent;\n        this.data = value;\n        this._path = path;\n        this._key = key;\n    }\n    get path() {\n        return this._path.concat(this._key);\n    }\n}\nconst handleResult = (ctx, result) => {\n    if (isValid(result)) {\n        return { success: true, data: result.value };\n    }\n    else {\n        if (!ctx.common.issues.length) {\n            throw new Error(\"Validation failed but no issues detected.\");\n        }\n        const error = new ZodError(ctx.common.issues);\n        return { success: false, error };\n    }\n};\nfunction processCreateParams(params) {\n    if (!params)\n        return {};\n    const { errorMap, invalid_type_error, required_error, description } = params;\n    if (errorMap && (invalid_type_error || required_error)) {\n        throw new Error(`Can't use \"invalid_type_error\" or \"required_error\" in conjunction with custom error map.`);\n    }\n    if (errorMap)\n        return { errorMap: errorMap, description };\n    const customMap = (iss, ctx) => {\n        if (iss.code !== \"invalid_type\")\n            return { message: ctx.defaultError };\n        if (typeof ctx.data === \"undefined\") {\n            return { message: required_error !== null && required_error !== void 0 ? required_error : ctx.defaultError };\n        }\n        return { message: invalid_type_error !== null && invalid_type_error !== void 0 ? invalid_type_error : ctx.defaultError };\n    };\n    return { errorMap: customMap, description };\n}\nclass ZodType {\n    constructor(def) {\n        /** Alias of safeParseAsync */\n        this.spa = this.safeParseAsync;\n        this._def = def;\n        this.parse = this.parse.bind(this);\n        this.safeParse = this.safeParse.bind(this);\n        this.parseAsync = this.parseAsync.bind(this);\n        this.safeParseAsync = this.safeParseAsync.bind(this);\n        this.spa = this.spa.bind(this);\n        this.refine = this.refine.bind(this);\n        this.refinement = this.refinement.bind(this);\n        this.superRefine = this.superRefine.bind(this);\n        this.optional = this.optional.bind(this);\n        this.nullable = this.nullable.bind(this);\n        this.nullish = this.nullish.bind(this);\n        this.array = this.array.bind(this);\n        this.promise = this.promise.bind(this);\n        this.or = this.or.bind(this);\n        this.and = this.and.bind(this);\n        this.transform = this.transform.bind(this);\n        this.brand = this.brand.bind(this);\n        this.default = this.default.bind(this);\n        this.catch = this.catch.bind(this);\n        this.describe = this.describe.bind(this);\n        this.pipe = this.pipe.bind(this);\n        this.isNullable = this.isNullable.bind(this);\n        this.isOptional = this.isOptional.bind(this);\n    }\n    get description() {\n        return this._def.description;\n    }\n    _getType(input) {\n        return getParsedType(input.data);\n    }\n    _getOrReturnCtx(input, ctx) {\n        return (ctx || {\n            common: input.parent.common,\n            data: input.data,\n            parsedType: getParsedType(input.data),\n            schemaErrorMap: this._def.errorMap,\n            path: input.path,\n            parent: input.parent,\n        });\n    }\n    _processInputParams(input) {\n        return {\n            status: new ParseStatus(),\n            ctx: {\n                common: input.parent.common,\n                data: input.data,\n                parsedType: getParsedType(input.data),\n                schemaErrorMap: this._def.errorMap,\n                path: input.path,\n                parent: input.parent,\n            },\n        };\n    }\n    _parseSync(input) {\n        const result = this._parse(input);\n        if (isAsync(result)) {\n            throw new Error(\"Synchronous parse encountered promise.\");\n        }\n        return result;\n    }\n    _parseAsync(input) {\n        const result = this._parse(input);\n        return Promise.resolve(result);\n    }\n    parse(data, params) {\n        const result = this.safeParse(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    safeParse(data, params) {\n        var _a;\n        const ctx = {\n            common: {\n                issues: [],\n                async: (_a = params === null || params === void 0 ? void 0 : params.async) !== null && _a !== void 0 ? _a : false,\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const result = this._parseSync({ data, path: ctx.path, parent: ctx });\n        return handleResult(ctx, result);\n    }\n    async parseAsync(data, params) {\n        const result = await this.safeParseAsync(data, params);\n        if (result.success)\n            return result.data;\n        throw result.error;\n    }\n    async safeParseAsync(data, params) {\n        const ctx = {\n            common: {\n                issues: [],\n                contextualErrorMap: params === null || params === void 0 ? void 0 : params.errorMap,\n                async: true,\n            },\n            path: (params === null || params === void 0 ? void 0 : params.path) || [],\n            schemaErrorMap: this._def.errorMap,\n            parent: null,\n            data,\n            parsedType: getParsedType(data),\n        };\n        const maybeAsyncResult = this._parse({ data, path: ctx.path, parent: ctx });\n        const result = await (isAsync(maybeAsyncResult)\n            ? maybeAsyncResult\n            : Promise.resolve(maybeAsyncResult));\n        return handleResult(ctx, result);\n    }\n    refine(check, message) {\n        const getIssueProperties = (val) => {\n            if (typeof message === \"string\" || typeof message === \"undefined\") {\n                return { message };\n            }\n            else if (typeof message === \"function\") {\n                return message(val);\n            }\n            else {\n                return message;\n            }\n        };\n        return this._refinement((val, ctx) => {\n            const result = check(val);\n            const setError = () => ctx.addIssue({\n                code: ZodIssueCode.custom,\n                ...getIssueProperties(val),\n            });\n            if (typeof Promise !== \"undefined\" && result instanceof Promise) {\n                return result.then((data) => {\n                    if (!data) {\n                        setError();\n                        return false;\n                    }\n                    else {\n                        return true;\n                    }\n                });\n            }\n            if (!result) {\n                setError();\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    refinement(check, refinementData) {\n        return this._refinement((val, ctx) => {\n            if (!check(val)) {\n                ctx.addIssue(typeof refinementData === \"function\"\n                    ? refinementData(val, ctx)\n                    : refinementData);\n                return false;\n            }\n            else {\n                return true;\n            }\n        });\n    }\n    _refinement(refinement) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"refinement\", refinement },\n        });\n    }\n    superRefine(refinement) {\n        return this._refinement(refinement);\n    }\n    optional() {\n        return ZodOptional.create(this);\n    }\n    nullable() {\n        return ZodNullable.create(this);\n    }\n    nullish() {\n        return this.optional().nullable();\n    }\n    array() {\n        return ZodArray.create(this);\n    }\n    promise() {\n        return ZodPromise.create(this);\n    }\n    or(option) {\n        return ZodUnion.create([this, option]);\n    }\n    and(incoming) {\n        return ZodIntersection.create(this, incoming);\n    }\n    transform(transform) {\n        return new ZodEffects({\n            schema: this,\n            typeName: ZodFirstPartyTypeKind.ZodEffects,\n            effect: { type: \"transform\", transform },\n        });\n    }\n    default(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodDefault({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodDefault,\n        });\n    }\n    brand() {\n        return new ZodBranded({\n            typeName: ZodFirstPartyTypeKind.ZodBranded,\n            type: this,\n            ...processCreateParams(undefined),\n        });\n    }\n    catch(def) {\n        const defaultValueFunc = typeof def === \"function\" ? def : () => def;\n        return new ZodCatch({\n            innerType: this,\n            defaultValue: defaultValueFunc,\n            typeName: ZodFirstPartyTypeKind.ZodCatch,\n        });\n    }\n    describe(description) {\n        const This = this.constructor;\n        return new This({\n            ...this._def,\n            description,\n        });\n    }\n    pipe(target) {\n        return ZodPipeline.create(this, target);\n    }\n    isOptional() {\n        return this.safeParse(undefined).success;\n    }\n    isNullable() {\n        return this.safeParse(null).success;\n    }\n}\nconst cuidRegex = /^c[^\\s-]{8,}$/i;\nconst uuidRegex = /^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i;\n// from https://stackoverflow.com/a/46181/1550155\n// old version: too slow, didn't support unicode\n// const emailRegex = /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))$/i;\n// eslint-disable-next-line\nconst emailRegex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n// interface IsDateStringOptions extends StringDateOptions {\n/**\n * Match any configuration\n */\n// any?: boolean;\n// }\n// Adapted from https://stackoverflow.com/a/3143231\nconst datetimeRegex = (args) => {\n    if (args.precision) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}(([+-]\\\\d{2}:\\\\d{2})|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}\\\\.\\\\d{${args.precision}}Z$`);\n        }\n    }\n    else if (args.precision === 0) {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(([+-]\\\\d{2}:\\\\d{2})|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}Z$`);\n        }\n    }\n    else {\n        if (args.offset) {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?(([+-]\\\\d{2}:\\\\d{2})|Z)$`);\n        }\n        else {\n            return new RegExp(`^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(\\\\.\\\\d+)?Z$`);\n        }\n    }\n};\nclass ZodString extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._regex = (regex, validation, message) => this.refinement((data) => regex.test(data), {\n            validation,\n            code: ZodIssueCode.invalid_string,\n            ...errorUtil.errToObj(message),\n        });\n        /**\n         * @deprecated Use z.string().min(1) instead.\n         * @see {@link ZodString.min}\n         */\n        this.nonempty = (message) => this.min(1, errorUtil.errToObj(message));\n        this.trim = () => new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, { kind: \"trim\" }],\n        });\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = String(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.string) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.string,\n                received: ctx.parsedType,\n            }\n            //\n            );\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.length < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.length > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"string\",\n                        inclusive: true,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"length\") {\n                const tooBig = input.data.length > check.value;\n                const tooSmall = input.data.length < check.value;\n                if (tooBig || tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    if (tooBig) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_big,\n                            maximum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    else if (tooSmall) {\n                        addIssueToContext(ctx, {\n                            code: ZodIssueCode.too_small,\n                            minimum: check.value,\n                            type: \"string\",\n                            inclusive: true,\n                            exact: true,\n                            message: check.message,\n                        });\n                    }\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"email\") {\n                if (!emailRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"email\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"uuid\") {\n                if (!uuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"uuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"cuid\") {\n                if (!cuidRegex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"cuid\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"url\") {\n                try {\n                    new URL(input.data);\n                }\n                catch (_a) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"url\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"regex\") {\n                check.regex.lastIndex = 0;\n                const testResult = check.regex.test(input.data);\n                if (!testResult) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        validation: \"regex\",\n                        code: ZodIssueCode.invalid_string,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"trim\") {\n                input.data = input.data.trim();\n            }\n            else if (check.kind === \"startsWith\") {\n                if (!input.data.startsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { startsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"endsWith\") {\n                if (!input.data.endsWith(check.value)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: { endsWith: check.value },\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"datetime\") {\n                const regex = datetimeRegex(check);\n                if (!regex.test(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_string,\n                        validation: \"datetime\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    _addCheck(check) {\n        return new ZodString({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    email(message) {\n        return this._addCheck({ kind: \"email\", ...errorUtil.errToObj(message) });\n    }\n    url(message) {\n        return this._addCheck({ kind: \"url\", ...errorUtil.errToObj(message) });\n    }\n    uuid(message) {\n        return this._addCheck({ kind: \"uuid\", ...errorUtil.errToObj(message) });\n    }\n    cuid(message) {\n        return this._addCheck({ kind: \"cuid\", ...errorUtil.errToObj(message) });\n    }\n    datetime(options) {\n        var _a;\n        if (typeof options === \"string\") {\n            return this._addCheck({\n                kind: \"datetime\",\n                precision: null,\n                offset: false,\n                message: options,\n            });\n        }\n        return this._addCheck({\n            kind: \"datetime\",\n            precision: typeof (options === null || options === void 0 ? void 0 : options.precision) === \"undefined\" ? null : options === null || options === void 0 ? void 0 : options.precision,\n            offset: (_a = options === null || options === void 0 ? void 0 : options.offset) !== null && _a !== void 0 ? _a : false,\n            ...errorUtil.errToObj(options === null || options === void 0 ? void 0 : options.message),\n        });\n    }\n    regex(regex, message) {\n        return this._addCheck({\n            kind: \"regex\",\n            regex: regex,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    startsWith(value, message) {\n        return this._addCheck({\n            kind: \"startsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    endsWith(value, message) {\n        return this._addCheck({\n            kind: \"endsWith\",\n            value: value,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    min(minLength, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    max(maxLength, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxLength,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    length(len, message) {\n        return this._addCheck({\n            kind: \"length\",\n            value: len,\n            ...errorUtil.errToObj(message),\n        });\n    }\n    get isDatetime() {\n        return !!this._def.checks.find((ch) => ch.kind === \"datetime\");\n    }\n    get isEmail() {\n        return !!this._def.checks.find((ch) => ch.kind === \"email\");\n    }\n    get isURL() {\n        return !!this._def.checks.find((ch) => ch.kind === \"url\");\n    }\n    get isUUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"uuid\");\n    }\n    get isCUID() {\n        return !!this._def.checks.find((ch) => ch.kind === \"cuid\");\n    }\n    get minLength() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxLength() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n}\nZodString.create = (params) => {\n    var _a;\n    return new ZodString({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodString,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\n// https://stackoverflow.com/questions/3966484/why-does-modulus-operator-return-fractional-number-in-javascript/31711034#31711034\nfunction floatSafeRemainder(val, step) {\n    const valDecCount = (val.toString().split(\".\")[1] || \"\").length;\n    const stepDecCount = (step.toString().split(\".\")[1] || \"\").length;\n    const decCount = valDecCount > stepDecCount ? valDecCount : stepDecCount;\n    const valInt = parseInt(val.toFixed(decCount).replace(\".\", \"\"));\n    const stepInt = parseInt(step.toFixed(decCount).replace(\".\", \"\"));\n    return (valInt % stepInt) / Math.pow(10, decCount);\n}\nclass ZodNumber extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.min = this.gte;\n        this.max = this.lte;\n        this.step = this.multipleOf;\n    }\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Number(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.number) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.number,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        let ctx = undefined;\n        const status = new ParseStatus();\n        for (const check of this._def.checks) {\n            if (check.kind === \"int\") {\n                if (!util.isInteger(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.invalid_type,\n                        expected: \"integer\",\n                        received: \"float\",\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"min\") {\n                const tooSmall = check.inclusive\n                    ? input.data < check.value\n                    : input.data <= check.value;\n                if (tooSmall) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        minimum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                const tooBig = check.inclusive\n                    ? input.data > check.value\n                    : input.data >= check.value;\n                if (tooBig) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        maximum: check.value,\n                        type: \"number\",\n                        inclusive: check.inclusive,\n                        exact: false,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"multipleOf\") {\n                if (floatSafeRemainder(input.data, check.value) !== 0) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_multiple_of,\n                        multipleOf: check.value,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"finite\") {\n                if (!Number.isFinite(input.data)) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.not_finite,\n                        message: check.message,\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return { status: status.value, value: input.data };\n    }\n    gte(value, message) {\n        return this.setLimit(\"min\", value, true, errorUtil.toString(message));\n    }\n    gt(value, message) {\n        return this.setLimit(\"min\", value, false, errorUtil.toString(message));\n    }\n    lte(value, message) {\n        return this.setLimit(\"max\", value, true, errorUtil.toString(message));\n    }\n    lt(value, message) {\n        return this.setLimit(\"max\", value, false, errorUtil.toString(message));\n    }\n    setLimit(kind, value, inclusive, message) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [\n                ...this._def.checks,\n                {\n                    kind,\n                    value,\n                    inclusive,\n                    message: errorUtil.toString(message),\n                },\n            ],\n        });\n    }\n    _addCheck(check) {\n        return new ZodNumber({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    int(message) {\n        return this._addCheck({\n            kind: \"int\",\n            message: errorUtil.toString(message),\n        });\n    }\n    positive(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    negative(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: false,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonpositive(message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    nonnegative(message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: 0,\n            inclusive: true,\n            message: errorUtil.toString(message),\n        });\n    }\n    multipleOf(value, message) {\n        return this._addCheck({\n            kind: \"multipleOf\",\n            value: value,\n            message: errorUtil.toString(message),\n        });\n    }\n    finite(message) {\n        return this._addCheck({\n            kind: \"finite\",\n            message: errorUtil.toString(message),\n        });\n    }\n    get minValue() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min;\n    }\n    get maxValue() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max;\n    }\n    get isInt() {\n        return !!this._def.checks.find((ch) => ch.kind === \"int\");\n    }\n}\nZodNumber.create = (params) => {\n    return new ZodNumber({\n        checks: [],\n        typeName: ZodFirstPartyTypeKind.ZodNumber,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBigInt extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = BigInt(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.bigint) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.bigint,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBigInt.create = (params) => {\n    var _a;\n    return new ZodBigInt({\n        typeName: ZodFirstPartyTypeKind.ZodBigInt,\n        coerce: (_a = params === null || params === void 0 ? void 0 : params.coerce) !== null && _a !== void 0 ? _a : false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodBoolean extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = Boolean(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.boolean) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.boolean,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodBoolean.create = (params) => {\n    return new ZodBoolean({\n        typeName: ZodFirstPartyTypeKind.ZodBoolean,\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDate extends ZodType {\n    _parse(input) {\n        if (this._def.coerce) {\n            input.data = new Date(input.data);\n        }\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.date) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.date,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (isNaN(input.data.getTime())) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_date,\n            });\n            return INVALID;\n        }\n        const status = new ParseStatus();\n        let ctx = undefined;\n        for (const check of this._def.checks) {\n            if (check.kind === \"min\") {\n                if (input.data.getTime() < check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_small,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        minimum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else if (check.kind === \"max\") {\n                if (input.data.getTime() > check.value) {\n                    ctx = this._getOrReturnCtx(input, ctx);\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.too_big,\n                        message: check.message,\n                        inclusive: true,\n                        exact: false,\n                        maximum: check.value,\n                        type: \"date\",\n                    });\n                    status.dirty();\n                }\n            }\n            else {\n                util.assertNever(check);\n            }\n        }\n        return {\n            status: status.value,\n            value: new Date(input.data.getTime()),\n        };\n    }\n    _addCheck(check) {\n        return new ZodDate({\n            ...this._def,\n            checks: [...this._def.checks, check],\n        });\n    }\n    min(minDate, message) {\n        return this._addCheck({\n            kind: \"min\",\n            value: minDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    max(maxDate, message) {\n        return this._addCheck({\n            kind: \"max\",\n            value: maxDate.getTime(),\n            message: errorUtil.toString(message),\n        });\n    }\n    get minDate() {\n        let min = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"min\") {\n                if (min === null || ch.value > min)\n                    min = ch.value;\n            }\n        }\n        return min != null ? new Date(min) : null;\n    }\n    get maxDate() {\n        let max = null;\n        for (const ch of this._def.checks) {\n            if (ch.kind === \"max\") {\n                if (max === null || ch.value < max)\n                    max = ch.value;\n            }\n        }\n        return max != null ? new Date(max) : null;\n    }\n}\nZodDate.create = (params) => {\n    return new ZodDate({\n        checks: [],\n        coerce: (params === null || params === void 0 ? void 0 : params.coerce) || false,\n        typeName: ZodFirstPartyTypeKind.ZodDate,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSymbol extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.symbol) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.symbol,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodSymbol.create = (params) => {\n    return new ZodSymbol({\n        typeName: ZodFirstPartyTypeKind.ZodSymbol,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUndefined extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.undefined,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodUndefined.create = (params) => {\n    return new ZodUndefined({\n        typeName: ZodFirstPartyTypeKind.ZodUndefined,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNull extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.null) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.null,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodNull.create = (params) => {\n    return new ZodNull({\n        typeName: ZodFirstPartyTypeKind.ZodNull,\n        ...processCreateParams(params),\n    });\n};\nclass ZodAny extends ZodType {\n    constructor() {\n        super(...arguments);\n        // to prevent instances of other classes from extending ZodAny. this causes issues with catchall in ZodObject.\n        this._any = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodAny.create = (params) => {\n    return new ZodAny({\n        typeName: ZodFirstPartyTypeKind.ZodAny,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnknown extends ZodType {\n    constructor() {\n        super(...arguments);\n        // required\n        this._unknown = true;\n    }\n    _parse(input) {\n        return OK(input.data);\n    }\n}\nZodUnknown.create = (params) => {\n    return new ZodUnknown({\n        typeName: ZodFirstPartyTypeKind.ZodUnknown,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNever extends ZodType {\n    _parse(input) {\n        const ctx = this._getOrReturnCtx(input);\n        addIssueToContext(ctx, {\n            code: ZodIssueCode.invalid_type,\n            expected: ZodParsedType.never,\n            received: ctx.parsedType,\n        });\n        return INVALID;\n    }\n}\nZodNever.create = (params) => {\n    return new ZodNever({\n        typeName: ZodFirstPartyTypeKind.ZodNever,\n        ...processCreateParams(params),\n    });\n};\nclass ZodVoid extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.undefined) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.void,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n}\nZodVoid.create = (params) => {\n    return new ZodVoid({\n        typeName: ZodFirstPartyTypeKind.ZodVoid,\n        ...processCreateParams(params),\n    });\n};\nclass ZodArray extends ZodType {\n    _parse(input) {\n        const { ctx, status } = this._processInputParams(input);\n        const def = this._def;\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (def.exactLength !== null) {\n            const tooBig = ctx.data.length > def.exactLength.value;\n            const tooSmall = ctx.data.length < def.exactLength.value;\n            if (tooBig || tooSmall) {\n                addIssueToContext(ctx, {\n                    code: tooBig ? ZodIssueCode.too_big : ZodIssueCode.too_small,\n                    minimum: (tooSmall ? def.exactLength.value : undefined),\n                    maximum: (tooBig ? def.exactLength.value : undefined),\n                    type: \"array\",\n                    inclusive: true,\n                    exact: true,\n                    message: def.exactLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.minLength !== null) {\n            if (ctx.data.length < def.minLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxLength !== null) {\n            if (ctx.data.length > def.maxLength.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxLength.value,\n                    type: \"array\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxLength.message,\n                });\n                status.dirty();\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.all(ctx.data.map((item, i) => {\n                return def.type._parseAsync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n            })).then((result) => {\n                return ParseStatus.mergeArray(status, result);\n            });\n        }\n        const result = ctx.data.map((item, i) => {\n            return def.type._parseSync(new ParseInputLazyPath(ctx, item, ctx.path, i));\n        });\n        return ParseStatus.mergeArray(status, result);\n    }\n    get element() {\n        return this._def.type;\n    }\n    min(minLength, message) {\n        return new ZodArray({\n            ...this._def,\n            minLength: { value: minLength, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxLength, message) {\n        return new ZodArray({\n            ...this._def,\n            maxLength: { value: maxLength, message: errorUtil.toString(message) },\n        });\n    }\n    length(len, message) {\n        return new ZodArray({\n            ...this._def,\n            exactLength: { value: len, message: errorUtil.toString(message) },\n        });\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodArray.create = (schema, params) => {\n    return new ZodArray({\n        type: schema,\n        minLength: null,\n        maxLength: null,\n        exactLength: null,\n        typeName: ZodFirstPartyTypeKind.ZodArray,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////\n/////////////////////////////////////////\n//////////                     //////////\n//////////      ZodObject      //////////\n//////////                     //////////\n/////////////////////////////////////////\n/////////////////////////////////////////\nvar objectUtil;\n(function (objectUtil) {\n    objectUtil.mergeShapes = (first, second) => {\n        return {\n            ...first,\n            ...second, // second overwrites first\n        };\n    };\n})(objectUtil || (objectUtil = {}));\nconst AugmentFactory = (def) => (augmentation) => {\n    return new ZodObject({\n        ...def,\n        shape: () => ({\n            ...def.shape(),\n            ...augmentation,\n        }),\n    });\n};\nfunction deepPartialify(schema) {\n    if (schema instanceof ZodObject) {\n        const newShape = {};\n        for (const key in schema.shape) {\n            const fieldSchema = schema.shape[key];\n            newShape[key] = ZodOptional.create(deepPartialify(fieldSchema));\n        }\n        return new ZodObject({\n            ...schema._def,\n            shape: () => newShape,\n        });\n    }\n    else if (schema instanceof ZodArray) {\n        return ZodArray.create(deepPartialify(schema.element));\n    }\n    else if (schema instanceof ZodOptional) {\n        return ZodOptional.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodNullable) {\n        return ZodNullable.create(deepPartialify(schema.unwrap()));\n    }\n    else if (schema instanceof ZodTuple) {\n        return ZodTuple.create(schema.items.map((item) => deepPartialify(item)));\n    }\n    else {\n        return schema;\n    }\n}\nclass ZodObject extends ZodType {\n    constructor() {\n        super(...arguments);\n        this._cached = null;\n        /**\n         * @deprecated In most cases, this is no longer needed - unknown properties are now silently stripped.\n         * If you want to pass through unknown properties, use `.passthrough()` instead.\n         */\n        this.nonstrict = this.passthrough;\n        this.augment = AugmentFactory(this._def);\n        this.extend = AugmentFactory(this._def);\n    }\n    _getCached() {\n        if (this._cached !== null)\n            return this._cached;\n        const shape = this._def.shape();\n        const keys = util.objectKeys(shape);\n        return (this._cached = { shape, keys });\n    }\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.object) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const { status, ctx } = this._processInputParams(input);\n        const { shape, keys: shapeKeys } = this._getCached();\n        const extraKeys = [];\n        if (!(this._def.catchall instanceof ZodNever &&\n            this._def.unknownKeys === \"strip\")) {\n            for (const key in ctx.data) {\n                if (!shapeKeys.includes(key)) {\n                    extraKeys.push(key);\n                }\n            }\n        }\n        const pairs = [];\n        for (const key of shapeKeys) {\n            const keyValidator = shape[key];\n            const value = ctx.data[key];\n            pairs.push({\n                key: { status: \"valid\", value: key },\n                value: keyValidator._parse(new ParseInputLazyPath(ctx, value, ctx.path, key)),\n                alwaysSet: key in ctx.data,\n            });\n        }\n        if (this._def.catchall instanceof ZodNever) {\n            const unknownKeys = this._def.unknownKeys;\n            if (unknownKeys === \"passthrough\") {\n                for (const key of extraKeys) {\n                    pairs.push({\n                        key: { status: \"valid\", value: key },\n                        value: { status: \"valid\", value: ctx.data[key] },\n                    });\n                }\n            }\n            else if (unknownKeys === \"strict\") {\n                if (extraKeys.length > 0) {\n                    addIssueToContext(ctx, {\n                        code: ZodIssueCode.unrecognized_keys,\n                        keys: extraKeys,\n                    });\n                    status.dirty();\n                }\n            }\n            else if (unknownKeys === \"strip\") ;\n            else {\n                throw new Error(`Internal ZodObject error: invalid unknownKeys value.`);\n            }\n        }\n        else {\n            // run catchall validation\n            const catchall = this._def.catchall;\n            for (const key of extraKeys) {\n                const value = ctx.data[key];\n                pairs.push({\n                    key: { status: \"valid\", value: key },\n                    value: catchall._parse(new ParseInputLazyPath(ctx, value, ctx.path, key) //, ctx.child(key), value, getParsedType(value)\n                    ),\n                    alwaysSet: key in ctx.data,\n                });\n            }\n        }\n        if (ctx.common.async) {\n            return Promise.resolve()\n                .then(async () => {\n                const syncPairs = [];\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    syncPairs.push({\n                        key,\n                        value: await pair.value,\n                        alwaysSet: pair.alwaysSet,\n                    });\n                }\n                return syncPairs;\n            })\n                .then((syncPairs) => {\n                return ParseStatus.mergeObjectSync(status, syncPairs);\n            });\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get shape() {\n        return this._def.shape();\n    }\n    strict(message) {\n        errorUtil.errToObj;\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strict\",\n            ...(message !== undefined\n                ? {\n                    errorMap: (issue, ctx) => {\n                        var _a, _b, _c, _d;\n                        const defaultError = (_c = (_b = (_a = this._def).errorMap) === null || _b === void 0 ? void 0 : _b.call(_a, issue, ctx).message) !== null && _c !== void 0 ? _c : ctx.defaultError;\n                        if (issue.code === \"unrecognized_keys\")\n                            return {\n                                message: (_d = errorUtil.errToObj(message).message) !== null && _d !== void 0 ? _d : defaultError,\n                            };\n                        return {\n                            message: defaultError,\n                        };\n                    },\n                }\n                : {}),\n        });\n    }\n    strip() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"strip\",\n        });\n    }\n    passthrough() {\n        return new ZodObject({\n            ...this._def,\n            unknownKeys: \"passthrough\",\n        });\n    }\n    setKey(key, schema) {\n        return this.augment({ [key]: schema });\n    }\n    /**\n     * Prior to zod@1.0.12 there was a bug in the\n     * inferred type of merged objects. Please\n     * upgrade if you are experiencing issues.\n     */\n    merge(merging) {\n        // const mergedShape = objectUtil.mergeShapes(\n        //   this._def.shape(),\n        //   merging._def.shape()\n        // );\n        const merged = new ZodObject({\n            unknownKeys: merging._def.unknownKeys,\n            catchall: merging._def.catchall,\n            shape: () => objectUtil.mergeShapes(this._def.shape(), merging._def.shape()),\n            typeName: ZodFirstPartyTypeKind.ZodObject,\n        });\n        return merged;\n    }\n    catchall(index) {\n        return new ZodObject({\n            ...this._def,\n            catchall: index,\n        });\n    }\n    pick(mask) {\n        const shape = {};\n        util.objectKeys(mask).map((key) => {\n            // only add to shape if key corresponds to an element of the current shape\n            if (this.shape[key])\n                shape[key] = this.shape[key];\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    omit(mask) {\n        const shape = {};\n        util.objectKeys(this.shape).map((key) => {\n            if (util.objectKeys(mask).indexOf(key) === -1) {\n                shape[key] = this.shape[key];\n            }\n        });\n        return new ZodObject({\n            ...this._def,\n            shape: () => shape,\n        });\n    }\n    deepPartial() {\n        return deepPartialify(this);\n    }\n    partial(mask) {\n        const newShape = {};\n        if (mask) {\n            util.objectKeys(this.shape).map((key) => {\n                if (util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    newShape[key] = this.shape[key].optional();\n                }\n            });\n            return new ZodObject({\n                ...this._def,\n                shape: () => newShape,\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                newShape[key] = fieldSchema.optional();\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    required(mask) {\n        const newShape = {};\n        if (mask) {\n            util.objectKeys(this.shape).map((key) => {\n                if (util.objectKeys(mask).indexOf(key) === -1) {\n                    newShape[key] = this.shape[key];\n                }\n                else {\n                    const fieldSchema = this.shape[key];\n                    let newField = fieldSchema;\n                    while (newField instanceof ZodOptional) {\n                        newField = newField._def.innerType;\n                    }\n                    newShape[key] = newField;\n                }\n            });\n        }\n        else {\n            for (const key in this.shape) {\n                const fieldSchema = this.shape[key];\n                let newField = fieldSchema;\n                while (newField instanceof ZodOptional) {\n                    newField = newField._def.innerType;\n                }\n                newShape[key] = newField;\n            }\n        }\n        return new ZodObject({\n            ...this._def,\n            shape: () => newShape,\n        });\n    }\n    keyof() {\n        return createZodEnum(util.objectKeys(this.shape));\n    }\n}\nZodObject.create = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.strictCreate = (shape, params) => {\n    return new ZodObject({\n        shape: () => shape,\n        unknownKeys: \"strict\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nZodObject.lazycreate = (shape, params) => {\n    return new ZodObject({\n        shape,\n        unknownKeys: \"strip\",\n        catchall: ZodNever.create(),\n        typeName: ZodFirstPartyTypeKind.ZodObject,\n        ...processCreateParams(params),\n    });\n};\nclass ZodUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const options = this._def.options;\n        function handleResults(results) {\n            // return first issue-free validation if it exists\n            for (const result of results) {\n                if (result.result.status === \"valid\") {\n                    return result.result;\n                }\n            }\n            for (const result of results) {\n                if (result.result.status === \"dirty\") {\n                    // add issues from dirty option\n                    ctx.common.issues.push(...result.ctx.common.issues);\n                    return result.result;\n                }\n            }\n            // return invalid\n            const unionErrors = results.map((result) => new ZodError(result.ctx.common.issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return Promise.all(options.map(async (option) => {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                return {\n                    result: await option._parseAsync({\n                        data: ctx.data,\n                        path: ctx.path,\n                        parent: childCtx,\n                    }),\n                    ctx: childCtx,\n                };\n            })).then(handleResults);\n        }\n        else {\n            let dirty = undefined;\n            const issues = [];\n            for (const option of options) {\n                const childCtx = {\n                    ...ctx,\n                    common: {\n                        ...ctx.common,\n                        issues: [],\n                    },\n                    parent: null,\n                };\n                const result = option._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: childCtx,\n                });\n                if (result.status === \"valid\") {\n                    return result;\n                }\n                else if (result.status === \"dirty\" && !dirty) {\n                    dirty = { result, ctx: childCtx };\n                }\n                if (childCtx.common.issues.length) {\n                    issues.push(childCtx.common.issues);\n                }\n            }\n            if (dirty) {\n                ctx.common.issues.push(...dirty.ctx.common.issues);\n                return dirty.result;\n            }\n            const unionErrors = issues.map((issues) => new ZodError(issues));\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union,\n                unionErrors,\n            });\n            return INVALID;\n        }\n    }\n    get options() {\n        return this._def.options;\n    }\n}\nZodUnion.create = (types, params) => {\n    return new ZodUnion({\n        options: types,\n        typeName: ZodFirstPartyTypeKind.ZodUnion,\n        ...processCreateParams(params),\n    });\n};\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\n//////////                                 //////////\n//////////      ZodDiscriminatedUnion      //////////\n//////////                                 //////////\n/////////////////////////////////////////////////////\n/////////////////////////////////////////////////////\nconst getDiscriminator = (type) => {\n    if (type instanceof ZodLazy) {\n        return getDiscriminator(type.schema);\n    }\n    else if (type instanceof ZodEffects) {\n        return getDiscriminator(type.innerType());\n    }\n    else if (type instanceof ZodLiteral) {\n        return [type.value];\n    }\n    else if (type instanceof ZodEnum) {\n        return type.options;\n    }\n    else if (type instanceof ZodNativeEnum) {\n        // eslint-disable-next-line ban/ban\n        return Object.keys(type.enum);\n    }\n    else if (type instanceof ZodDefault) {\n        return getDiscriminator(type._def.innerType);\n    }\n    else if (type instanceof ZodUndefined) {\n        return [undefined];\n    }\n    else if (type instanceof ZodNull) {\n        return [null];\n    }\n    else {\n        return null;\n    }\n};\nclass ZodDiscriminatedUnion extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const discriminator = this.discriminator;\n        const discriminatorValue = ctx.data[discriminator];\n        const option = this.optionsMap.get(discriminatorValue);\n        if (!option) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_union_discriminator,\n                options: Array.from(this.optionsMap.keys()),\n                path: [discriminator],\n            });\n            return INVALID;\n        }\n        if (ctx.common.async) {\n            return option._parseAsync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n        else {\n            return option._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n        }\n    }\n    get discriminator() {\n        return this._def.discriminator;\n    }\n    get options() {\n        return this._def.options;\n    }\n    get optionsMap() {\n        return this._def.optionsMap;\n    }\n    /**\n     * The constructor of the discriminated union schema. Its behaviour is very similar to that of the normal z.union() constructor.\n     * However, it only allows a union of objects, all of which need to share a discriminator property. This property must\n     * have a different value for each object in the union.\n     * @param discriminator the name of the discriminator property\n     * @param types an array of object schemas\n     * @param params\n     */\n    static create(discriminator, options, params) {\n        // Get all the valid discriminator values\n        const optionsMap = new Map();\n        // try {\n        for (const type of options) {\n            const discriminatorValues = getDiscriminator(type.shape[discriminator]);\n            if (!discriminatorValues) {\n                throw new Error(`A discriminator value for key \\`${discriminator}\\` could not be extracted from all schema options`);\n            }\n            for (const value of discriminatorValues) {\n                if (optionsMap.has(value)) {\n                    throw new Error(`Discriminator property ${String(discriminator)} has duplicate value ${String(value)}`);\n                }\n                optionsMap.set(value, type);\n            }\n        }\n        return new ZodDiscriminatedUnion({\n            typeName: ZodFirstPartyTypeKind.ZodDiscriminatedUnion,\n            discriminator,\n            options,\n            optionsMap,\n            ...processCreateParams(params),\n        });\n    }\n}\nfunction mergeValues(a, b) {\n    const aType = getParsedType(a);\n    const bType = getParsedType(b);\n    if (a === b) {\n        return { valid: true, data: a };\n    }\n    else if (aType === ZodParsedType.object && bType === ZodParsedType.object) {\n        const bKeys = util.objectKeys(b);\n        const sharedKeys = util\n            .objectKeys(a)\n            .filter((key) => bKeys.indexOf(key) !== -1);\n        const newObj = { ...a, ...b };\n        for (const key of sharedKeys) {\n            const sharedValue = mergeValues(a[key], b[key]);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newObj[key] = sharedValue.data;\n        }\n        return { valid: true, data: newObj };\n    }\n    else if (aType === ZodParsedType.array && bType === ZodParsedType.array) {\n        if (a.length !== b.length) {\n            return { valid: false };\n        }\n        const newArray = [];\n        for (let index = 0; index < a.length; index++) {\n            const itemA = a[index];\n            const itemB = b[index];\n            const sharedValue = mergeValues(itemA, itemB);\n            if (!sharedValue.valid) {\n                return { valid: false };\n            }\n            newArray.push(sharedValue.data);\n        }\n        return { valid: true, data: newArray };\n    }\n    else if (aType === ZodParsedType.date &&\n        bType === ZodParsedType.date &&\n        +a === +b) {\n        return { valid: true, data: a };\n    }\n    else {\n        return { valid: false };\n    }\n}\nclass ZodIntersection extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const handleParsed = (parsedLeft, parsedRight) => {\n            if (isAborted(parsedLeft) || isAborted(parsedRight)) {\n                return INVALID;\n            }\n            const merged = mergeValues(parsedLeft.value, parsedRight.value);\n            if (!merged.valid) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.invalid_intersection_types,\n                });\n                return INVALID;\n            }\n            if (isDirty(parsedLeft) || isDirty(parsedRight)) {\n                status.dirty();\n            }\n            return { status: status.value, value: merged.data };\n        };\n        if (ctx.common.async) {\n            return Promise.all([\n                this._def.left._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n                this._def.right._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                }),\n            ]).then(([left, right]) => handleParsed(left, right));\n        }\n        else {\n            return handleParsed(this._def.left._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }), this._def.right._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            }));\n        }\n    }\n}\nZodIntersection.create = (left, right, params) => {\n    return new ZodIntersection({\n        left: left,\n        right: right,\n        typeName: ZodFirstPartyTypeKind.ZodIntersection,\n        ...processCreateParams(params),\n    });\n};\nclass ZodTuple extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.array) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.array,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        if (ctx.data.length < this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_small,\n                minimum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            return INVALID;\n        }\n        const rest = this._def.rest;\n        if (!rest && ctx.data.length > this._def.items.length) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.too_big,\n                maximum: this._def.items.length,\n                inclusive: true,\n                exact: false,\n                type: \"array\",\n            });\n            status.dirty();\n        }\n        const items = ctx.data\n            .map((item, itemIndex) => {\n            const schema = this._def.items[itemIndex] || this._def.rest;\n            if (!schema)\n                return null;\n            return schema._parse(new ParseInputLazyPath(ctx, item, ctx.path, itemIndex));\n        })\n            .filter((x) => !!x); // filter nulls\n        if (ctx.common.async) {\n            return Promise.all(items).then((results) => {\n                return ParseStatus.mergeArray(status, results);\n            });\n        }\n        else {\n            return ParseStatus.mergeArray(status, items);\n        }\n    }\n    get items() {\n        return this._def.items;\n    }\n    rest(rest) {\n        return new ZodTuple({\n            ...this._def,\n            rest,\n        });\n    }\n}\nZodTuple.create = (schemas, params) => {\n    if (!Array.isArray(schemas)) {\n        throw new Error(\"You must pass an array of schemas to z.tuple([ ... ])\");\n    }\n    return new ZodTuple({\n        items: schemas,\n        typeName: ZodFirstPartyTypeKind.ZodTuple,\n        rest: null,\n        ...processCreateParams(params),\n    });\n};\nclass ZodRecord extends ZodType {\n    get keySchema() {\n        return this._def.keyType;\n    }\n    get valueSchema() {\n        return this._def.valueType;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.object) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.object,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const pairs = [];\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        for (const key in ctx.data) {\n            pairs.push({\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, key)),\n                value: valueType._parse(new ParseInputLazyPath(ctx, ctx.data[key], ctx.path, key)),\n            });\n        }\n        if (ctx.common.async) {\n            return ParseStatus.mergeObjectAsync(status, pairs);\n        }\n        else {\n            return ParseStatus.mergeObjectSync(status, pairs);\n        }\n    }\n    get element() {\n        return this._def.valueType;\n    }\n    static create(first, second, third) {\n        if (second instanceof ZodType) {\n            return new ZodRecord({\n                keyType: first,\n                valueType: second,\n                typeName: ZodFirstPartyTypeKind.ZodRecord,\n                ...processCreateParams(third),\n            });\n        }\n        return new ZodRecord({\n            keyType: ZodString.create(),\n            valueType: first,\n            typeName: ZodFirstPartyTypeKind.ZodRecord,\n            ...processCreateParams(second),\n        });\n    }\n}\nclass ZodMap extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.map) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.map,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const keyType = this._def.keyType;\n        const valueType = this._def.valueType;\n        const pairs = [...ctx.data.entries()].map(([key, value], index) => {\n            return {\n                key: keyType._parse(new ParseInputLazyPath(ctx, key, ctx.path, [index, \"key\"])),\n                value: valueType._parse(new ParseInputLazyPath(ctx, value, ctx.path, [index, \"value\"])),\n            };\n        });\n        if (ctx.common.async) {\n            const finalMap = new Map();\n            return Promise.resolve().then(async () => {\n                for (const pair of pairs) {\n                    const key = await pair.key;\n                    const value = await pair.value;\n                    if (key.status === \"aborted\" || value.status === \"aborted\") {\n                        return INVALID;\n                    }\n                    if (key.status === \"dirty\" || value.status === \"dirty\") {\n                        status.dirty();\n                    }\n                    finalMap.set(key.value, value.value);\n                }\n                return { status: status.value, value: finalMap };\n            });\n        }\n        else {\n            const finalMap = new Map();\n            for (const pair of pairs) {\n                const key = pair.key;\n                const value = pair.value;\n                if (key.status === \"aborted\" || value.status === \"aborted\") {\n                    return INVALID;\n                }\n                if (key.status === \"dirty\" || value.status === \"dirty\") {\n                    status.dirty();\n                }\n                finalMap.set(key.value, value.value);\n            }\n            return { status: status.value, value: finalMap };\n        }\n    }\n}\nZodMap.create = (keyType, valueType, params) => {\n    return new ZodMap({\n        valueType,\n        keyType,\n        typeName: ZodFirstPartyTypeKind.ZodMap,\n        ...processCreateParams(params),\n    });\n};\nclass ZodSet extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.set) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.set,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const def = this._def;\n        if (def.minSize !== null) {\n            if (ctx.data.size < def.minSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_small,\n                    minimum: def.minSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.minSize.message,\n                });\n                status.dirty();\n            }\n        }\n        if (def.maxSize !== null) {\n            if (ctx.data.size > def.maxSize.value) {\n                addIssueToContext(ctx, {\n                    code: ZodIssueCode.too_big,\n                    maximum: def.maxSize.value,\n                    type: \"set\",\n                    inclusive: true,\n                    exact: false,\n                    message: def.maxSize.message,\n                });\n                status.dirty();\n            }\n        }\n        const valueType = this._def.valueType;\n        function finalizeSet(elements) {\n            const parsedSet = new Set();\n            for (const element of elements) {\n                if (element.status === \"aborted\")\n                    return INVALID;\n                if (element.status === \"dirty\")\n                    status.dirty();\n                parsedSet.add(element.value);\n            }\n            return { status: status.value, value: parsedSet };\n        }\n        const elements = [...ctx.data.values()].map((item, i) => valueType._parse(new ParseInputLazyPath(ctx, item, ctx.path, i)));\n        if (ctx.common.async) {\n            return Promise.all(elements).then((elements) => finalizeSet(elements));\n        }\n        else {\n            return finalizeSet(elements);\n        }\n    }\n    min(minSize, message) {\n        return new ZodSet({\n            ...this._def,\n            minSize: { value: minSize, message: errorUtil.toString(message) },\n        });\n    }\n    max(maxSize, message) {\n        return new ZodSet({\n            ...this._def,\n            maxSize: { value: maxSize, message: errorUtil.toString(message) },\n        });\n    }\n    size(size, message) {\n        return this.min(size, message).max(size, message);\n    }\n    nonempty(message) {\n        return this.min(1, message);\n    }\n}\nZodSet.create = (valueType, params) => {\n    return new ZodSet({\n        valueType,\n        minSize: null,\n        maxSize: null,\n        typeName: ZodFirstPartyTypeKind.ZodSet,\n        ...processCreateParams(params),\n    });\n};\nclass ZodFunction extends ZodType {\n    constructor() {\n        super(...arguments);\n        this.validate = this.implement;\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.function) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.function,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        function makeArgsIssue(args, error) {\n            return makeIssue({\n                data: args,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_arguments,\n                    argumentsError: error,\n                },\n            });\n        }\n        function makeReturnsIssue(returns, error) {\n            return makeIssue({\n                data: returns,\n                path: ctx.path,\n                errorMaps: [\n                    ctx.common.contextualErrorMap,\n                    ctx.schemaErrorMap,\n                    getErrorMap(),\n                    errorMap,\n                ].filter((x) => !!x),\n                issueData: {\n                    code: ZodIssueCode.invalid_return_type,\n                    returnTypeError: error,\n                },\n            });\n        }\n        const params = { errorMap: ctx.common.contextualErrorMap };\n        const fn = ctx.data;\n        if (this._def.returns instanceof ZodPromise) {\n            return OK(async (...args) => {\n                const error = new ZodError([]);\n                const parsedArgs = await this._def.args\n                    .parseAsync(args, params)\n                    .catch((e) => {\n                    error.addIssue(makeArgsIssue(args, e));\n                    throw error;\n                });\n                const result = await fn(...parsedArgs);\n                const parsedReturns = await this._def.returns._def.type\n                    .parseAsync(result, params)\n                    .catch((e) => {\n                    error.addIssue(makeReturnsIssue(result, e));\n                    throw error;\n                });\n                return parsedReturns;\n            });\n        }\n        else {\n            return OK((...args) => {\n                const parsedArgs = this._def.args.safeParse(args, params);\n                if (!parsedArgs.success) {\n                    throw new ZodError([makeArgsIssue(args, parsedArgs.error)]);\n                }\n                const result = fn(...parsedArgs.data);\n                const parsedReturns = this._def.returns.safeParse(result, params);\n                if (!parsedReturns.success) {\n                    throw new ZodError([makeReturnsIssue(result, parsedReturns.error)]);\n                }\n                return parsedReturns.data;\n            });\n        }\n    }\n    parameters() {\n        return this._def.args;\n    }\n    returnType() {\n        return this._def.returns;\n    }\n    args(...items) {\n        return new ZodFunction({\n            ...this._def,\n            args: ZodTuple.create(items).rest(ZodUnknown.create()),\n        });\n    }\n    returns(returnType) {\n        return new ZodFunction({\n            ...this._def,\n            returns: returnType,\n        });\n    }\n    implement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    strictImplement(func) {\n        const validatedFunc = this.parse(func);\n        return validatedFunc;\n    }\n    static create(args, returns, params) {\n        return new ZodFunction({\n            args: (args\n                ? args\n                : ZodTuple.create([]).rest(ZodUnknown.create())),\n            returns: returns || ZodUnknown.create(),\n            typeName: ZodFirstPartyTypeKind.ZodFunction,\n            ...processCreateParams(params),\n        });\n    }\n}\nclass ZodLazy extends ZodType {\n    get schema() {\n        return this._def.getter();\n    }\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const lazySchema = this._def.getter();\n        return lazySchema._parse({ data: ctx.data, path: ctx.path, parent: ctx });\n    }\n}\nZodLazy.create = (getter, params) => {\n    return new ZodLazy({\n        getter: getter,\n        typeName: ZodFirstPartyTypeKind.ZodLazy,\n        ...processCreateParams(params),\n    });\n};\nclass ZodLiteral extends ZodType {\n    _parse(input) {\n        if (input.data !== this._def.value) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_literal,\n                expected: this._def.value,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n    get value() {\n        return this._def.value;\n    }\n}\nZodLiteral.create = (value, params) => {\n    return new ZodLiteral({\n        value: value,\n        typeName: ZodFirstPartyTypeKind.ZodLiteral,\n        ...processCreateParams(params),\n    });\n};\nfunction createZodEnum(values, params) {\n    return new ZodEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodEnum,\n        ...processCreateParams(params),\n    });\n}\nclass ZodEnum extends ZodType {\n    _parse(input) {\n        if (typeof input.data !== \"string\") {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (this._def.values.indexOf(input.data) === -1) {\n            const ctx = this._getOrReturnCtx(input);\n            const expectedValues = this._def.values;\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get options() {\n        return this._def.values;\n    }\n    get enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Values() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n    get Enum() {\n        const enumValues = {};\n        for (const val of this._def.values) {\n            enumValues[val] = val;\n        }\n        return enumValues;\n    }\n}\nZodEnum.create = createZodEnum;\nclass ZodNativeEnum extends ZodType {\n    _parse(input) {\n        const nativeEnumValues = util.getValidEnumValues(this._def.values);\n        const ctx = this._getOrReturnCtx(input);\n        if (ctx.parsedType !== ZodParsedType.string &&\n            ctx.parsedType !== ZodParsedType.number) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                expected: util.joinValues(expectedValues),\n                received: ctx.parsedType,\n                code: ZodIssueCode.invalid_type,\n            });\n            return INVALID;\n        }\n        if (nativeEnumValues.indexOf(input.data) === -1) {\n            const expectedValues = util.objectValues(nativeEnumValues);\n            addIssueToContext(ctx, {\n                received: ctx.data,\n                code: ZodIssueCode.invalid_enum_value,\n                options: expectedValues,\n            });\n            return INVALID;\n        }\n        return OK(input.data);\n    }\n    get enum() {\n        return this._def.values;\n    }\n}\nZodNativeEnum.create = (values, params) => {\n    return new ZodNativeEnum({\n        values: values,\n        typeName: ZodFirstPartyTypeKind.ZodNativeEnum,\n        ...processCreateParams(params),\n    });\n};\nclass ZodPromise extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        if (ctx.parsedType !== ZodParsedType.promise &&\n            ctx.common.async === false) {\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.promise,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        const promisified = ctx.parsedType === ZodParsedType.promise\n            ? ctx.data\n            : Promise.resolve(ctx.data);\n        return OK(promisified.then((data) => {\n            return this._def.type.parseAsync(data, {\n                path: ctx.path,\n                errorMap: ctx.common.contextualErrorMap,\n            });\n        }));\n    }\n}\nZodPromise.create = (schema, params) => {\n    return new ZodPromise({\n        type: schema,\n        typeName: ZodFirstPartyTypeKind.ZodPromise,\n        ...processCreateParams(params),\n    });\n};\nclass ZodEffects extends ZodType {\n    innerType() {\n        return this._def.schema;\n    }\n    sourceType() {\n        return this._def.schema._def.typeName === ZodFirstPartyTypeKind.ZodEffects\n            ? this._def.schema.sourceType()\n            : this._def.schema;\n    }\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        const effect = this._def.effect || null;\n        if (effect.type === \"preprocess\") {\n            const processed = effect.transform(ctx.data);\n            if (ctx.common.async) {\n                return Promise.resolve(processed).then((processed) => {\n                    return this._def.schema._parseAsync({\n                        data: processed,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                });\n            }\n            else {\n                return this._def.schema._parseSync({\n                    data: processed,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n        const checkCtx = {\n            addIssue: (arg) => {\n                addIssueToContext(ctx, arg);\n                if (arg.fatal) {\n                    status.abort();\n                }\n                else {\n                    status.dirty();\n                }\n            },\n            get path() {\n                return ctx.path;\n            },\n        };\n        checkCtx.addIssue = checkCtx.addIssue.bind(checkCtx);\n        if (effect.type === \"refinement\") {\n            const executeRefinement = (acc\n            // effect: RefinementEffect<any>\n            ) => {\n                const result = effect.refinement(acc, checkCtx);\n                if (ctx.common.async) {\n                    return Promise.resolve(result);\n                }\n                if (result instanceof Promise) {\n                    throw new Error(\"Async refinement encountered during synchronous parse operation. Use .parseAsync instead.\");\n                }\n                return acc;\n            };\n            if (ctx.common.async === false) {\n                const inner = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inner.status === \"aborted\")\n                    return INVALID;\n                if (inner.status === \"dirty\")\n                    status.dirty();\n                // return value is ignored\n                executeRefinement(inner.value);\n                return { status: status.value, value: inner.value };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((inner) => {\n                    if (inner.status === \"aborted\")\n                        return INVALID;\n                    if (inner.status === \"dirty\")\n                        status.dirty();\n                    return executeRefinement(inner.value).then(() => {\n                        return { status: status.value, value: inner.value };\n                    });\n                });\n            }\n        }\n        if (effect.type === \"transform\") {\n            if (ctx.common.async === false) {\n                const base = this._def.schema._parseSync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                // if (base.status === \"aborted\") return INVALID;\n                // if (base.status === \"dirty\") {\n                //   return { status: \"dirty\", value: base.value };\n                // }\n                if (!isValid(base))\n                    return base;\n                const result = effect.transform(base.value, checkCtx);\n                if (result instanceof Promise) {\n                    throw new Error(`Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.`);\n                }\n                return { status: status.value, value: result };\n            }\n            else {\n                return this._def.schema\n                    ._parseAsync({ data: ctx.data, path: ctx.path, parent: ctx })\n                    .then((base) => {\n                    if (!isValid(base))\n                        return base;\n                    // if (base.status === \"aborted\") return INVALID;\n                    // if (base.status === \"dirty\") {\n                    //   return { status: \"dirty\", value: base.value };\n                    // }\n                    return Promise.resolve(effect.transform(base.value, checkCtx)).then((result) => ({ status: status.value, value: result }));\n                });\n            }\n        }\n        util.assertNever(effect);\n    }\n}\nZodEffects.create = (schema, effect, params) => {\n    return new ZodEffects({\n        schema,\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        effect,\n        ...processCreateParams(params),\n    });\n};\nZodEffects.createWithPreprocess = (preprocess, schema, params) => {\n    return new ZodEffects({\n        schema,\n        effect: { type: \"preprocess\", transform: preprocess },\n        typeName: ZodFirstPartyTypeKind.ZodEffects,\n        ...processCreateParams(params),\n    });\n};\nclass ZodOptional extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.undefined) {\n            return OK(undefined);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodOptional.create = (type, params) => {\n    return new ZodOptional({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodOptional,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNullable extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType === ZodParsedType.null) {\n            return OK(null);\n        }\n        return this._def.innerType._parse(input);\n    }\n    unwrap() {\n        return this._def.innerType;\n    }\n}\nZodNullable.create = (type, params) => {\n    return new ZodNullable({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodNullable,\n        ...processCreateParams(params),\n    });\n};\nclass ZodDefault extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        let data = ctx.data;\n        if (ctx.parsedType === ZodParsedType.undefined) {\n            data = this._def.defaultValue();\n        }\n        return this._def.innerType._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodDefault.create = (type, params) => {\n    return new ZodDefault({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodDefault,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodCatch extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const result = this._def.innerType._parse({\n            data: ctx.data,\n            path: ctx.path,\n            parent: ctx,\n        });\n        if (isAsync(result)) {\n            return result.then((result) => {\n                return {\n                    status: \"valid\",\n                    value: result.status === \"valid\" ? result.value : this._def.defaultValue(),\n                };\n            });\n        }\n        else {\n            return {\n                status: \"valid\",\n                value: result.status === \"valid\" ? result.value : this._def.defaultValue(),\n            };\n        }\n    }\n    removeDefault() {\n        return this._def.innerType;\n    }\n}\nZodCatch.create = (type, params) => {\n    return new ZodCatch({\n        innerType: type,\n        typeName: ZodFirstPartyTypeKind.ZodCatch,\n        defaultValue: typeof params.default === \"function\"\n            ? params.default\n            : () => params.default,\n        ...processCreateParams(params),\n    });\n};\nclass ZodNaN extends ZodType {\n    _parse(input) {\n        const parsedType = this._getType(input);\n        if (parsedType !== ZodParsedType.nan) {\n            const ctx = this._getOrReturnCtx(input);\n            addIssueToContext(ctx, {\n                code: ZodIssueCode.invalid_type,\n                expected: ZodParsedType.nan,\n                received: ctx.parsedType,\n            });\n            return INVALID;\n        }\n        return { status: \"valid\", value: input.data };\n    }\n}\nZodNaN.create = (params) => {\n    return new ZodNaN({\n        typeName: ZodFirstPartyTypeKind.ZodNaN,\n        ...processCreateParams(params),\n    });\n};\nconst BRAND = Symbol(\"zod_brand\");\nclass ZodBranded extends ZodType {\n    _parse(input) {\n        const { ctx } = this._processInputParams(input);\n        const data = ctx.data;\n        return this._def.type._parse({\n            data,\n            path: ctx.path,\n            parent: ctx,\n        });\n    }\n    unwrap() {\n        return this._def.type;\n    }\n}\nclass ZodPipeline extends ZodType {\n    _parse(input) {\n        const { status, ctx } = this._processInputParams(input);\n        if (ctx.common.async) {\n            const handleAsync = async () => {\n                const inResult = await this._def.in._parseAsync({\n                    data: ctx.data,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n                if (inResult.status === \"aborted\")\n                    return INVALID;\n                if (inResult.status === \"dirty\") {\n                    status.dirty();\n                    return DIRTY(inResult.value);\n                }\n                else {\n                    return this._def.out._parseAsync({\n                        data: inResult.value,\n                        path: ctx.path,\n                        parent: ctx,\n                    });\n                }\n            };\n            return handleAsync();\n        }\n        else {\n            const inResult = this._def.in._parseSync({\n                data: ctx.data,\n                path: ctx.path,\n                parent: ctx,\n            });\n            if (inResult.status === \"aborted\")\n                return INVALID;\n            if (inResult.status === \"dirty\") {\n                status.dirty();\n                return {\n                    status: \"dirty\",\n                    value: inResult.value,\n                };\n            }\n            else {\n                return this._def.out._parseSync({\n                    data: inResult.value,\n                    path: ctx.path,\n                    parent: ctx,\n                });\n            }\n        }\n    }\n    static create(a, b) {\n        return new ZodPipeline({\n            in: a,\n            out: b,\n            typeName: ZodFirstPartyTypeKind.ZodPipeline,\n        });\n    }\n}\nconst custom = (check, params = {}, fatal) => {\n    if (check)\n        return ZodAny.create().superRefine((data, ctx) => {\n            if (!check(data)) {\n                const p = typeof params === \"function\" ? params(data) : params;\n                const p2 = typeof p === \"string\" ? { message: p } : p;\n                ctx.addIssue({ code: \"custom\", ...p2, fatal });\n            }\n        });\n    return ZodAny.create();\n};\nconst late = {\n    object: ZodObject.lazycreate,\n};\nvar ZodFirstPartyTypeKind;\n(function (ZodFirstPartyTypeKind) {\n    ZodFirstPartyTypeKind[\"ZodString\"] = \"ZodString\";\n    ZodFirstPartyTypeKind[\"ZodNumber\"] = \"ZodNumber\";\n    ZodFirstPartyTypeKind[\"ZodNaN\"] = \"ZodNaN\";\n    ZodFirstPartyTypeKind[\"ZodBigInt\"] = \"ZodBigInt\";\n    ZodFirstPartyTypeKind[\"ZodBoolean\"] = \"ZodBoolean\";\n    ZodFirstPartyTypeKind[\"ZodDate\"] = \"ZodDate\";\n    ZodFirstPartyTypeKind[\"ZodSymbol\"] = \"ZodSymbol\";\n    ZodFirstPartyTypeKind[\"ZodUndefined\"] = \"ZodUndefined\";\n    ZodFirstPartyTypeKind[\"ZodNull\"] = \"ZodNull\";\n    ZodFirstPartyTypeKind[\"ZodAny\"] = \"ZodAny\";\n    ZodFirstPartyTypeKind[\"ZodUnknown\"] = \"ZodUnknown\";\n    ZodFirstPartyTypeKind[\"ZodNever\"] = \"ZodNever\";\n    ZodFirstPartyTypeKind[\"ZodVoid\"] = \"ZodVoid\";\n    ZodFirstPartyTypeKind[\"ZodArray\"] = \"ZodArray\";\n    ZodFirstPartyTypeKind[\"ZodObject\"] = \"ZodObject\";\n    ZodFirstPartyTypeKind[\"ZodUnion\"] = \"ZodUnion\";\n    ZodFirstPartyTypeKind[\"ZodDiscriminatedUnion\"] = \"ZodDiscriminatedUnion\";\n    ZodFirstPartyTypeKind[\"ZodIntersection\"] = \"ZodIntersection\";\n    ZodFirstPartyTypeKind[\"ZodTuple\"] = \"ZodTuple\";\n    ZodFirstPartyTypeKind[\"ZodRecord\"] = \"ZodRecord\";\n    ZodFirstPartyTypeKind[\"ZodMap\"] = \"ZodMap\";\n    ZodFirstPartyTypeKind[\"ZodSet\"] = \"ZodSet\";\n    ZodFirstPartyTypeKind[\"ZodFunction\"] = \"ZodFunction\";\n    ZodFirstPartyTypeKind[\"ZodLazy\"] = \"ZodLazy\";\n    ZodFirstPartyTypeKind[\"ZodLiteral\"] = \"ZodLiteral\";\n    ZodFirstPartyTypeKind[\"ZodEnum\"] = \"ZodEnum\";\n    ZodFirstPartyTypeKind[\"ZodEffects\"] = \"ZodEffects\";\n    ZodFirstPartyTypeKind[\"ZodNativeEnum\"] = \"ZodNativeEnum\";\n    ZodFirstPartyTypeKind[\"ZodOptional\"] = \"ZodOptional\";\n    ZodFirstPartyTypeKind[\"ZodNullable\"] = \"ZodNullable\";\n    ZodFirstPartyTypeKind[\"ZodDefault\"] = \"ZodDefault\";\n    ZodFirstPartyTypeKind[\"ZodCatch\"] = \"ZodCatch\";\n    ZodFirstPartyTypeKind[\"ZodPromise\"] = \"ZodPromise\";\n    ZodFirstPartyTypeKind[\"ZodBranded\"] = \"ZodBranded\";\n    ZodFirstPartyTypeKind[\"ZodPipeline\"] = \"ZodPipeline\";\n})(ZodFirstPartyTypeKind || (ZodFirstPartyTypeKind = {}));\nconst instanceOfType = (\n// const instanceOfType = <T extends new (...args: any[]) => any>(\ncls, params = {\n    message: `Input not instance of ${cls.name}`,\n}) => custom((data) => data instanceof cls, params, true);\nconst stringType = ZodString.create;\nconst numberType = ZodNumber.create;\nconst nanType = ZodNaN.create;\nconst bigIntType = ZodBigInt.create;\nconst booleanType = ZodBoolean.create;\nconst dateType = ZodDate.create;\nconst symbolType = ZodSymbol.create;\nconst undefinedType = ZodUndefined.create;\nconst nullType = ZodNull.create;\nconst anyType = ZodAny.create;\nconst unknownType = ZodUnknown.create;\nconst neverType = ZodNever.create;\nconst voidType = ZodVoid.create;\nconst arrayType = ZodArray.create;\nconst objectType = ZodObject.create;\nconst strictObjectType = ZodObject.strictCreate;\nconst unionType = ZodUnion.create;\nconst discriminatedUnionType = ZodDiscriminatedUnion.create;\nconst intersectionType = ZodIntersection.create;\nconst tupleType = ZodTuple.create;\nconst recordType = ZodRecord.create;\nconst mapType = ZodMap.create;\nconst setType = ZodSet.create;\nconst functionType = ZodFunction.create;\nconst lazyType = ZodLazy.create;\nconst literalType = ZodLiteral.create;\nconst enumType = ZodEnum.create;\nconst nativeEnumType = ZodNativeEnum.create;\nconst promiseType = ZodPromise.create;\nconst effectsType = ZodEffects.create;\nconst optionalType = ZodOptional.create;\nconst nullableType = ZodNullable.create;\nconst preprocessType = ZodEffects.createWithPreprocess;\nconst pipelineType = ZodPipeline.create;\nconst ostring = () => stringType().optional();\nconst onumber = () => numberType().optional();\nconst oboolean = () => booleanType().optional();\nconst coerce = {\n    string: ((arg) => ZodString.create({ ...arg, coerce: true })),\n    number: ((arg) => ZodNumber.create({ ...arg, coerce: true })),\n    boolean: ((arg) => ZodBoolean.create({ ...arg, coerce: true })),\n    bigint: ((arg) => ZodBigInt.create({ ...arg, coerce: true })),\n    date: ((arg) => ZodDate.create({ ...arg, coerce: true })),\n};\nconst NEVER = INVALID;\n\nvar mod = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    defaultErrorMap: errorMap,\n    setErrorMap: setErrorMap,\n    getErrorMap: getErrorMap,\n    makeIssue: makeIssue,\n    EMPTY_PATH: EMPTY_PATH,\n    addIssueToContext: addIssueToContext,\n    ParseStatus: ParseStatus,\n    INVALID: INVALID,\n    DIRTY: DIRTY,\n    OK: OK,\n    isAborted: isAborted,\n    isDirty: isDirty,\n    isValid: isValid,\n    isAsync: isAsync,\n    get util () { return util; },\n    ZodParsedType: ZodParsedType,\n    getParsedType: getParsedType,\n    ZodType: ZodType,\n    ZodString: ZodString,\n    ZodNumber: ZodNumber,\n    ZodBigInt: ZodBigInt,\n    ZodBoolean: ZodBoolean,\n    ZodDate: ZodDate,\n    ZodSymbol: ZodSymbol,\n    ZodUndefined: ZodUndefined,\n    ZodNull: ZodNull,\n    ZodAny: ZodAny,\n    ZodUnknown: ZodUnknown,\n    ZodNever: ZodNever,\n    ZodVoid: ZodVoid,\n    ZodArray: ZodArray,\n    get objectUtil () { return objectUtil; },\n    ZodObject: ZodObject,\n    ZodUnion: ZodUnion,\n    ZodDiscriminatedUnion: ZodDiscriminatedUnion,\n    ZodIntersection: ZodIntersection,\n    ZodTuple: ZodTuple,\n    ZodRecord: ZodRecord,\n    ZodMap: ZodMap,\n    ZodSet: ZodSet,\n    ZodFunction: ZodFunction,\n    ZodLazy: ZodLazy,\n    ZodLiteral: ZodLiteral,\n    ZodEnum: ZodEnum,\n    ZodNativeEnum: ZodNativeEnum,\n    ZodPromise: ZodPromise,\n    ZodEffects: ZodEffects,\n    ZodTransformer: ZodEffects,\n    ZodOptional: ZodOptional,\n    ZodNullable: ZodNullable,\n    ZodDefault: ZodDefault,\n    ZodCatch: ZodCatch,\n    ZodNaN: ZodNaN,\n    BRAND: BRAND,\n    ZodBranded: ZodBranded,\n    ZodPipeline: ZodPipeline,\n    custom: custom,\n    Schema: ZodType,\n    ZodSchema: ZodType,\n    late: late,\n    get ZodFirstPartyTypeKind () { return ZodFirstPartyTypeKind; },\n    coerce: coerce,\n    any: anyType,\n    array: arrayType,\n    bigint: bigIntType,\n    boolean: booleanType,\n    date: dateType,\n    discriminatedUnion: discriminatedUnionType,\n    effect: effectsType,\n    'enum': enumType,\n    'function': functionType,\n    'instanceof': instanceOfType,\n    intersection: intersectionType,\n    lazy: lazyType,\n    literal: literalType,\n    map: mapType,\n    nan: nanType,\n    nativeEnum: nativeEnumType,\n    never: neverType,\n    'null': nullType,\n    nullable: nullableType,\n    number: numberType,\n    object: objectType,\n    oboolean: oboolean,\n    onumber: onumber,\n    optional: optionalType,\n    ostring: ostring,\n    pipeline: pipelineType,\n    preprocess: preprocessType,\n    promise: promiseType,\n    record: recordType,\n    set: setType,\n    strictObject: strictObjectType,\n    string: stringType,\n    symbol: symbolType,\n    transformer: effectsType,\n    tuple: tupleType,\n    'undefined': undefinedType,\n    union: unionType,\n    unknown: unknownType,\n    'void': voidType,\n    NEVER: NEVER,\n    ZodIssueCode: ZodIssueCode,\n    quotelessJson: quotelessJson,\n    ZodError: ZodError\n});\n\nexport { BRAND, DIRTY, EMPTY_PATH, INVALID, NEVER, OK, ParseStatus, ZodType as Schema, ZodAny, ZodArray, ZodBigInt, ZodBoolean, ZodBranded, ZodCatch, ZodDate, ZodDefault, ZodDiscriminatedUnion, ZodEffects, ZodEnum, ZodError, ZodFirstPartyTypeKind, ZodFunction, ZodIntersection, ZodIssueCode, ZodLazy, ZodLiteral, ZodMap, ZodNaN, ZodNativeEnum, ZodNever, ZodNull, ZodNullable, ZodNumber, ZodObject, ZodOptional, ZodParsedType, ZodPipeline, ZodPromise, ZodRecord, ZodType as ZodSchema, ZodSet, ZodString, ZodSymbol, ZodEffects as ZodTransformer, ZodTuple, ZodType, ZodUndefined, ZodUnion, ZodUnknown, ZodVoid, addIssueToContext, anyType as any, arrayType as array, bigIntType as bigint, booleanType as boolean, coerce, custom, dateType as date, mod as default, errorMap as defaultErrorMap, discriminatedUnionType as discriminatedUnion, effectsType as effect, enumType as enum, functionType as function, getErrorMap, getParsedType, instanceOfType as instanceof, intersectionType as intersection, isAborted, isAsync, isDirty, isValid, late, lazyType as lazy, literalType as literal, makeIssue, mapType as map, nanType as nan, nativeEnumType as nativeEnum, neverType as never, nullType as null, nullableType as nullable, numberType as number, objectType as object, objectUtil, oboolean, onumber, optionalType as optional, ostring, pipelineType as pipeline, preprocessType as preprocess, promiseType as promise, quotelessJson, recordType as record, setType as set, setErrorMap, strictObjectType as strictObject, stringType as string, symbolType as symbol, effectsType as transformer, tupleType as tuple, undefinedType as undefined, unionType as union, unknownType as unknown, util, voidType as void, mod as z };\n", "import BN from 'bn.js';\nimport { BigNumber } from 'ethers';\nimport { z } from 'zod';\n\n/**\n * @internal\n */\nconst isBrowser = () => typeof window !== \"undefined\";\n/**\n * @internal\n */\nconst FileOrBufferUnionSchema = isBrowser() ? z.instanceof(File) : z.instanceof(Buffer); // @fixme, this is a hack to make browser happy for now\n\n/**\n * @internal\n */\nconst FileOrBufferSchema = z.union([FileOrBufferUnionSchema, z.object({\n  data: z.union([FileOrBufferUnionSchema, z.string()]),\n  name: z.string()\n})]);\n\n/**\n * @internal\n */\nconst FileOrBufferOrStringSchema = z.union([FileOrBufferSchema, z.string()]);\nconst MAX_BPS = 10000;\nconst BytesLikeSchema = z.union([z.array(z.number()), z.string()]);\nconst BigNumberSchema = z.union([z.string(), z.number(), z.bigint(), z.custom(data => {\n  return BigNumber.isBigNumber(data);\n}), z.custom(data => {\n  return BN.isBN(data);\n})]).transform(arg => {\n  let str = BN.isBN(arg) ? new BN(arg).toString() : BigNumber.from(arg).toString();\n  return BigNumber.from(str);\n});\nBigNumberSchema.transform(arg => arg.toString());\nconst BigNumberTransformSchema = z.union([z.bigint(), z.custom(data => {\n  return BigNumber.isBigNumber(data);\n}), z.custom(data => {\n  return BN.isBN(data);\n})]).transform(arg => {\n  if (BN.isBN(arg)) {\n    return new BN(arg).toString();\n  }\n  return BigNumber.from(arg).toString();\n});\nconst BasisPointsSchema = z.number().max(MAX_BPS, \"Cannot exceed 100%\").min(0, \"Cannot be below 0%\");\nconst PercentSchema = z.number().max(100, \"Cannot exceed 100%\").min(0, \"Cannot be below 0%\");\nconst HexColor = z.union([z.string().regex(/^([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, \"Invalid hex color\"), z.string().regex(/^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/, \"Invalid hex color\").transform(val => val.replace(\"#\", \"\")), z.string().length(0)]);\nconst AmountSchema = z.union([z.string().regex(/^([0-9]+\\.?[0-9]*|\\.[0-9]+)$/, \"Invalid amount\"), z.number().min(0, \"Amount cannot be negative\")]).transform(arg => typeof arg === \"number\" ? arg.toString() : arg);\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst QuantitySchema = z.union([AmountSchema, z.literal(\"unlimited\")]).default(\"unlimited\");\nconst RawDateSchema = z.date().transform(i => {\n  return BigNumber.from(Math.floor(i.getTime() / 1000));\n});\n\n/**\n * Default to now\n */\nRawDateSchema.default(new Date(0));\n\n/**\n * Default to 10 years from now\n */\nRawDateSchema.default(new Date(Date.now() + 1000 * 60 * 60 * 24 * 365 * 10));\n\nconst PropertiesInput = z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()]));\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = z.union([z.array(PropertiesInput), PropertiesInput]).optional();\n\n/**\n * @internal\n */\nconst CommonNFTInput = z.object({\n  name: z.union([z.string(), z.number()]).optional(),\n  description: z.string().nullable().optional(),\n  image: FileOrBufferOrStringSchema.nullable().optional(),\n  external_url: FileOrBufferOrStringSchema.nullable().optional(),\n  animation_url: FileOrBufferOrStringSchema.optional(),\n  background_color: HexColor.optional(),\n  properties: OptionalPropertiesInput,\n  attributes: OptionalPropertiesInput\n}).catchall(z.union([BigNumberTransformSchema, z.unknown()]));\n\n/**\n * @internal\n */\nconst NFTInputOrUriSchema = z.union([CommonNFTInput, z.string()]);\n\n/**\n * @internal\n */\nconst CommonNFTOutput = CommonNFTInput.extend({\n  id: z.string(),\n  uri: z.string(),\n  image: z.string().nullable().optional(),\n  external_url: z.string().nullable().optional(),\n  animation_url: z.string().nullable().optional()\n});\n\n/**\n * @public\n */\n\nconst DEFAULT_API_KEY = \"c6634ad2d97b74baf15ff556016830c251050e6c36b9da508ce3ec80095d3dc1\";\nfunction getRpcUrl(network) {\n  return `https://${network}.rpc.thirdweb.com/${DEFAULT_API_KEY}`;\n}\n\n/**\n * @internal\n */\nconst DEFAULT_QUERY_ALL_COUNT = 100;\nconst QueryAllParamsSchema = z.object({\n  start: z.number().default(0),\n  count: z.number().default(DEFAULT_QUERY_ALL_COUNT)\n}).default({\n  start: 0,\n  count: DEFAULT_QUERY_ALL_COUNT\n});\n\n/**\n * Pagination Parameters\n * @public\n */\n\nexport { AmountSchema as A, BytesLikeSchema as B, CommonNFTOutput as C, DEFAULT_QUERY_ALL_COUNT as D, FileOrBufferOrStringSchema as F, MAX_BPS as M, NFTInputOrUriSchema as N, PercentSchema as P, QuantitySchema as Q, BasisPointsSchema as a, CommonNFTInput as b, QueryAllParamsSchema as c, getRpcUrl as g };\n", "function _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nexport { _defineProperty as _ };\n", "var isProduction = process.env.NODE_ENV === 'production';\nvar prefix = 'Invariant failed';\nfunction invariant(condition, message) {\n    if (condition) {\n        return;\n    }\n    if (isProduction) {\n        throw new Error(prefix);\n    }\n    var provided = typeof message === 'function' ? message() : message;\n    var value = provided ? \"\".concat(prefix, \": \").concat(provided) : prefix;\n    throw new Error(value);\n}\n\nexport { invariant as default };\n", "import EventEmitter from './index.js'\n\nexport { EventEmitter }\nexport default EventEmitter\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "import native from './native.js';\nimport rng from './rng.js';\nimport { unsafeStringify } from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nexport default v4;", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import fetch from 'cross-fetch';\nimport FormData from 'form-data';\nimport { v4 } from 'uuid';\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\n/**\n * @internal\n */\nconst DEFAULT_GATEWAY_URLS = {\n  // Note: Gateway URLs should have trailing slashes (we clean this on user input)\n  \"ipfs://\": [\"https://gateway.ipfscdn.io/ipfs/\", \"https://cloudflare-ipfs.com/ipfs/\", \"https://ipfs.io/ipfs/\"]\n};\n/**\n * @internal\n */\n\nconst TW_IPFS_SERVER_URL = \"https://upload.nftlabs.co\";\n/**\n * @internal\n */\n\nconst PINATA_IPFS_URL = `https://api.pinata.cloud/pinning/pinFileToIPFS`;\n/**\n * @internal\n */\n\nfunction prepareGatewayUrls(gatewayUrls) {\n  const allGatewayUrls = { ...gatewayUrls,\n    ...DEFAULT_GATEWAY_URLS\n  };\n\n  for (const key of Object.keys(DEFAULT_GATEWAY_URLS)) {\n    if (gatewayUrls && gatewayUrls[key]) {\n      // Make sure that all user gateway URLs have trailing slashes\n      const cleanedGatewayUrls = gatewayUrls[key].map(url => url.replace(/\\/$/, \"\") + \"/\");\n      allGatewayUrls[key] = [...cleanedGatewayUrls, ...DEFAULT_GATEWAY_URLS[key]];\n    }\n  }\n\n  return allGatewayUrls;\n}\n\n/**\n * @internal\n */\nfunction isBrowser() {\n  return typeof window !== \"undefined\";\n}\n/**\n * @internal\n */\n\nfunction isFileInstance(data) {\n  return global.File && data instanceof File;\n}\n/**\n * @internal\n */\n\nfunction isBufferInstance(data) {\n  return global.Buffer && data instanceof Buffer;\n}\n/**\n * @internal\n */\n\nfunction isBufferOrStringWithName(data) {\n  return !!(data && data.name && data.data && typeof data.name === \"string\" && (typeof data.data === \"string\" || isBufferInstance(data.data)));\n}\nfunction isFileOrBuffer(data) {\n  return isFileInstance(data) || isBufferInstance(data) || isBufferOrStringWithName(data);\n}\n/**\n * @internal\n */\n\nfunction isFileBufferOrStringEqual(input1, input2) {\n  if (isFileInstance(input1) && isFileInstance(input2)) {\n    // if both are File types, compare the name, size, and last modified date (best guess that these are the same files)\n    if (input1.name === input2.name && input1.lastModified === input2.lastModified && input1.size === input2.size) {\n      return true;\n    }\n  } else if (isBufferInstance(input1) && isBufferInstance(input2)) {\n    // buffer gives us an easy way to compare the contents!\n    return input1.equals(input2);\n  } else if (isBufferOrStringWithName(input1) && isBufferOrStringWithName(input2)) {\n    // first check the names\n    if (input1.name === input2.name) {\n      // if the data for both is a string, compare the strings\n      if (typeof input1.data === \"string\" && typeof input2.data === \"string\") {\n        return input1.data === input2.data;\n      } else if (isBufferInstance(input1.data) && isBufferInstance(input2.data)) {\n        // otherwise we know it's buffers, so compare the buffers\n        return input1.data.equals(input2.data);\n      }\n    }\n  } // otherwise if we have not found a match, return false\n\n\n  return false;\n}\n/**\n * @internal\n */\n\nfunction replaceGatewayUrlWithScheme(uri, gatewayUrls) {\n  for (const scheme of Object.keys(gatewayUrls)) {\n    for (const url of gatewayUrls[scheme]) {\n      if (uri.startsWith(url)) {\n        return uri.replace(url, scheme);\n      }\n    }\n  }\n\n  return uri;\n}\n/**\n * @internal\n */\n\nfunction replaceSchemeWithGatewayUrl(uri, gatewayUrls) {\n  let index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  const scheme = Object.keys(gatewayUrls).find(s => uri.startsWith(s));\n  const schemeGatewayUrls = scheme ? gatewayUrls[scheme] : [];\n\n  if (!scheme && index > 0 || scheme && index >= schemeGatewayUrls.length) {\n    return undefined;\n  }\n\n  if (!scheme) {\n    return uri;\n  }\n\n  return uri.replace(scheme, schemeGatewayUrls[index]);\n}\n/**\n * @internal\n */\n\nfunction replaceObjectGatewayUrlsWithSchemes(data, gatewayUrls) {\n  if (typeof data === \"string\") {\n    return replaceGatewayUrlWithScheme(data, gatewayUrls);\n  }\n\n  if (typeof data === \"object\") {\n    if (!data) {\n      return data;\n    }\n\n    if (isFileOrBuffer(data)) {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(entry => replaceObjectGatewayUrlsWithSchemes(entry, gatewayUrls));\n    }\n\n    return Object.fromEntries(Object.entries(data).map(_ref => {\n      let [key, value] = _ref;\n      return [key, replaceObjectGatewayUrlsWithSchemes(value, gatewayUrls)];\n    }));\n  }\n\n  return data;\n}\n/**\n * @internal\n */\n\nfunction replaceObjectSchemesWithGatewayUrls(data, gatewayUrls) {\n  if (typeof data === \"string\") {\n    return replaceSchemeWithGatewayUrl(data, gatewayUrls);\n  }\n\n  if (typeof data === \"object\") {\n    if (!data) {\n      return data;\n    }\n\n    if (isFileOrBuffer(data)) {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(entry => replaceObjectSchemesWithGatewayUrls(entry, gatewayUrls));\n    }\n\n    return Object.fromEntries(Object.entries(data).map(_ref2 => {\n      let [key, value] = _ref2;\n      return [key, replaceObjectSchemesWithGatewayUrls(value, gatewayUrls)];\n    }));\n  }\n\n  return data;\n}\n/**\n * @internal\n */\n\nfunction extractObjectFiles(data) {\n  let files = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  // If item is a FileOrBuffer add it to our list of files\n  if (isFileOrBuffer(data)) {\n    files.push(data);\n    return files;\n  }\n\n  if (typeof data === \"object\") {\n    if (!data) {\n      return files;\n    }\n\n    if (Array.isArray(data)) {\n      data.forEach(entry => extractObjectFiles(entry, files));\n    } else {\n      Object.keys(data).map(key => extractObjectFiles(data[key], files));\n    }\n  }\n\n  return files;\n}\n/**\n * @internal\n */\n\nfunction replaceObjectFilesWithUris(data, uris) {\n  if (isFileOrBuffer(data)) {\n    if (uris.length) {\n      data = uris.shift();\n      return data;\n    } else {\n      console.warn(\"Not enough URIs to replace all files in object.\");\n    }\n  }\n\n  if (typeof data === \"object\") {\n    if (!data) {\n      return data;\n    }\n\n    if (Array.isArray(data)) {\n      return data.map(entry => replaceObjectFilesWithUris(entry, uris));\n    } else {\n      return Object.fromEntries(Object.entries(data).map(_ref3 => {\n        let [key, value] = _ref3;\n        return [key, replaceObjectFilesWithUris(value, uris)];\n      }));\n    }\n  }\n\n  return data;\n}\n\n/**\n * Default downloader used - handles downloading from all schemes specified in the gateway URLs configuration.\n *\n * @example\n * ```jsx\n * // Can instantiate the downloader with the default gateway URLs\n * const downloader = new StorageDownloader();\n * const storage = new ThirdwebStorage({ downloader });\n * ```\n *\n * @public\n */\n\nclass StorageDownloader {\n  async download(uri, gatewayUrls) {\n    let attempts = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n    if (attempts > 3) {\n      throw new Error(\"[FAILED_TO_DOWNLOAD_ERROR] Failed to download from URI - too many attempts failed.\");\n    } // Replace recognized scheme with the highest priority gateway URL that hasn't already been attempted\n\n\n    const resolvedUri = replaceSchemeWithGatewayUrl(uri, gatewayUrls, attempts); // If every gateway URL we know about for the designated scheme has been tried (via recursion) and failed, throw an error\n\n    if (!resolvedUri) {\n      throw new Error(\"[FAILED_TO_DOWNLOAD_ERROR] Unable to download from URI - all gateway URLs failed to respond.\");\n    }\n\n    const res = await fetch(resolvedUri); // If request to the current gateway fails, recursively try the next one we know about\n\n    if (res.status >= 500 || res.status === 403 || res.status === 408) {\n      console.warn(`Request to ${resolvedUri} failed with status ${res.status} - ${res.statusText}`);\n      return this.download(uri, gatewayUrls, attempts + 1);\n    }\n\n    return res;\n  }\n\n}\n\n/**\n * Default uploader used - handles uploading arbitrary data to IPFS\n *\n * @example\n * ```jsx\n * // Can instantiate the uploader with default configuration\n * const uploader = new StorageUploader();\n * const storage = new ThirdwebStorage({ uploader });\n *\n * // Or optionally, can pass configuration\n * const options = {\n *   // Upload objects with resolvable URLs\n *   uploadWithGatewayUrl: true,\n * }\n * const uploader = new StorageUploader(options);\n * const storage = new ThirdwebStorage({ uploader });\n * ```\n *\n * @public\n */\n\nclass IpfsUploader {\n  constructor(options) {\n    _defineProperty(this, \"uploadWithGatewayUrl\", void 0);\n\n    this.uploadWithGatewayUrl = (options === null || options === void 0 ? void 0 : options.uploadWithGatewayUrl) || false;\n  }\n\n  async uploadBatch(data, options) {\n    if (options !== null && options !== void 0 && options.uploadWithoutDirectory && data.length > 1) {\n      throw new Error(\"[UPLOAD_WITHOUT_DIRECTORY_ERROR] Cannot upload more than one file or object without directory!\");\n    }\n\n    const formData = new FormData();\n    const {\n      form,\n      fileNames\n    } = this.buildFormData(formData, data, options);\n\n    if (isBrowser()) {\n      return this.uploadBatchBrowser(form, fileNames, options);\n    } else {\n      return this.uploadBatchNode(form, fileNames, options);\n    }\n  }\n  /**\n   * Fetches a one-time-use upload token that can used to upload\n   * a file to storage.\n   *\n   * @returns - The one time use token that can be passed to the Pinata API.\n   */\n\n\n  async getUploadToken() {\n    const res = await fetch(`${TW_IPFS_SERVER_URL}/grant`, {\n      method: \"GET\",\n      headers: {\n        \"X-APP-NAME\": // eslint-disable-next-line turbo/no-undeclared-env-vars\n        process.env.NODE_ENV === \"test\" || !!process.env.CI ? \"Storage SDK CI\" : \"Storage SDK\"\n      }\n    });\n\n    if (!res.ok) {\n      throw new Error(`Failed to get upload token`);\n    }\n\n    const body = await res.text();\n    return body;\n  }\n\n  buildFormData(form, files, options) {\n    const fileNameToFileMap = new Map();\n    const fileNames = [];\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      let fileName = \"\";\n      let fileData = file;\n\n      if (isFileInstance(file)) {\n        if (options !== null && options !== void 0 && options.rewriteFileNames) {\n          let extensions = \"\";\n\n          if (file.name) {\n            const extensionStartIndex = file.name.lastIndexOf(\".\");\n\n            if (extensionStartIndex > -1) {\n              extensions = file.name.substring(extensionStartIndex);\n            }\n          }\n\n          fileName = `${i + options.rewriteFileNames.fileStartNumber}${extensions}`;\n        } else {\n          fileName = `${file.name}`;\n        }\n      } else if (isBufferOrStringWithName(file)) {\n        fileData = file.data;\n\n        if (options !== null && options !== void 0 && options.rewriteFileNames) {\n          fileName = `${i + options.rewriteFileNames.fileStartNumber}`;\n        } else {\n          fileName = `${file.name}`;\n        }\n      } else {\n        if (options !== null && options !== void 0 && options.rewriteFileNames) {\n          fileName = `${i + options.rewriteFileNames.fileStartNumber}`;\n        } else {\n          fileName = `${i}`;\n        }\n      } // If we don't want to wrap with directory, adjust the filepath\n\n\n      const filepath = options !== null && options !== void 0 && options.uploadWithoutDirectory ? `files` : `files/${fileName}`;\n\n      if (fileNameToFileMap.has(fileName)) {\n        // if the file in the map is the same as the file we are already looking at then just skip and continue\n        if (isFileBufferOrStringEqual(fileNameToFileMap.get(fileName), file)) {\n          // we add it to the filenames array so that we can return the correct number of urls,\n          fileNames.push(fileName); // but then we skip because we don't need to upload it multiple times\n\n          continue;\n        } // otherwise if file names are the same but they are not the same file then we should throw an error (trying to upload to differnt files but with the same names)\n\n\n        throw new Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${fileName} was passed for more than one different file.`);\n      } // add it to the map so that we can check for duplicates\n\n\n      fileNameToFileMap.set(fileName, file); // add it to the filenames array so that we can return the correct number of urls\n\n      fileNames.push(fileName);\n\n      if (!isBrowser()) {\n        form.append(\"file\", fileData, {\n          filepath\n        });\n      } else {\n        // browser does blob things, filepath is parsed differently on browser vs node.\n        // pls pinata?\n        form.append(\"file\", new Blob([fileData]), filepath);\n      }\n    }\n\n    const metadata = {\n      name: `Storage SDK`,\n      keyvalues: {}\n    };\n    form.append(\"pinataMetadata\", JSON.stringify(metadata));\n\n    if (options !== null && options !== void 0 && options.uploadWithoutDirectory) {\n      form.append(\"pinataOptions\", JSON.stringify({\n        wrapWithDirectory: false\n      }));\n    }\n\n    return {\n      form,\n      // encode the file names on the way out (which is what the upload backend expects)\n      fileNames: fileNames.map(fName => encodeURIComponent(fName))\n    };\n  }\n\n  async uploadBatchBrowser(form, fileNames, options) {\n    const token = await this.getUploadToken();\n    return new Promise((resolve, reject) => {\n      const xhr = new XMLHttpRequest();\n      let timer = setTimeout(() => {\n        xhr.abort();\n        reject(new Error(\"Request to upload timed out! No upload progress received in 30s\"));\n      }, 30000);\n      xhr.upload.addEventListener(\"loadstart\", () => {\n        console.log(`[${Date.now()}] [IPFS] Started`);\n      });\n      xhr.upload.addEventListener(\"progress\", event => {\n        console.log(`[IPFS] Progress Event ${event.loaded}/${event.total}`);\n        clearTimeout(timer);\n\n        if (event.loaded < event.total) {\n          timer = setTimeout(() => {\n            xhr.abort();\n            reject(new Error(\"Request to upload timed out! No upload progress received in 30s\"));\n          }, 30000);\n        } else {\n          console.log(`[${Date.now()}] [IPFS] Uploaded files. Waiting for response.`);\n        }\n\n        if (event.lengthComputable && options !== null && options !== void 0 && options.onProgress) {\n          options === null || options === void 0 ? void 0 : options.onProgress({\n            progress: event.loaded,\n            total: event.total\n          });\n        }\n      });\n      xhr.addEventListener(\"load\", () => {\n        console.log(`[${Date.now()}] [IPFS] Load`);\n        clearTimeout(timer);\n\n        if (xhr.status >= 200 && xhr.status < 300) {\n          let body;\n\n          try {\n            body = JSON.parse(xhr.responseText);\n          } catch (err) {\n            return reject(new Error(\"Failed to parse JSON from upload response\"));\n          }\n\n          const cid = body.IpfsHash;\n\n          if (!cid) {\n            throw new Error(\"Failed to get IPFS hash from upload response\");\n          }\n\n          if (options !== null && options !== void 0 && options.uploadWithoutDirectory) {\n            return resolve([`ipfs://${cid}`]);\n          } else {\n            return resolve(fileNames.map(name => `ipfs://${cid}/${name}`));\n          }\n        }\n\n        return reject(new Error(`Upload failed with status ${xhr.status} - ${xhr.responseText}`));\n      });\n      xhr.addEventListener(\"error\", () => {\n        console.log(\"[IPFS] Load\");\n        clearTimeout(timer);\n\n        if (xhr.readyState !== 0 && xhr.readyState !== 4 || xhr.status === 0) {\n          return reject(new Error(\"This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.\"));\n        }\n\n        return reject(new Error(\"Unknown upload error occured\"));\n      });\n      xhr.open(\"POST\", PINATA_IPFS_URL);\n      xhr.setRequestHeader(\"Authorization\", `Bearer ${token}`);\n      xhr.send(form);\n    });\n  }\n\n  async uploadBatchNode(form, fileNames, options) {\n    const token = await this.getUploadToken();\n\n    if (options !== null && options !== void 0 && options.onProgress) {\n      console.warn(\"The onProgress option is only supported in the browser\");\n    }\n\n    const res = await fetch(PINATA_IPFS_URL, {\n      method: \"POST\",\n      headers: {\n        Authorization: `Bearer ${token}`,\n        ...form.getHeaders()\n      },\n      body: form.getBuffer()\n    });\n    const body = await res.json();\n\n    if (!res.ok) {\n      console.warn(body);\n      throw new Error(\"Failed to upload files to IPFS\");\n    }\n\n    const cid = body.IpfsHash;\n\n    if (!cid) {\n      throw new Error(\"Failed to upload files to IPFS\");\n    }\n\n    if (options !== null && options !== void 0 && options.uploadWithoutDirectory) {\n      return [`ipfs://${cid}`];\n    } else {\n      return fileNames.map(name => `ipfs://${cid}/${name}`);\n    }\n  }\n\n}\n\n/**\n * Upload and download files from decentralized storage systems.\n *\n * @example\n * ```jsx\n * // Create a default storage class without any configuration\n * const storage = new ThirdwebStorage();\n *\n * // Upload any file or JSON object\n * const uri = await storage.upload(data);\n * const result = await storage.download(uri);\n *\n * // Or configure a custom uploader, downloader, and gateway URLs\n * const gatewayUrls = {\n *   // We define a mapping of schemes to gateway URLs\n *   \"ipfs://\": [\n *     \"https://gateway.ipfscdn.io/ipfs/\",\n *     \"https://cloudflare-ipfs.com/ipfs/\",\n *     \"https://ipfs.io/ipfs/\",\n *   ],\n * };\n * const downloader = new StorageDownloader();\n * const uploader = new IpfsUploader();\n * const storage = new ThirdwebStorage({ uploader, downloader, gatewayUrls });\n * ```\n *\n * @public\n */\n\nclass ThirdwebStorage {\n  constructor(options) {\n    _defineProperty(this, \"uploader\", void 0);\n\n    _defineProperty(this, \"downloader\", void 0);\n\n    _defineProperty(this, \"gatewayUrls\", void 0);\n\n    this.uploader = (options === null || options === void 0 ? void 0 : options.uploader) || new IpfsUploader();\n    this.downloader = (options === null || options === void 0 ? void 0 : options.downloader) || new StorageDownloader();\n    this.gatewayUrls = prepareGatewayUrls(options === null || options === void 0 ? void 0 : options.gatewayUrls);\n  }\n  /**\n   * Resolve any scheme on a URL to get a retrievable URL for the data\n   *\n   * @param url - The URL to resolve the scheme of\n   * @returns The URL with its scheme resolved\n   *\n   * @example\n   * ```jsx\n   * const uri = \"ipfs://example\";\n   * const url = storage.resolveScheme(uri);\n   * console.log(url);\n   * ```\n   */\n\n\n  resolveScheme(url) {\n    return replaceSchemeWithGatewayUrl(url, this.gatewayUrls);\n  }\n  /**\n   * Downloads arbitrary data from any URL scheme.\n   *\n   * @param url - The URL of the data to download\n   * @returns The response object fetched from the resolved URL\n   *\n   * @example\n   * ```jsx\n   * const uri = \"ipfs://example\";\n   * const data = await storage.download(uri);\n   * ```\n   */\n\n\n  async download(url) {\n    return this.downloader.download(url, this.gatewayUrls);\n  }\n  /**\n   * Downloads JSON data from any URL scheme.\n   * Resolves any URLs with schemes to retrievable gateway URLs.\n   *\n   * @param url - The URL of the JSON data to download\n   * @returns The JSON data fetched from the resolved URL\n   *\n   * @example\n   * ```jsx\n   * const uri = \"ipfs://example\";\n   * const json = await storage.downloadJSON(uri);\n   * ```\n   */\n\n\n  async downloadJSON(url) {\n    const res = await this.download(url); // If we get a JSON object, recursively replace any schemes with gatewayUrls\n\n    const json = await res.json();\n    return replaceObjectSchemesWithGatewayUrls(json, this.gatewayUrls);\n  }\n  /**\n   * Upload arbitrary file or JSON data using the configured decentralized storage system.\n   * Automatically uploads any file data within JSON objects and replaces them with hashes.\n   *\n   * @param data - Arbitrary file or JSON data to upload\n   * @param options - Options to pass through to the storage uploader class\n   * @returns - The URI of the uploaded data\n   *\n   * @example\n   * ```jsx\n   * // Upload file data\n   * const file = readFileSync(\"../file.jpg\");\n   * const fileUri = await storage.upload(file);\n   *\n   * // Or upload a JSON object\n   * const json = { name: \"JSON\", image: file };\n   * const jsonUri = await storage.upload(json);\n   * ```\n   */\n\n\n  async upload(data, options) {\n    const [uri] = await this.uploadBatch([data], options);\n    return uri;\n  }\n  /**\n   * Batch upload arbitrary file or JSON data using the configured decentralized storage system.\n   * Automatically uploads any file data within JSON objects and replaces them with hashes.\n   *\n   * @param data - Array of arbitrary file or JSON data to upload\n   * @param options - Options to pass through to the storage uploader class\n   * @returns - The URIs of the uploaded data\n   *\n   * @example\n   * ```jsx\n   * // Upload an array of file data\n   * const files = [\n   *  readFileSync(\"../file1.jpg\"),\n   *  readFileSync(\"../file2.jpg\"),\n   * ];\n   * const fileUris = await storage.uploadBatch(files);\n   *\n   * // Upload an array of JSON objects\n   * const objects = [\n   *  { name: \"JSON 1\", image: files[0] },\n   *  { name: \"JSON 2\", image: files[1] },\n   * ];\n   * const jsonUris = await storage.uploadBatch(objects);\n   * ```\n   */\n\n\n  async uploadBatch(data, options) {\n    data = data.filter(item => item !== undefined);\n\n    if (!data.length) {\n      return [];\n    }\n\n    const isFileArray = data.map(item => isFileOrBuffer(item) || typeof item === \"string\").every(item => !!item);\n    let uris = []; // If data is an array of files, pass it through to upload directly\n\n    if (isFileArray) {\n      uris = await this.uploader.uploadBatch(data, options);\n    } else {\n      // Otherwise it is an array of JSON objects, so we have to prepare it first\n      const metadata = (await this.uploadAndReplaceFilesWithHashes(data, options)).map(item => {\n        if (typeof item === \"string\") {\n          return item;\n        }\n\n        return JSON.stringify(item);\n      });\n      uris = await this.uploader.uploadBatch(metadata, options);\n    }\n\n    if (options !== null && options !== void 0 && options.uploadWithGatewayUrl || this.uploader.uploadWithGatewayUrl) {\n      return uris.map(uri => this.resolveScheme(uri));\n    } else {\n      return uris;\n    }\n  }\n\n  async uploadAndReplaceFilesWithHashes(data, options) {\n    let cleaned = data; // Replace any gateway URLs with their hashes\n\n    cleaned = replaceObjectGatewayUrlsWithSchemes(cleaned, this.gatewayUrls); // Recurse through data and extract files to upload\n\n    const files = extractObjectFiles(cleaned);\n\n    if (files.length) {\n      // Upload all files that came from the object\n      const uris = await this.uploader.uploadBatch(files, options); // Recurse through data and replace files with hashes\n\n      cleaned = replaceObjectFilesWithUris(cleaned, uris);\n    }\n\n    if (options !== null && options !== void 0 && options.uploadWithGatewayUrl || this.uploader.uploadWithGatewayUrl) {\n      // If flag is set, replace all schemes with their preferred gateway URL\n      // Ex: used for Solana, where services don't resolve schemes for you, so URLs must be useable by default\n      cleaned = replaceObjectSchemesWithGatewayUrls(cleaned, this.gatewayUrls);\n    }\n\n    return cleaned;\n  }\n\n}\n\n/**\n * @internal\n */\nclass MockDownloader {\n  constructor(storage) {\n    _defineProperty(this, \"gatewayUrls\", DEFAULT_GATEWAY_URLS);\n\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n  }\n\n  async download(url) {\n    const [cid, name] = url.replace(\"mock://\", \"\").split(\"/\");\n    const data = this.storage[cid][name];\n    return {\n      async json() {\n        return Promise.resolve(JSON.parse(data));\n      },\n\n      async text() {\n        return Promise.resolve(data);\n      }\n\n    };\n  }\n\n}\n\n/**\n * @internal\n */\n\nclass MockUploader {\n  constructor(storage) {\n    _defineProperty(this, \"storage\", void 0);\n\n    this.storage = storage;\n  }\n\n  async uploadBatch(data, options) {\n    var _options$rewriteFileN;\n\n    const cid = v4();\n    const uris = [];\n    this.storage[cid] = {};\n    let index = (options === null || options === void 0 ? void 0 : (_options$rewriteFileN = options.rewriteFileNames) === null || _options$rewriteFileN === void 0 ? void 0 : _options$rewriteFileN.fileStartNumber) || 0;\n\n    for (const file of data) {\n      let contents;\n\n      if (isFileInstance(file)) {\n        contents = await file.text();\n      } else if (isBufferInstance(file)) {\n        contents = file.toString();\n      } else if (typeof file === \"string\") {\n        contents = file;\n      } else {\n        contents = isBufferInstance(file.data) ? file.data.toString() : file.data;\n        const name = file.name ? file.name : `file_${index}`;\n        this.storage[cid][name] = contents;\n        uris.push(`mock://${cid}/${name}`);\n        continue;\n      }\n\n      this.storage[cid][index.toString()] = contents;\n      uris.push(`mock://${cid}/${index}`);\n      index += 1;\n    }\n\n    return uris;\n  }\n\n}\n\nexport { DEFAULT_GATEWAY_URLS, IpfsUploader, MockDownloader, MockUploader, PINATA_IPFS_URL, StorageDownloader, TW_IPFS_SERVER_URL, ThirdwebStorage, extractObjectFiles, isBrowser, isBufferInstance, isBufferOrStringWithName, isFileBufferOrStringEqual, isFileInstance, isFileOrBuffer, prepareGatewayUrls, replaceGatewayUrlWithScheme, replaceObjectFilesWithUris, replaceObjectGatewayUrlsWithSchemes, replaceObjectSchemesWithGatewayUrls, replaceSchemeWithGatewayUrl };\n", "// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}", "export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;", "import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;", "import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nexport function unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase();\n}\n\nfunction stringify(arr, offset = 0) {\n  const uuid = unsafeStringify(arr, offset); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;", "import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  let v;\n  const arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;", "import { unsafeStringify } from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  const bytes = [];\n\n  for (let i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport const DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport const URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function v35(name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    var _namespace;\n\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (((_namespace = namespace) === null || _namespace === void 0 ? void 0 : _namespace.length) !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    let bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return unsafeStringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}", "/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  const output = [];\n  const length32 = input.length * 32;\n  const hexTab = '0123456789abcdef';\n\n  for (let i = 0; i < length32; i += 8) {\n    const x = input[i >> 5] >>> i % 32 & 0xff;\n    const hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  let a = 1732584193;\n  let b = -271733879;\n  let c = -1732584194;\n  let d = 271733878;\n\n  for (let i = 0; i < x.length; i += 16) {\n    const olda = a;\n    const oldb = b;\n    const oldc = c;\n    const oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  const length8 = input.length * 8;\n  const output = new Uint32Array(getOutputLength(length8));\n\n  for (let i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  const lsw = (x & 0xffff) + (y & 0xffff);\n  const msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;", "import v35 from './v35.js';\nimport md5 from './md5.js';\nconst v3 = v35('v3', 0x30, md5);\nexport default v3;", "const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nexport default {\n  randomUUID\n};", "// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  const K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  const H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    const msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (let i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  const l = bytes.length / 4 + 2;\n  const N = Math.ceil(l / 16);\n  const M = new Array(N);\n\n  for (let i = 0; i < N; ++i) {\n    const arr = new Uint32Array(16);\n\n    for (let j = 0; j < 16; ++j) {\n      arr[j] = bytes[i * 64 + j * 4] << 24 | bytes[i * 64 + j * 4 + 1] << 16 | bytes[i * 64 + j * 4 + 2] << 8 | bytes[i * 64 + j * 4 + 3];\n    }\n\n    M[i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (let i = 0; i < N; ++i) {\n    const W = new Uint32Array(80);\n\n    for (let t = 0; t < 16; ++t) {\n      W[t] = M[i][t];\n    }\n\n    for (let t = 16; t < 80; ++t) {\n      W[t] = ROTL(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);\n    }\n\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n    let e = H[4];\n\n    for (let t = 0; t < 80; ++t) {\n      const s = Math.floor(t / 20);\n      const T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[t] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;", "import v35 from './v35.js';\nimport sha1 from './sha1.js';\nconst v5 = v35('v5', 0x50, sha1);\nexport default v5;", "import { z } from 'zod';\nimport { Q as QuantitySchema, A as AmountSchema, B as BytesLikeSchema, N as NFTInputOrUriSchema, a as BasisPointsSchema, F as FileOrBufferOrStringSchema, C as CommonNFTOutput, b as CommonNFTInput, g as getRpcUrl, P as PercentSchema, D as DEFAULT_QUERY_ALL_COUNT, M as MAX_BPS } from './QueryParams-ac0149c6.esm.js';\nimport { _ as _defineProperty } from './defineProperty-e24c82ea.esm.js';\nimport { BigNumber, utils, ethers, constants, providers, Contract, Signer } from 'ethers';\nimport ERC165Abi from '@thirdweb-dev/contracts-js/dist/abis/IERC165.json';\nimport Erc721Abi from '@thirdweb-dev/contracts-js/dist/abis/IERC721.json';\nimport Erc1155Abi from '@thirdweb-dev/contracts-js/dist/abis/IERC1155.json';\nimport invariant from 'tiny-invariant';\nimport IThirdwebContractABI from '@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json';\nimport EventEmitter from 'eventemitter3';\nimport fetch$1 from 'cross-fetch';\nimport ForwarderABI from '@thirdweb-dev/contracts-js/dist/abis/Forwarder.json';\nimport DropERC20_V2Abi from '@thirdweb-dev/contracts-js/dist/abis/DropERC20_V2.json';\nimport IBurnableERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json';\nimport IDrop from '@thirdweb-dev/contracts-js/dist/abis/IDrop.json';\nimport IDropSinglePhase from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json';\nimport IDropSinglePhaseV1 from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json';\nimport ERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/IERC20.json';\nimport IMintableERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json';\nimport MulticallAbi from '@thirdweb-dev/contracts-js/dist/abis/IMulticall.json';\nimport ISignatureMintERC20Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json';\nimport DropERC721_V3Abi from '@thirdweb-dev/contracts-js/dist/abis/DropERC721_V3.json';\nimport IBurnableERC721Abi from '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json';\nimport IClaimableERC721 from '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json';\nimport DelayedRevealAbi from '@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json';\nimport Erc721EnumerableAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json';\nimport Erc721SupplyAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json';\nimport ILazyMintAbi from '@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json';\nimport IMintableERC721Abi from '@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json';\nimport SignatureMintERC721Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json';\nimport SignatureMintERC721_V1Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json';\nimport TieredDropAbi from '@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier.json';\nimport DropERC1155_V2Abi from '@thirdweb-dev/contracts-js/dist/abis/DropERC1155_V2.json';\nimport IBurnableERC1155Abi from '@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json';\nimport IClaimableERC1155 from '@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json';\nimport IDropMultiPhase1155 from '@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json';\nimport IDropSinglePhase1155 from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json';\nimport IDropSinglePhase1155_V1 from '@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json';\nimport Erc1155EnumerableAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json';\nimport IMintableERC1155Abi from '@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json';\nimport ISignatureMintERC1155Abi from '@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json';\nimport bs58 from 'bs58';\nimport ERC20MetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json';\nimport { MerkleTree } from 'merkletreejs';\nimport deepEqual from 'fast-deep-equal';\nimport { v4 } from 'uuid';\nimport ERC721MetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json';\nimport ERC1155MetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json';\nimport DeprecatedAbi from '@thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json';\nimport TWFactoryAbi from '@thirdweb-dev/contracts-js/dist/abis/TWFactory.json';\nimport TWRegistryABI from '@thirdweb-dev/contracts-js/dist/abis/TWRegistry.json';\nimport ContractPublisherAbi from '@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json';\nimport { ThirdwebStorage } from '@thirdweb-dev/storage';\nimport IERC2771ContextAbi from '@thirdweb-dev/contracts-js/dist/abis/ERC2771Context.json';\nimport IAppURI from '@thirdweb-dev/contracts-js/dist/abis/IAppURI.json';\nimport IContractMetadataAbi from '@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json';\nimport IPermissionsAbi from '@thirdweb-dev/contracts-js/dist/abis/IPermissions.json';\nimport IPermissionsEnumerableAbi from '@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json';\nimport IThirdwebPlatformFeeAbi from '@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json';\nimport IThirdwebPrimarySaleAbi from '@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json';\nimport IThirdwebRoyaltyAbi from '@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json';\nimport IOwnableAbi from '@thirdweb-dev/contracts-js/dist/abis/Ownable.json';\n\nconst BigNumberSchema = z.union([z.string(), z.number(), z.bigint(), z.custom(data => {\n  return BigNumber.isBigNumber(data);\n})]).transform(arg => BigNumber.from(arg));\nconst BigNumberishSchema = BigNumberSchema.transform(arg => arg.toString());\nconst BigNumberTransformSchema = z.union([z.bigint(), z.custom(data => {\n  return BigNumber.isBigNumber(data);\n})]).transform(arg => {\n  return BigNumber.from(arg).toString();\n});\nconst AddressSchema = z.string().refine(arg => utils.isAddress(arg), out => {\n  return {\n    message: `${out} is not a valid address`\n  };\n});\nconst RawDateSchema = z.date().transform(i => {\n  return BigNumber.from(Math.floor(i.getTime() / 1000));\n});\n\n/**\n * Default to now\n */\nconst StartDateSchema = RawDateSchema.default(new Date(0));\n\n/**\n * Default to 10 years from now\n */\nconst EndDateSchema = RawDateSchema.default(new Date(Date.now() + 1000 * 60 * 60 * 24 * 365 * 10));\nconst CallOverrideSchema = z.object({\n  gasLimit: BigNumberishSchema.optional(),\n  gasPrice: BigNumberishSchema.optional(),\n  maxFeePerGas: BigNumberishSchema.optional(),\n  maxPriorityFeePerGas: BigNumberishSchema.optional(),\n  nonce: BigNumberishSchema.optional(),\n  value: BigNumberishSchema.optional(),\n  blockTag: z.union([z.string(), z.number()]).optional(),\n  from: AddressSchema.optional(),\n  type: z.number().optional()\n}).strict();\n\n/**\n * @public\n */\nlet ChainId;\n\n/**\n * @public\n */\n(function (ChainId) {\n  ChainId[ChainId[\"Mainnet\"] = 1] = \"Mainnet\";\n  ChainId[ChainId[\"Goerli\"] = 5] = \"Goerli\";\n  ChainId[ChainId[\"Polygon\"] = 137] = \"Polygon\";\n  ChainId[ChainId[\"Mumbai\"] = 80001] = \"Mumbai\";\n  ChainId[ChainId[\"Localhost\"] = 1337] = \"Localhost\";\n  ChainId[ChainId[\"Hardhat\"] = 31337] = \"Hardhat\";\n  ChainId[ChainId[\"Fantom\"] = 250] = \"Fantom\";\n  ChainId[ChainId[\"FantomTestnet\"] = 4002] = \"FantomTestnet\";\n  ChainId[ChainId[\"Avalanche\"] = 43114] = \"Avalanche\";\n  ChainId[ChainId[\"AvalancheFujiTestnet\"] = 43113] = \"AvalancheFujiTestnet\";\n  ChainId[ChainId[\"Optimism\"] = 10] = \"Optimism\";\n  ChainId[ChainId[\"OptimismGoerli\"] = 420] = \"OptimismGoerli\";\n  ChainId[ChainId[\"Arbitrum\"] = 42161] = \"Arbitrum\";\n  ChainId[ChainId[\"ArbitrumGoerli\"] = 421613] = \"ArbitrumGoerli\";\n  ChainId[ChainId[\"BinanceSmartChainMainnet\"] = 56] = \"BinanceSmartChainMainnet\";\n  ChainId[ChainId[\"BinanceSmartChainTestnet\"] = 97] = \"BinanceSmartChainTestnet\";\n})(ChainId || (ChainId = {}));\n/**\n * @public\n */\nconst SUPPORTED_CHAIN_IDS = [ChainId.Mainnet, ChainId.Goerli, ChainId.Polygon, ChainId.Mumbai, ChainId.Fantom, ChainId.FantomTestnet, ChainId.Avalanche, ChainId.AvalancheFujiTestnet, ChainId.Optimism, ChainId.OptimismGoerli, ChainId.Arbitrum, ChainId.ArbitrumGoerli, ChainId.BinanceSmartChainMainnet, ChainId.BinanceSmartChainTestnet];\n\n/**\n * @public\n */\nconst NATIVE_TOKEN_ADDRESS = \"0xeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\";\n\n/**\n * @public\n */\nconst NATIVE_TOKENS = {\n  [ChainId.Mainnet]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Goerli]: {\n    name: \"G\u00F6rli Ether\",\n    symbol: \"GOR\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Polygon]: {\n    name: \"Matic\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270\",\n      name: \"Wrapped Matic\",\n      symbol: \"WMATIC\"\n    }\n  },\n  [ChainId.Mumbai]: {\n    name: \"Matic\",\n    symbol: \"MATIC\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889\",\n      name: \"Wrapped Matic\",\n      symbol: \"WMATIC\"\n    }\n  },\n  [ChainId.Avalanche]: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7\",\n      name: \"Wrapped AVAX\",\n      symbol: \"WAVAX\"\n    }\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    name: \"Avalanche\",\n    symbol: \"AVAX\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xd00ae08403B9bbb9124bB305C09058E32C39A48c\",\n      name: \"Wrapped AVAX\",\n      symbol: \"WAVAX\"\n    }\n  },\n  [ChainId.Fantom]: {\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x21be370D5312f44cB42ce377BC9b8a0cEF1A4C83\",\n      name: \"Wrapped Fantom\",\n      symbol: \"WFTM\"\n    }\n  },\n  [ChainId.FantomTestnet]: {\n    name: \"Fantom\",\n    symbol: \"FTM\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xf1277d1Ed8AD466beddF92ef448A132661956621\",\n      name: \"Wrapped Fantom\",\n      symbol: \"WFTM\"\n    }\n  },\n  [ChainId.Arbitrum]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x82af49447d8a07e3bd95bd0d56f35241523fbab1\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.ArbitrumGoerli]: {\n    name: \"Arbitrum Goerli Ether\",\n    symbol: \"AGOR\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Optimism]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x4200000000000000000000000000000000000006\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.OptimismGoerli]: {\n    name: \"Goerli Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x4200000000000000000000000000000000000006\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.Hardhat]: {\n    name: \"Ether\",\n    symbol: \"ETH\",\n    decimals: 18,\n    wrapped: {\n      address: \"0x5FbDB2315678afecb367f032d93F642f64180aa3\",\n      name: \"Wrapped Ether\",\n      symbol: \"WETH\"\n    }\n  },\n  [ChainId.BinanceSmartChainMainnet]: {\n    name: \"Binance Chain Native Token\",\n    symbol: \"BNB\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c\",\n      name: \"Wrapped Binance Chain Token\",\n      symbol: \"WBNB\"\n    }\n  },\n  [ChainId.BinanceSmartChainTestnet]: {\n    name: \"Binance Chain Native Token\",\n    symbol: \"TBNB\",\n    decimals: 18,\n    wrapped: {\n      address: \"0xae13d989daC2f0dEbFf460aC112a837C89BAa7cd\",\n      name: \"Wrapped Binance Chain Testnet Token\",\n      symbol: \"WBNB\"\n    }\n  }\n};\n\n/**\n * Returns the native token for a given chain\n * @param chainId - the chain id\n * @public\n */\nfunction getNativeTokenByChainId(chainId) {\n  return NATIVE_TOKENS[chainId];\n}\n\n/**\n * @internal\n */\nconst CurrencySchema = z.object({\n  name: z.string(),\n  symbol: z.string(),\n  decimals: z.number()\n});\n\n/**\n * @internal\n */\nconst CurrencyValueSchema = CurrencySchema.extend({\n  value: BigNumberSchema,\n  displayValue: z.string()\n});\n\n/**\n * @internal\n */\nconst MerkleSchema = z.object({\n  merkle: z.record(z.string()).default({})\n});\nconst SnapshotEntryInput = z.object({\n  address: AddressSchema,\n  maxClaimable: QuantitySchema.default(0),\n  // defaults to 0\n  price: QuantitySchema.optional(),\n  // defaults to unlimited, but can be undefined in old snapshots\n  currencyAddress: AddressSchema.default(ethers.constants.AddressZero).optional() // defaults to AddressZero, but can be undefined for old snapshots\n});\n\n/**\n * @internal\n */\nconst SnapshotInputSchema = z.union([z.array(z.string()).transform(strings => strings.map(address => SnapshotEntryInput.parse({\n  address\n}))), z.array(SnapshotEntryInput)]);\nconst SnapshotEntryWithProofSchema = SnapshotEntryInput.extend({\n  proof: z.array(z.string())\n});\n/**\n * @internal\n */\nconst SnapshotSchema = z.object({\n  /**\n   * The merkle root\n   */\n  merkleRoot: z.string(),\n  claims: z.array(SnapshotEntryWithProofSchema)\n});\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst SnapshotInfoSchema = z.object({\n  merkleRoot: z.string(),\n  snapshotUri: z.string()\n});\n\n/**\n * @internal\n */\nconst ClaimConditionMetadataSchema = z.object({\n  name: z.string().optional()\n}).catchall(z.unknown());\n\n/**\n * @internal\n */\nconst ClaimConditionInputSchema = z.object({\n  startTime: StartDateSchema,\n  currencyAddress: z.string().default(NATIVE_TOKEN_ADDRESS),\n  price: AmountSchema.default(0),\n  maxClaimableSupply: QuantitySchema,\n  maxClaimablePerWallet: QuantitySchema,\n  waitInSeconds: BigNumberishSchema.default(0),\n  merkleRootHash: BytesLikeSchema.default(utils.hexZeroPad([0], 32)),\n  snapshot: z.optional(SnapshotInputSchema).nullable(),\n  metadata: ClaimConditionMetadataSchema.optional()\n});\n\n/**\n * @internal\n */\nconst ClaimConditionInputArray = z.array(ClaimConditionInputSchema);\n\n/**\n * @internal\n */\nconst PartialClaimConditionInputSchema = ClaimConditionInputSchema.partial();\n\n/**\n * @internal\n */\nconst ClaimConditionOutputSchema = ClaimConditionInputSchema.extend({\n  availableSupply: QuantitySchema,\n  currentMintSupply: QuantitySchema,\n  currencyMetadata: CurrencyValueSchema.default({\n    value: BigNumber.from(\"0\"),\n    displayValue: \"0\",\n    symbol: \"\",\n    decimals: 18,\n    name: \"\"\n  }),\n  price: BigNumberSchema,\n  waitInSeconds: BigNumberSchema,\n  startTime: BigNumberSchema.transform(n => new Date(n.toNumber() * 1000)),\n  snapshot: SnapshotInputSchema.optional().nullable()\n});\n\nfunction resolveOrGenerateId(requestUId) {\n  if (requestUId === undefined) {\n    const buffer = Buffer.alloc(16);\n    v4({}, buffer);\n    return utils.hexlify(utils.toUtf8Bytes(buffer.toString(\"hex\")));\n  } else {\n    return utils.hexlify(requestUId);\n  }\n}\n\n/**\n * @internal\n */\nconst BaseSignaturePayloadInput = z.object({\n  to: z.string().refine(address => address.toLowerCase() !== constants.AddressZero, {\n    message: \"Cannot create payload to mint to zero address\"\n  }),\n  price: AmountSchema.default(0),\n  currencyAddress: z.string().default(NATIVE_TOKEN_ADDRESS),\n  mintStartTime: StartDateSchema,\n  mintEndTime: EndDateSchema,\n  uid: z.string().optional().transform(arg => resolveOrGenerateId(arg)),\n  primarySaleRecipient: z.string().default(constants.AddressZero)\n});\n\n/**\n * @internal\n */\nconst Signature20PayloadInput = BaseSignaturePayloadInput.extend({\n  quantity: AmountSchema\n});\n\n/**\n * @internal\n */\nconst Signature20PayloadOutput = Signature20PayloadInput.extend({\n  mintStartTime: BigNumberSchema,\n  mintEndTime: BigNumberSchema\n});\n\n/**\n * @internal\n */\nconst Signature721PayloadInput = BaseSignaturePayloadInput.extend({\n  metadata: NFTInputOrUriSchema,\n  royaltyRecipient: z.string().default(constants.AddressZero),\n  royaltyBps: BasisPointsSchema.default(0)\n});\n\n/**\n * @internal\n */\nconst Signature721PayloadOutput = Signature721PayloadInput.extend({\n  uri: z.string(),\n  royaltyBps: BigNumberSchema,\n  mintStartTime: BigNumberSchema,\n  mintEndTime: BigNumberSchema\n});\n\n/**\n * @internal\n */\nconst Signature1155PayloadInput = Signature721PayloadInput.extend({\n  metadata: NFTInputOrUriSchema.default(\"\"),\n  quantity: BigNumberishSchema\n});\n\n/**\n * @internal\n */\nconst Signature1155PayloadInputWithTokenId = Signature1155PayloadInput.extend({\n  tokenId: BigNumberishSchema\n});\n\n/**\n * @internal\n */\nconst Signature1155PayloadOutput = Signature721PayloadOutput.extend({\n  tokenId: BigNumberSchema,\n  quantity: BigNumberSchema\n});\n\n/**\n * @internal\n */\nconst Signature721WithQuantityInput = Signature721PayloadInput.extend({\n  metadata: NFTInputOrUriSchema.default(\"\"),\n  quantity: BigNumberSchema.default(1)\n});\n\n/**\n * @internal\n */\nconst Signature721WithQuantityOutput = Signature721PayloadOutput.extend({\n  quantity: BigNumberSchema.default(1)\n});\n\n/**\n * @public\n */\n\nconst MintRequest20 = [{\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"primarySaleRecipient\",\n  type: \"address\"\n}, {\n  name: \"quantity\",\n  type: \"uint256\"\n}, {\n  name: \"price\",\n  type: \"uint256\"\n}, {\n  name: \"currency\",\n  type: \"address\"\n}, {\n  name: \"validityStartTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"validityEndTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"uid\",\n  type: \"bytes32\"\n}];\nconst MintRequest721 = [{\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"royaltyRecipient\",\n  type: \"address\"\n}, {\n  name: \"royaltyBps\",\n  type: \"uint256\"\n}, {\n  name: \"primarySaleRecipient\",\n  type: \"address\"\n}, {\n  name: \"uri\",\n  type: \"string\"\n}, {\n  name: \"price\",\n  type: \"uint256\"\n}, {\n  name: \"currency\",\n  type: \"address\"\n}, {\n  name: \"validityStartTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"validityEndTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"uid\",\n  type: \"bytes32\"\n}];\nconst MintRequest1155 = [{\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"royaltyRecipient\",\n  type: \"address\"\n}, {\n  name: \"royaltyBps\",\n  type: \"uint256\"\n}, {\n  name: \"primarySaleRecipient\",\n  type: \"address\"\n}, {\n  name: \"tokenId\",\n  type: \"uint256\"\n}, {\n  name: \"uri\",\n  type: \"string\"\n}, {\n  name: \"quantity\",\n  type: \"uint256\"\n}, {\n  name: \"pricePerToken\",\n  type: \"uint256\"\n}, {\n  name: \"currency\",\n  type: \"address\"\n}, {\n  name: \"validityStartTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"validityEndTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"uid\",\n  type: \"bytes32\"\n}];\nconst MintRequest721withQuantity = [{\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"royaltyRecipient\",\n  type: \"address\"\n}, {\n  name: \"royaltyBps\",\n  type: \"uint256\"\n}, {\n  name: \"primarySaleRecipient\",\n  type: \"address\"\n}, {\n  name: \"uri\",\n  type: \"string\"\n}, {\n  name: \"quantity\",\n  type: \"uint256\"\n}, {\n  name: \"pricePerToken\",\n  type: \"uint256\"\n}, {\n  name: \"currency\",\n  type: \"address\"\n}, {\n  name: \"validityStartTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"validityEndTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"uid\",\n  type: \"bytes32\"\n}];\nconst GenericRequest = [{\n  name: \"validityStartTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"validityEndTimestamp\",\n  type: \"uint128\"\n}, {\n  name: \"uid\",\n  type: \"bytes32\"\n}, {\n  name: \"data\",\n  type: \"bytes\"\n}];\n\n/**\n * @internal\n */\nconst CommonContractSchema = z.object({\n  name: z.string(),\n  description: z.string().optional(),\n  image: FileOrBufferOrStringSchema.optional(),\n  external_link: z.string().url().optional()\n});\n/**\n * @internal\n */\nconst CommonContractOutputSchema = CommonContractSchema.extend({\n  image: z.string().optional()\n}).catchall(z.unknown());\n\n/**\n * @internal\n */\nconst CommonRoyaltySchema = z.object({\n  /**\n   * The amount of royalty collected on all royalties represented as basis points.\n   * The default is 0 (no royalties).\n   *\n   * 1 basis point = 0.01%\n   *\n   * For example: if this value is 100, then the royalty is 1% of the total sales.\n   *\n   *  @internalremarks used by OpenSea \"seller_fee_basis_points\"\n   */\n  seller_fee_basis_points: BasisPointsSchema.default(0),\n  /**\n   * The address of the royalty recipient. All royalties will be sent\n   * to this address.\n   * @internalremarks used by OpenSea \"fee_recipient\"\n   */\n  fee_recipient: AddressSchema.default(constants.AddressZero)\n});\n\n/**\n * @internal\n */\nconst CommonPrimarySaleSchema = z.object({\n  /**\n   * primary sale recipient address\n   */\n  primary_sale_recipient: AddressSchema\n});\n\n/**\n * @internal\n */\nconst CommonPlatformFeeSchema = z.object({\n  /**\n   * platform fee basis points\n   */\n  platform_fee_basis_points: BasisPointsSchema.default(0),\n  /**\n   * platform fee recipient address\n   */\n  platform_fee_recipient: AddressSchema.default(constants.AddressZero)\n});\n\n/**\n * @internal\n */\nconst CommonTrustedForwarderSchema = z.object({\n  trusted_forwarders: z.array(AddressSchema).default([])\n});\n\n/**\n * @internal\n */\nconst CommonSymbolSchema = z.object({\n  symbol: z.string().optional().default(\"\")\n});\n\nconst PropertiesInput = z.object({}).catchall(z.union([BigNumberTransformSchema, z.unknown()]));\n\n/**\n * @internal\n */\nconst OptionalPropertiesInput = z.union([z.array(PropertiesInput), PropertiesInput]).optional();\n\n/**\n * @internal\n */\nconst TokenMintInputSchema = z.object({\n  toAddress: AddressSchema,\n  amount: AmountSchema\n});\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst EditionMetadataOutputSchema = z.object({\n  supply: BigNumberSchema,\n  metadata: CommonNFTOutput\n});\n\n/**\n * @internal\n */\nconst EditionMetadataWithOwnerOutputSchema = EditionMetadataOutputSchema.extend({\n  owner: z.string(),\n  quantityOwned: BigNumberSchema\n});\n\n/**\n * @internal\n */\nconst EditionMetadataInputSchema = z.object({\n  supply: BigNumberishSchema,\n  metadata: CommonNFTInput\n});\n\n/**\n * @internal\n */\nconst EditionMetadataInputOrUriSchema = z.object({\n  supply: BigNumberishSchema,\n  metadata: NFTInputOrUriSchema\n});\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst OZ_DEFENDER_FORWARDER_ADDRESS = \"0xc82BbE41f2cF04e3a8efA18F7032BDD7f6d98a81\";\nconst TWRegistry_address = \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\";\nconst TWFactory_address = \"0x5DBC7B840baa9daBcBe9D2492E45D7244B54A2A0\";\nconst ContractPublisher_address = \"0x664244560eBa21Bf82d7150C791bE1AbcD5B4cd7\"; // Polygon only\n\n/**\n * @internal\n */\nconst CONTRACT_ADDRESSES = {\n  [ChainId.Mainnet]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x76ce2CB1Ae48Fa067f4fb8c5f803111AE0B24BEA\",\n    biconomyForwarder: \"0x84a0856b038eaAd1cC7E297cF34A7e72685A8693\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: constants.AddressZero\n  },\n  [ChainId.Goerli]: {\n    openzeppelinForwarder: \"0x5001A14CA6163143316a7C614e30e6041033Ac20\",\n    openzeppelinForwarderEOA: \"0xe73c50cB9c5B378627ff625BB6e6725A4A5D65d2\",\n    biconomyForwarder: \"0xE041608922d06a4F26C0d4c27d8bCD01daf1f792\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0xB1Bd9d7942A250BA2Dce27DD601F2ED4211A60C4\"\n  },\n  [ChainId.Polygon]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x4f247c69184ad61036EC2Bb3213b69F10FbEDe1F\",\n    biconomyForwarder: \"0x86C80a8aa58e0A4fa09A69624c31Ab2a6CAD56b8\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x308473Be900F4185A56587dE54bDFF5E8f7a6AE7\"\n  },\n  [ChainId.Mumbai]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250\",\n    biconomyForwarder: \"0x9399BB24DBB5C4b782C70c2969F58716Ebbd6a3b\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x3F17972CB27506eb4a6a3D59659e0B57a43fd16C\"\n  },\n  [ChainId.Avalanche]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250\",\n    biconomyForwarder: \"0x64CD353384109423a966dCd3Aa30D884C9b2E057\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: constants.AddressZero\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xe73c50cB9c5B378627ff625BB6e6725A4A5D65d2\",\n    biconomyForwarder: \"0x6271Ca63D30507f2Dcbf99B52787032506D75BBF\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x3E6eE864f850F5e5A98bc950B68E181Cf4010F23\"\n  },\n  [ChainId.Fantom]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0xb1A2883fc4d287d9cB8Dbb96cFF60C76BEf2D250\",\n    biconomyForwarder: \"0x64CD353384109423a966dCd3Aa30D884C9b2E057\",\n    twFactory: \"0x97EA0Fcc552D5A8Fb5e9101316AAd0D62Ea0876B\",\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: constants.AddressZero\n  },\n  [ChainId.FantomTestnet]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x42D3048b595B6e1c28a588d70366CcC2AA4dB47b\",\n    biconomyForwarder: \"0x69FB8Dca8067A5D38703b9e8b39cf2D51473E4b4\",\n    twFactory: TWFactory_address,\n    twRegistry: TWRegistry_address,\n    twBYOCRegistry: \"0x3E6eE864f850F5e5A98bc950B68E181Cf4010F23\"\n  },\n  [ChainId.Arbitrum]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x4f247c69184ad61036EC2Bb3213b69F10FbEDe1F\",\n    biconomyForwarder: \"0xfe0fa3C06d03bDC7fb49c892BbB39113B534fB57\",\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\",\n    twBYOCRegistry: constants.AddressZero\n  },\n  [ChainId.ArbitrumGoerli]: {\n    openzeppelinForwarder: \"0x8cbc8B5d71702032904750A66AEfE8B603eBC538\",\n    openzeppelinForwarderEOA: \"0x119704314Ef304EaAAE4b3c7C9ABd59272A28310\",\n    biconomyForwarder: constants.AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\",\n    twBYOCRegistry: constants.AddressZero\n  },\n  [ChainId.Optimism]: {\n    openzeppelinForwarder: OZ_DEFENDER_FORWARDER_ADDRESS,\n    openzeppelinForwarderEOA: \"0x7e80648EB2071E26937F9D42A513ccf4815fc702\",\n    biconomyForwarder: \"0xefba8a2a82ec1fb1273806174f5e28fbb917cf95\",\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\",\n    twBYOCRegistry: constants.AddressZero\n  },\n  [ChainId.OptimismGoerli]: {\n    openzeppelinForwarder: \"0x8cbc8B5d71702032904750A66AEfE8B603eBC538\",\n    openzeppelinForwarderEOA: \"0x119704314Ef304EaAAE4b3c7C9ABd59272A28310\",\n    biconomyForwarder: constants.AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\",\n    twBYOCRegistry: constants.AddressZero\n  },\n  [ChainId.BinanceSmartChainMainnet]: {\n    openzeppelinForwarder: \"0x8cbc8B5d71702032904750A66AEfE8B603eBC538\",\n    openzeppelinForwarderEOA: \"0xE8dd2Ff0212F86d3197b4AfDC6dAC6ac47eb10aC\",\n    biconomyForwarder: \"0x86C80a8aa58e0A4fa09A69624c31Ab2a6CAD56b8\",\n    twBYOCRegistry: constants.AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\"\n  },\n  [ChainId.BinanceSmartChainTestnet]: {\n    openzeppelinForwarder: \"0x8cbc8B5d71702032904750A66AEfE8B603eBC538\",\n    openzeppelinForwarderEOA: \"0x7e80648EB2071E26937F9D42A513ccf4815fc702\",\n    biconomyForwarder: \"0x61456BF1715C1415730076BB79ae118E806E74d2\",\n    twBYOCRegistry: constants.AddressZero,\n    twFactory: \"0xd24b3de085CFd8c54b94feAD08a7962D343E6DE0\",\n    twRegistry: \"0x7c487845f98938Bb955B1D5AD069d9a30e4131fd\"\n  }\n};\nconst APPROVED_IMPLEMENTATIONS = {\n  [ChainId.Mainnet]: {\n    \"nft-drop\": \"0x60fF9952e0084A6DEac44203838cDC91ABeC8736\",\n    \"edition-drop\": \"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550\",\n    \"token-drop\": \"0xE1eE43D23f247b6A9aF81fcE2766E76709482728\",\n    \"signature-drop\": \"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A\"\n  },\n  [ChainId.Polygon]: {\n    \"nft-drop\": \"0xB96508050Ba0925256184103560EBADA912Fcc69\",\n    \"edition-drop\": \"0x74af262d0671F378F97a1EDC3d0970Dbe8A1C550\",\n    \"token-drop\": \"0x5A8eA4Adad8289746D073947BA06D69A62499aaf\",\n    \"signature-drop\": \"0xBE2fDc35410E268e41Bec62DBb01AEb43245c7d5\"\n  },\n  [ChainId.Fantom]: {\n    \"nft-drop\": \"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2\",\n    \"edition-drop\": \"0x06395FCF9AC6ED827f9dD6e776809cEF1Be0d21B\",\n    \"token-drop\": \"0x0148b28a38efaaC31b6aa0a6D9FEb70FE7C91FFa\",\n    \"signature-drop\": \"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10\"\n  },\n  [ChainId.Avalanche]: {\n    \"nft-drop\": \"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6\",\n    \"edition-drop\": \"0x135fC9D26E5eC51260ece1DF4ED424E2f55c7766\",\n    \"token-drop\": \"0xca0B071899E575BA86495D46c5066971b6f3A901\",\n    \"signature-drop\": \"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3\"\n  },\n  [ChainId.Optimism]: {\n    \"nft-drop\": \"0xFBd7D24d80ee005671E731a7287DEB6073264dD1\",\n    \"edition-drop\": \"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10\",\n    \"token-drop\": \"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE\",\n    \"signature-drop\": \"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD\"\n  },\n  [ChainId.Arbitrum]: {\n    \"nft-drop\": \"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a\",\n    \"edition-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\",\n    \"token-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\",\n    \"signature-drop\": \"0x2dF9851af45dd41C8584ac55D983C604da985Bc7\"\n  },\n  [ChainId.BinanceSmartChainMainnet]: {\n    \"nft-drop\": \"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE\",\n    \"edition-drop\": \"0x2A396b2D90BAcEF19cDa973586B2633d22710fC2\",\n    \"token-drop\": \"0xe135Ef65C2B2213C3fD56d0Bd6500A2cA147aC10\",\n    \"signature-drop\": \"0xFBd7D24d80ee005671E731a7287DEB6073264dD1\"\n  },\n  [ChainId.Goerli]: {\n    \"nft-drop\": \"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C\",\n    \"edition-drop\": \"0x5A8eA4Adad8289746D073947BA06D69A62499aaf\",\n    \"token-drop\": \"0x5680933221B752EB443654a014f88B101F868d50\",\n    \"signature-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\"\n  },\n  [ChainId.Mumbai]: {\n    \"nft-drop\": \"0xC4903c1Ff5367b9ac2c349B63DC2409421AaEE2a\",\n    \"edition-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\",\n    \"token-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\",\n    \"signature-drop\": \"0x2dF9851af45dd41C8584ac55D983C604da985Bc7\"\n  },\n  [ChainId.FantomTestnet]: {\n    \"nft-drop\": \"0x8a4cd3549e548bbEEb38C16E041FFf040a5acabD\",\n    \"edition-drop\": \"0x902Dd246e66d8C3CE652375a723F2a52b43b9AAE\",\n    \"token-drop\": \"0xFBd7D24d80ee005671E731a7287DEB6073264dD1\",\n    \"signature-drop\": \"0x5A8eA4Adad8289746D073947BA06D69A62499aaf\"\n  },\n  [ChainId.AvalancheFujiTestnet]: {\n    \"nft-drop\": \"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C\",\n    \"edition-drop\": \"0xE1eE43D23f247b6A9aF81fcE2766E76709482728\",\n    \"token-drop\": \"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A\",\n    \"signature-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\"\n  },\n  [ChainId.OptimismGoerli]: {\n    \"nft-drop\": \"0xCcddcec1831646Beff2753249f1B9C580327E89F\",\n    \"edition-drop\": \"0x6fD690EB509BdE4C50028C5D9C0dE3750C2Fad6A\",\n    \"token-drop\": \"0xD11c97DD5F5546B5bBd630D7D1d7327481B0b92C\",\n    \"signature-drop\": \"0x1b5947e1a2d5a29D0df20931DeAB0B87818209B9\"\n  },\n  [ChainId.ArbitrumGoerli]: {\n    \"nft-drop\": \"0x9CfE807a5b124b962064Fa8F7FD823Cc701255b6\",\n    \"edition-drop\": \"0x9cF91118C8ee2913F0588e0F10e36B3d63F68bF6\",\n    \"token-drop\": \"0x1d47526C3292B0130ef0afD5F02c1DA052A017B3\",\n    \"signature-drop\": \"0xE1eE43D23f247b6A9aF81fcE2766E76709482728\"\n  },\n  [ChainId.BinanceSmartChainTestnet]: {\n    \"nft-drop\": \"\",\n    \"edition-drop\": \"\",\n    \"token-drop\": \"\",\n    \"signature-drop\": \"\" // TODO\n  }\n};\n\n/**\n * @internal\n * @param chainId\n * @param contractType\n */\nfunction getApprovedImplementation(chainId,\n// TODO use SupportedChainId once we deploy to all chains\ncontractType) {\n  if (chainId in APPROVED_IMPLEMENTATIONS) {\n    const approvedImpls = APPROVED_IMPLEMENTATIONS[chainId];\n    if (contractType in approvedImpls) {\n      return approvedImpls[contractType];\n    }\n  }\n  return null;\n}\n\n/**\n * @internal\n */\nfunction getContractAddressByChainId(chainId, contractName) {\n  // for testing only\n  if (chainId === ChainId.Hardhat) {\n    if (contractName === \"twFactory\") {\n      // eslint-disable-next-line turbo/no-undeclared-env-vars\n      return process.env.factoryAddress;\n    } else if (contractName === \"twRegistry\") {\n      // eslint-disable-next-line turbo/no-undeclared-env-vars\n      return process.env.registryAddress;\n    } else {\n      return constants.AddressZero;\n    }\n  }\n  // real output here\n  return CONTRACT_ADDRESSES[chainId][contractName];\n}\n\n/**\n * @internal\n */\nfunction getContractPublisherAddress() {\n  // eslint-disable-next-line turbo/no-undeclared-env-vars\n  if (process.env.contractPublisherAddress) {\n    // eslint-disable-next-line turbo/no-undeclared-env-vars\n    return process.env.contractPublisherAddress;\n  } else {\n    return ContractPublisher_address;\n  }\n}\n\n/**\n *\n * @param chainId - chain id\n * @returns the array of trusted forwarders for the given chain id\n * @internal\n */\nfunction getDefaultTrustedForwarders(chainId) {\n  const chainEnum = SUPPORTED_CHAIN_IDS.find(c => c === chainId);\n  const biconomyForwarder = chainEnum ? CONTRACT_ADDRESSES[chainEnum].biconomyForwarder : constants.AddressZero;\n  const openzeppelinForwarder = chainEnum ? CONTRACT_ADDRESSES[chainEnum].openzeppelinForwarder : constants.AddressZero;\n  return biconomyForwarder !== constants.AddressZero ? [openzeppelinForwarder, biconomyForwarder] : [openzeppelinForwarder];\n}\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst InterfaceId_IERC721 = utils.arrayify(\"0x80ac58cd\");\n\n/**\n * @internal\n */\nconst InterfaceId_IERC1155 = utils.arrayify(\"0xd9b67a26\");\n\n/**\n * @public\n */\nlet EventType;\n(function (EventType) {\n  EventType[\"Transaction\"] = \"transaction\";\n  EventType[\"Signature\"] = \"signature\";\n})(EventType || (EventType = {}));\n\nconst DEFAULT_BATCH_TIME_LIMIT_MS = 50;\nconst DEFAULT_BATCH_SIZE_LIMIT = 250;\nconst DEFAULT_BATCH_OPTIONS = {\n  timeLimitMs: DEFAULT_BATCH_TIME_LIMIT_MS,\n  sizeLimit: DEFAULT_BATCH_SIZE_LIMIT\n};\n// mostly copied from ethers.js directly but make it a StaticJsonRpcProvider\nclass StaticJsonRpcBatchProvider extends providers.StaticJsonRpcProvider {\n  constructor(url, network) {\n    let batchOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : DEFAULT_BATCH_OPTIONS;\n    super(url, network);\n    _defineProperty(this, \"_timeLimitMs\", void 0);\n    _defineProperty(this, \"_sizeLimit\", void 0);\n    _defineProperty(this, \"_pendingBatchAggregator\", void 0);\n    _defineProperty(this, \"_pendingBatch\", void 0);\n    this._timeLimitMs = batchOptions.timeLimitMs || DEFAULT_BATCH_SIZE_LIMIT;\n    this._sizeLimit = batchOptions.sizeLimit || DEFAULT_BATCH_TIME_LIMIT_MS;\n    this._pendingBatchAggregator = null;\n    this._pendingBatch = null;\n  }\n  sendCurrentBatch(request) {\n    // if we still have a timeout clear that first\n    if (this._pendingBatchAggregator) {\n      clearTimeout(this._pendingBatchAggregator);\n    }\n    // Get the current batch and clear it, so new requests\n    // go into the next batch\n    const batch = this._pendingBatch || [];\n    this._pendingBatch = null;\n    this._pendingBatchAggregator = null;\n\n    // Get the request as an array of requests\n    const request_ = batch.map(inflight => inflight.request);\n    this.emit(\"debug\", {\n      action: \"requestBatch\",\n      request: utils.deepCopy(request),\n      provider: this\n    });\n    return utils.fetchJson(this.connection, JSON.stringify(request_)).then(result => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        request: request_,\n        response: result,\n        provider: this\n      });\n\n      // For each result, feed it to the correct Promise, depending\n      // on whether it was a success or error\n      batch.forEach((inflightRequest_, index) => {\n        const payload = result[index];\n        if (payload.error) {\n          const error = new Error(payload.error.message);\n          error.code = payload.error.code;\n          error.data = payload.error.data;\n          inflightRequest_.reject(error);\n        } else {\n          inflightRequest_.resolve(payload.result);\n        }\n      });\n    }, error => {\n      this.emit(\"debug\", {\n        action: \"response\",\n        error: error,\n        request: request_,\n        provider: this\n      });\n\n      // If there was an error, reject all the requests\n      batch.forEach(inflightRequest_ => {\n        inflightRequest_.reject(error);\n      });\n    });\n  }\n  send(method, params) {\n    const request = {\n      method: method,\n      params: params,\n      id: this._nextId++,\n      jsonrpc: \"2.0\"\n    };\n    if (this._pendingBatch === null) {\n      this._pendingBatch = [];\n    }\n    const inflightRequest = {\n      request,\n      resolve: null,\n      reject: null\n    };\n    const promise = new Promise((resolve, reject) => {\n      inflightRequest.resolve = resolve;\n      inflightRequest.reject = reject;\n    });\n\n    // if we would go *over* the size limit of the batch with this request, send the batch now\n    if (this._pendingBatch.length === this._sizeLimit) {\n      this.sendCurrentBatch(request);\n    }\n    this._pendingBatch.push(inflightRequest);\n    if (!this._pendingBatchAggregator) {\n      // Schedule batch for next event loop + short duration\n      this._pendingBatchAggregator = setTimeout(() => {\n        this.sendCurrentBatch(request);\n      }, this._timeLimitMs);\n    }\n    return promise;\n  }\n}\n\n/**\n * @internal\n */\nconst DEFAULT_IPFS_GATEWAY = \"https://gateway.ipfscdn.io/ipfs/\";\nconst CHAIN_NAME_TO_ID = {\n  \"avalanche-fuji\": ChainId.AvalancheFujiTestnet,\n  \"avalanche-testnet\": ChainId.AvalancheFujiTestnet,\n  \"fantom-testnet\": ChainId.FantomTestnet,\n  ethereum: ChainId.Mainnet,\n  matic: ChainId.Polygon,\n  mumbai: ChainId.Mumbai,\n  goerli: ChainId.Goerli,\n  polygon: ChainId.Polygon,\n  mainnet: ChainId.Mainnet,\n  optimism: ChainId.Optimism,\n  \"optimism-goerli\": ChainId.OptimismGoerli,\n  arbitrum: ChainId.Arbitrum,\n  \"arbitrum-goerli\": ChainId.ArbitrumGoerli,\n  fantom: ChainId.Fantom,\n  avalanche: ChainId.Avalanche,\n  binance: ChainId.BinanceSmartChainMainnet,\n  \"binance-testnet\": ChainId.BinanceSmartChainTestnet\n};\nconst CHAIN_ID_TO_NAME = Object.fromEntries(Object.entries(CHAIN_NAME_TO_ID).map(_ref => {\n  let [name, id] = _ref;\n  return [id, name];\n}));\nfunction buildDefaultMap() {\n  return SUPPORTED_CHAIN_IDS.reduce((previousValue, currentValue) => {\n    previousValue[currentValue] = getProviderForNetwork(CHAIN_ID_TO_NAME[currentValue]);\n    return previousValue;\n  }, {});\n}\nconst DEFAULT_RPC_URLS = buildDefaultMap();\n\n/**\n * @internal\n * @param network - the chain name or rpc url\n * @returns the rpc url for that chain\n */\nfunction getProviderForNetwork(network) {\n  if (typeof network !== \"string\") {\n    return network;\n  }\n  switch (network) {\n    case \"mainnet\":\n    case \"ethereum\":\n      return getRpcUrl(\"ethereum\");\n    case \"goerli\":\n      return getRpcUrl(\"goerli\");\n    case \"polygon\":\n    case \"matic\":\n      return getRpcUrl(\"polygon\");\n    case \"mumbai\":\n      return getRpcUrl(\"mumbai\");\n    case \"optimism\":\n      return getRpcUrl(\"optimism\");\n    case \"optimism-goerli\":\n      return getRpcUrl(\"optimism-goerli\");\n    case \"arbitrum\":\n      return getRpcUrl(\"arbitrum\");\n    case \"arbitrum-goerli\":\n      return getRpcUrl(\"arbitrum-goerli\");\n    case \"fantom\":\n      return getRpcUrl(\"fantom\");\n    case \"fantom-testnet\":\n      return getRpcUrl(\"fantom-testnet\");\n    case \"avalanche\":\n      return getRpcUrl(\"avalanche\");\n    case \"avalanche-testnet\":\n    case \"avalanche-fuji\":\n      return getRpcUrl(\"avalanche-fuji\");\n    case \"binance\":\n      return getRpcUrl(\"binance\");\n    case \"binance-testnet\":\n      return getRpcUrl(\"binance-testnet\");\n    default:\n      if (network.startsWith(\"http\") || network.startsWith(\"ws\")) {\n        return network;\n      } else {\n        throw new Error(`Unrecognized chain name or RPC url: ${network}`);\n      }\n  }\n}\nconst READONLY_PROVIDER_MAP = new Map();\n\n/**\n *\n * @param network - the chain name or rpc url\n * @param chainId - the optional chain id\n * @returns the provider\n */\nfunction getReadOnlyProvider(network, chainId) {\n  try {\n    const match = network.match(/^(ws|http)s?:/i);\n    // try the JSON batch provider if available\n    if (match) {\n      switch (match[1]) {\n        case \"http\":\n          const seralizedOpts = `${network}-${chainId || -1}`;\n          const existingProvider = READONLY_PROVIDER_MAP.get(seralizedOpts);\n          if (existingProvider) {\n            return existingProvider;\n          }\n          const newProvider = chainId ?\n          // if we know the chainId we should use the StaticJsonRpcBatchProvider\n          new StaticJsonRpcBatchProvider(network, chainId) :\n          // otherwise fall back to the built in json rpc batch provider\n          new providers.JsonRpcBatchProvider(network, chainId);\n          READONLY_PROVIDER_MAP.set(seralizedOpts, newProvider);\n          return newProvider;\n        case \"ws\":\n          return new providers.WebSocketProvider(network, chainId);\n        default:\n          return ethers.getDefaultProvider(network);\n      }\n    } else {\n      return ethers.getDefaultProvider(network);\n    }\n  } catch (e) {\n    // fallback to the default provider\n    return ethers.getDefaultProvider(network);\n  }\n}\n\n/**\n * Error that may get thrown if IPFS returns nothing for a given uri.\n * @internal\n */\nclass NotFoundError extends Error {\n  /** @internal */\n  constructor(identifier) {\n    super(identifier ? `Object with id ${identifier} NOT FOUND` : \"NOT_FOUND\");\n  }\n}\n\n/**\n * Error that may get thrown if an invalid address was passed\n * @internal\n */\nclass InvalidAddressError extends Error {\n  /** @internal */\n  constructor(address) {\n    super(address ? `'${address}' is an invalid address` : \"Invalid address passed\");\n  }\n}\n\n/**\n * @internal\n */\nclass MissingRoleError extends Error {\n  /** @internal */\n  /** @internal */\n  constructor(address, role) {\n    super(`MISSING ROLE: ${address} does not have the '${role}' role`);\n  }\n}\n\n/**\n * @internal\n */\nclass AssetNotFoundError extends Error {\n  /** @internal */\n  /** @internal */\n  constructor() {\n    let message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"The asset you're trying to use could not be found.\";\n    super(`message: ${message}`);\n  }\n}\n\n/**\n * @internal\n */\nclass UploadError extends Error {\n  /** @internal */\n  constructor(message) {\n    super(`UPLOAD_FAILED: ${message}`);\n  }\n}\n\n/**\n * @internal\n */\nclass FileNameMissingError extends Error {\n  /** @internal */\n  constructor() {\n    super(\"File name is required when object is not a `File` type object.\");\n  }\n}\n\n/**\n * @internal\n */\nclass DuplicateFileNameError extends Error {\n  /** @internal */\n  constructor(fileName) {\n    super(`DUPLICATE_FILE_NAME_ERROR: File name ${fileName} was passed for more than one file.`);\n  }\n}\n\n/**\n * @internal\n */\nclass NotEnoughTokensError extends Error {\n  /** @internal */\n  constructor(contractAddress, quantity, available) {\n    super(`BALANCE ERROR: you do not have enough balance on contract ${contractAddress} to use ${quantity} tokens. You have ${available} tokens available.`);\n  }\n}\n\n/**\n * @internal\n */\nclass MissingOwnerRoleError extends Error {\n  /** @internal */\n  constructor() {\n    super(`LIST ERROR: you should be the owner of the token to list it.`);\n  }\n}\n\n/**\n * @internal\n */\nclass QuantityAboveLimitError extends Error {\n  /** @internal */\n  constructor(quantity) {\n    super(`BUY ERROR: You cannot buy more than ${quantity} tokens`);\n  }\n}\n\n/**\n * Thrown when data fails to fetch from storage.\n * @internal\n */\nclass FetchError extends Error {\n  /** @internal */\n  constructor(message, innerError) {\n    super(`FETCH_FAILED: ${message}`);\n    _defineProperty(this, \"innerError\", void 0);\n    this.innerError = innerError;\n  }\n}\n\n/**\n * Thrown when attempting to create a snapshot with duplicate leafs\n * @internal\n */\nclass DuplicateLeafsError extends Error {\n  constructor(message) {\n    super(`DUPLICATE_LEAFS${message ? ` : ${message}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to update/cancel an auction that already started\n * @internal\n */\nclass AuctionAlreadyStartedError extends Error {\n  constructor(id) {\n    super(`Auction already started with existing bid${id ? `, id: ${id}` : \"\"}`);\n  }\n}\n\n/**\n * @internal\n */\nclass FunctionDeprecatedError extends Error {\n  /** @internal */\n  constructor(message) {\n    super(`FUNCTION DEPRECATED. ${message ? `Use ${message} instead` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when trying to retrieve a listing from a marketplace that doesn't exist\n * @internal\n */\nclass ListingNotFoundError extends Error {\n  constructor(marketplaceContractAddress, listingId) {\n    super(`Could not find listing.${marketplaceContractAddress ? ` marketplace address: ${marketplaceContractAddress}` : \"\"}${listingId ? ` listing id: ${listingId}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when trying to retrieve a listing of the wrong type\n * @internal\n */\nclass WrongListingTypeError extends Error {\n  constructor(marketplaceContractAddress, listingId, actualType, expectedType) {\n    super(`Incorrect listing type. Are you sure you're using the right method?.${marketplaceContractAddress ? ` marketplace address: ${marketplaceContractAddress}` : \"\"}${listingId ? ` listing id: ${listingId}` : \"\"}${expectedType ? ` expected type: ${expectedType}` : \"\"}${actualType ? ` actual type: ${actualType}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to transfer an asset that has restricted transferability\n * @internal\n */\nclass RestrictedTransferError extends Error {\n  constructor(assetAddress) {\n    super(`Failed to transfer asset, transfer is restricted.${assetAddress ? ` Address : ${assetAddress}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to execute an admin-role function.\n * @internal\n */\nclass AdminRoleMissingError extends Error {\n  constructor(address, contractAddress) {\n    let message = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Failed to execute transaction\";\n    super(`${message}, admin role is missing${address ? ` on address: ${address}` : \"\"}${contractAddress ? ` on contract: ${contractAddress}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to close an auction that has not ended\n * @internal\n */\nclass AuctionHasNotEndedError extends Error {\n  constructor(id, endTime) {\n    super(`Auction has not ended yet${id ? `, id: ${id}` : \"\"}${endTime ? `, end time: ${endTime.toString()}` : \"\"}`);\n  }\n}\n\n/**\n * Thrown when attempting to call a contract function that is not implemented\n * @internal\n */\nclass ExtensionNotImplementedError extends Error {\n  constructor(feature) {\n    super(`This functionality is not available because the contract does not implement the '${feature.docLinks.contracts}' Extension. Learn how to unlock this functionality at https://portal.thirdweb.com/extensions `);\n  }\n}\n\n/**\n * @internal\n */\n\n/**\n * @public\n */\nclass TransactionError extends Error {\n  constructor(reason, from, to, data, network, rpcUrl, raw, functionInfo) {\n    let builtErrorMsg = \"Contract transaction failed\\n\\n\";\n    builtErrorMsg += `Message: ${reason}`;\n    builtErrorMsg += \"\\n\\n| Transaction info |\\n\";\n    builtErrorMsg += withSpaces(\"from\", from);\n    builtErrorMsg += withSpaces(\"to\", to);\n    builtErrorMsg += withSpaces(`chain`, `${network.name} (${network.chainId})`);\n    if (functionInfo) {\n      builtErrorMsg += \"\\n\\n| Failed contract call info |\\n\";\n      builtErrorMsg += withSpaces(\"function\", functionInfo.signature);\n      builtErrorMsg += withSpaces(`arguments`, JSON.stringify(functionInfo.inputs, null, 2));\n      if (functionInfo.value.gt(0)) {\n        builtErrorMsg += withSpaces(\"value\", `${ethers.utils.formatEther(functionInfo.value)} ${NATIVE_TOKENS[network.chainId]?.symbol}`);\n      }\n    }\n    try {\n      const url = new URL(rpcUrl);\n      builtErrorMsg += withSpaces(`RPC`, url.hostname);\n    } catch (e2) {\n      // ignore if can't parse URL\n    }\n    builtErrorMsg += \"\\n\\n\";\n    builtErrorMsg += \"Need help with this error? Join our community: https://discord.gg/thirdweb\";\n    builtErrorMsg += \"\\n\\n\\n\\n\";\n    builtErrorMsg += \"| Raw error |\";\n    builtErrorMsg += \"\\n\\n\";\n    builtErrorMsg += raw;\n    super(builtErrorMsg);\n    _defineProperty(this, \"reason\", void 0);\n    _defineProperty(this, \"from\", void 0);\n    _defineProperty(this, \"to\", void 0);\n    _defineProperty(this, \"data\", void 0);\n    _defineProperty(this, \"chain\", void 0);\n    _defineProperty(this, \"rpcUrl\", void 0);\n    _defineProperty(this, \"functionInfo\", void 0);\n    this.reason = reason;\n    this.from = from;\n    this.to = to;\n    this.data = data;\n    this.chain = network;\n    this.rpcUrl = rpcUrl;\n    this.functionInfo = functionInfo;\n  }\n}\n\n/**\n * @internal\n * @param data\n * @param contractInterface\n */\nfunction parseFunctionInfo(data, contractInterface) {\n  try {\n    const fnFragment = contractInterface.parseTransaction({\n      data\n    });\n    const results = {};\n    const args = fnFragment.args;\n    fnFragment.functionFragment.inputs.forEach((param, index) => {\n      if (Array.isArray(args[index])) {\n        const obj = {};\n        const components = param.components;\n        if (components) {\n          const arr = args[index];\n          for (let i = 0; i < components.length; i++) {\n            const name = components[i].name;\n            obj[name] = arr[i];\n          }\n          results[param.name] = obj;\n        }\n      } else {\n        results[param.name] = args[index];\n      }\n    });\n    return {\n      signature: fnFragment.signature,\n      inputs: results,\n      value: fnFragment.value\n    };\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * @internal\n * @param error\n * @param network\n * @param signerAddress\n * @param contractAddress\n * @param contractInterface\n */\nasync function convertToTWError(error, network, signerAddress, contractAddress, contractInterface) {\n  let raw;\n  if (typeof error === \"object\") {\n    // metamask errors comes as objects, apply parsing on data object\n    raw = JSON.stringify(error);\n  } else {\n    // not sure what this is, just throw it back\n    raw = error.toString();\n  }\n  const reason = parseMessageParts(/.*?\"message[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw) || parseMessageParts(/.*?\"reason[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  const data = parseMessageParts(/.*?\"data[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  const rpcUrl = parseMessageParts(/.*?\"url[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  let from = parseMessageParts(/.*?\"from[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  let to = parseMessageParts(/.*?\"to[^a-zA-Z0-9]*([^\"\\\\]*).*?/, raw);\n  if (to === \"\") {\n    // fallback to contractAddress\n    to = contractAddress;\n  }\n  if (from === \"\") {\n    // fallback to signerAddress\n    from = signerAddress;\n  }\n  const functionInfo = data.length > 0 ? parseFunctionInfo(data, contractInterface) : undefined;\n  return new TransactionError(reason, from, to, data, network, rpcUrl, raw, functionInfo);\n}\nfunction withSpaces(label, content) {\n  if (content === \"\") {\n    return content;\n  }\n  const spaces = Array(10 - label.length).fill(\" \").join(\"\");\n  return `\\n${label}:${spaces}${content}`;\n}\nfunction parseMessageParts(regex, raw) {\n  const msgMatches = raw.match(regex) || [];\n  let extracted = \"\";\n  if (msgMatches?.length > 0) {\n    extracted += msgMatches[1];\n  }\n  return extracted;\n}\n\n/**\n * @internal\n * @param err\n * @param message\n */\nfunction includesErrorMessage(err, message) {\n  if (!err) {\n    return false;\n  }\n  return err && err.toString().includes(message) || err && err.message && err.message.toString().includes(message) || err && err.error && err.error.toString().includes(message);\n}\n\nconst DropErc721ContractInput = CommonContractSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema);\nconst DropErc721ContractOutput = CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema);\nconst DropErc721ContractDeploy = DropErc721ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema);\nconst DropErc721ContractSchema = {\n  deploy: DropErc721ContractDeploy,\n  output: DropErc721ContractOutput,\n  input: DropErc721ContractInput\n};\n\nconst DropErc1155ContractInput = CommonContractSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema);\nconst DropErc1155ContractOutput = CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(MerkleSchema).merge(CommonSymbolSchema);\nconst DropErc1155ContractDeploy = DropErc1155ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema);\nconst DropErc1155ContractSchema = {\n  deploy: DropErc1155ContractDeploy,\n  output: DropErc1155ContractOutput,\n  input: DropErc1155ContractInput\n};\n\nconst MarketplaceContractInput = CommonContractSchema;\nconst MarketplaceContractOutput = CommonContractOutputSchema;\nconst MarketplaceContractDeploy = MarketplaceContractInput.merge(CommonPlatformFeeSchema).merge(CommonTrustedForwarderSchema);\nconst MarketplaceContractSchema = {\n  deploy: MarketplaceContractDeploy,\n  output: MarketplaceContractOutput,\n  input: MarketplaceContractInput\n};\n\nconst PackContractInput = CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst PackContractOutput = CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst PackContractDeploy = PackContractInput.merge(CommonPlatformFeeSchema).merge(CommonTrustedForwarderSchema);\nconst PackContractSchema = {\n  deploy: PackContractDeploy,\n  output: PackContractOutput,\n  input: PackContractInput\n};\n\nconst SplitRecipientInputSchema = z.object({\n  address: AddressSchema,\n  sharesBps: BasisPointsSchema.gt(0, \"Shares must be greater than 0\")\n});\nconst SplitRecipientOuputSchema = SplitRecipientInputSchema.extend({\n  address: AddressSchema,\n  sharesBps: BasisPointsSchema\n});\nconst SplitsContractInput = CommonContractSchema.extend({\n  recipients: z.array(SplitRecipientInputSchema).default([]).superRefine((val, context) => {\n    const addressMap = {};\n    let totalShares = 0;\n    for (let index = 0; index < val.length; index++) {\n      const entry = val[index];\n      if (addressMap[entry.address]) {\n        context.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Duplicate address.`,\n          path: [index, `address`]\n        });\n      }\n      addressMap[entry.address] = true;\n      totalShares += entry.sharesBps;\n      if (totalShares > 10000) {\n        context.addIssue({\n          code: z.ZodIssueCode.custom,\n          message: `Total shares cannot go over 100%.`,\n          path: [index, `sharesBps`]\n        });\n      }\n    }\n    if (totalShares !== 10000) {\n      context.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: `Total shares need to add up to 100%. Total shares are currently ${totalShares / 100}%`,\n        path: []\n      });\n    }\n  })\n});\nconst SplitsContractOutput = CommonContractOutputSchema.extend({\n  recipients: z.array(SplitRecipientOuputSchema)\n});\nconst SplitsContractDeploy = SplitsContractInput.merge(SplitsContractInput).merge(CommonTrustedForwarderSchema);\nconst SplitsContractSchema = {\n  deploy: SplitsContractDeploy,\n  output: SplitsContractOutput,\n  input: SplitsContractInput\n};\n\nconst TokenErc20ContractInput = CommonContractSchema.merge(CommonSymbolSchema);\nconst TokenErc20ContractOutput = CommonContractOutputSchema.merge(CommonSymbolSchema);\nconst TokenErc20ContractDeploy = TokenErc20ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema);\nconst TokenErc20ContractSchema = {\n  deploy: TokenErc20ContractDeploy,\n  output: TokenErc20ContractOutput,\n  input: TokenErc20ContractInput\n};\n\nconst TokenErc721ContractInput = CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst TokenErc721ContractOutput = CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst TokenErc721ContractDeploy = TokenErc721ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema);\nconst TokenErc721ContractSchema = {\n  deploy: TokenErc721ContractDeploy,\n  output: TokenErc721ContractOutput,\n  input: TokenErc721ContractInput\n};\n\nconst TokenErc1155ContractInput = CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst TokenErc1155ContractOutput = CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst TokenErc1155ContractDeploy = TokenErc1155ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema);\nconst TokenErc1155ContractSchema = {\n  deploy: TokenErc1155ContractDeploy,\n  output: TokenErc1155ContractOutput,\n  input: TokenErc1155ContractInput\n};\n\nconst VoteSettingsInputSchema = z.object({\n  voting_delay_in_blocks: z.number().min(0).default(0),\n  voting_period_in_blocks: z.number().min(1).default(1),\n  voting_token_address: AddressSchema,\n  voting_quorum_fraction: PercentSchema.default(0),\n  proposal_token_threshold: BigNumberishSchema.default(1)\n});\nconst VoteSettingsOuputSchema = VoteSettingsInputSchema.extend({\n  proposal_token_threshold: BigNumberSchema\n});\nconst VoteContractInput = CommonContractSchema.merge(VoteSettingsInputSchema);\nconst VoteContractOutput = CommonContractOutputSchema.merge(VoteSettingsOuputSchema);\nconst VoteContractDeploy = VoteContractInput.merge(CommonTrustedForwarderSchema);\nconst VoteContractSchema = {\n  deploy: VoteContractDeploy,\n  output: VoteContractOutput,\n  input: VoteContractInput\n};\nz.object({\n  proposalId: BigNumberSchema,\n  proposer: z.string(),\n  targets: z.array(z.string()),\n  values: z.array(BigNumberSchema),\n  signatures: z.array(z.string()),\n  calldatas: z.array(z.string()),\n  startBlock: BigNumberSchema,\n  endBlock: BigNumberSchema,\n  description: z.string()\n});\n\n/**\n * @public\n */\nconst SDKOptionsSchema = z.object({\n  readonlySettings: z.object({\n    rpcUrl: z.string().url(),\n    chainId: z.number().optional()\n  }).optional(),\n  gasSettings: z.object({\n    maxPriceInGwei: z.number().min(1, \"gas price cannot be less than 1\").default(300),\n    speed: z.enum([\"standard\", \"fast\", \"fastest\"]).default(\"fastest\")\n  }).default({\n    maxPriceInGwei: 300,\n    speed: \"fastest\"\n  }),\n  gasless: z.union([z.object({\n    openzeppelin: z.object({\n      relayerUrl: z.string().url(),\n      relayerForwarderAddress: z.string().optional(),\n      useEOAForwarder: z.boolean().default(false)\n    }),\n    experimentalChainlessSupport: z.boolean().default(false)\n  }), z.object({\n    biconomy: z.object({\n      apiId: z.string(),\n      apiKey: z.string(),\n      deadlineSeconds: z.number().min(1, \"deadlineSeconds cannot be les than 1\").default(3600)\n    })\n  })]).optional()\n}).default({\n  gasSettings: {\n    maxPriceInGwei: 300,\n    speed: \"fastest\"\n  }\n});\n\n/**\n * @public\n * All these configuration options are optional with sane defaults:\n * @example\n * ```javascript\n * {\n *   readonlySettings: {\n *     rpcUrl, // force read calls to go through your own RPC url\n *     chainId, // reduce RPC calls by sepcifying your chain ID\n *   },\n *   gasSettings: {\n *     maxPriceInGwei, // Maximum gas price for transactions (default 300 gwei)\n *     speed, // the tx speed setting: 'standard'|'fast|'fastest' (default: 'fastest')\n *   },\n *   gasless: {\n *     // By specifying a gasless configuration - all transactions will get forwarded to enable gasless transactions\n *     openzeppelin: {\n *       relayerUrl, // your OZ Defender relayer URL\n *       relayerForwarderAddress, // the OZ defender relayer address (defaults to the standard one)\n *     },\n *     biconomy: {\n *       apiId, // your Biconomy API Id\n *       apiKey, // your Biconomy API Key\n *       deadlineSeconds, // your Biconomy timeout preference\n *     },\n *   },\n * }\n * ```\n */\n\n/**\n * @internal\n */\nconst LoginOptionsSchema = z.object({\n  /**\n   * The optional nonce of the login request used to prevent replay attacks\n   */\n  nonce: z.string().optional(),\n  /**\n   * The optional time after which the login payload will be invalid\n   */\n  expirationTime: z.date().optional(),\n  /**\n   * The optional chain ID that the login request was intended for\n   */\n  chainId: z.number().optional()\n}).optional();\n\n/**\n * @internal\n */\nconst LoginPayloadDataSchema = z.object({\n  /**\n   * The domain that the user is attempting to login to\n   */\n  domain: z.string(),\n  /**\n   * The address of the account that is logging in\n   */\n  address: AddressSchema,\n  /**\n   * The nonce of the login request used to prevent replay attacks, defaults to a random UUID\n   */\n  nonce: z.string().default(v4()),\n  /**\n   * The time after which the login payload will be invalid, defaults to 5 minutes from now\n   */\n  expiration_time: z.date().transform(d => d.toISOString()),\n  /**\n   * The chain ID that the login request was intended for, defaults to none\n   */\n  chain_id: z.number().optional()\n});\n\n/**\n * @internal\n */\nconst LoginPayloadSchema = z.object({\n  /**\n   * The payload data used for login\n   */\n  payload: LoginPayloadDataSchema,\n  /**\n   * The signature of the login request used for verification\n   */\n  signature: z.string()\n});\n\n/**\n * @internal\n */\nconst VerifyOptionsSchema = z.object({\n  /**\n   * The optional chain ID to expect the request to be for\n   */\n  chainId: z.number().optional()\n}).optional();\n\n/**\n * @internal\n */\nconst AuthenticationOptionsSchema = z.object({\n  /**\n   * The date before which the authentication payload is invalid\n   */\n  invalidBefore: z.date().optional(),\n  /**\n   * The date after which the authentication payload is invalid\n   */\n  expirationTime: z.date().optional()\n}).optional();\n\n/**\n * @internal\n */\nconst AuthenticationPayloadDataSchema = z.object({\n  /**\n   * The address of the wallet issuing the payload\n   */\n  iss: z.string(),\n  /**\n   * The address of the wallet requesting to authenticate\n   */\n  sub: z.string(),\n  /**\n   * The domain intended to receive the authentication payload\n   */\n  aud: z.string(),\n  /**\n   * The date before which the authentication payload is invalid\n   */\n  exp: RawDateSchema.transform(b => b.toNumber()),\n  /**\n   * The date after which the authentication payload is invalid\n   */\n  nbf: RawDateSchema.transform(b => b.toNumber()),\n  /**\n   * The date on which the payload was issued\n   */\n  iat: RawDateSchema.transform(b => b.toNumber()),\n  /**\n   * The unique identifier of the payload\n   */\n  jti: z.string().default(v4())\n});\n\n/**\n * @internal\n */\nconst AuthenticationPayloadSchema = z.object({\n  /**\n   * The payload data used for authentication\n   */\n  payload: AuthenticationPayloadDataSchema,\n  /**\n   * The signature of the authentication payload used for authentication\n   */\n  signature: z.string()\n});\n\n/**\n * @public\n */\n\n/**\n * @internal\n */\nconst ForwardRequest = [{\n  name: \"from\",\n  type: \"address\"\n}, {\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"gas\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"data\",\n  type: \"bytes\"\n}];\nconst ChainAwareForwardRequest = [{\n  name: \"from\",\n  type: \"address\"\n}, {\n  name: \"to\",\n  type: \"address\"\n}, {\n  name: \"value\",\n  type: \"uint256\"\n}, {\n  name: \"gas\",\n  type: \"uint256\"\n}, {\n  name: \"nonce\",\n  type: \"uint256\"\n}, {\n  name: \"data\",\n  type: \"bytes\"\n}, {\n  name: \"chainid\",\n  type: \"uint256\"\n}];\n\n/**\n * @internal\n */\nconst BiconomyForwarderAbi = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"from\",\n    type: \"address\"\n  }, {\n    internalType: \"uint256\",\n    name: \"batchId\",\n    type: \"uint256\"\n  }],\n  name: \"getNonce\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst _nonces = {};\nconst _noncesSyncTimestamp = {};\n\n/**\n * @internal\n */\nasync function getAndIncrementNonce(forwarder, forwarderFunction, forwarderArgs) {\n  // address is only used for internal caching :)\n  const address = forwarderArgs.join(\"|\");\n  const timestamp = _noncesSyncTimestamp[address];\n  // if it's within 2 seconds we're optimistically increment the nonce\n  // should we always sync?\n  const shouldSync = Date.now() - timestamp >= 2000;\n  if (!(address in _nonces) || shouldSync) {\n    const nonceResult = await forwarder.functions[forwarderFunction](...forwarderArgs);\n    if (Array.isArray(nonceResult) && nonceResult.length > 0) {\n      _nonces[address] = BigNumber.from(nonceResult[0]);\n    } else {\n      _nonces[address] = BigNumber.from(nonceResult);\n    }\n    _noncesSyncTimestamp[address] = Date.now();\n  }\n  const nonce = _nonces[address];\n  _nonces[address] = BigNumber.from(_nonces[address]).add(1);\n  return nonce;\n}\n\n/**\n * @internal\n */\nfunction getGasStationUrl(chainId) {\n  switch (chainId) {\n    case ChainId.Polygon:\n      return \"https://gasstation-mainnet.matic.network/v2\";\n    case ChainId.Mumbai:\n      return \"https://gasstation-mumbai.matic.today/v2\";\n  }\n}\nconst MIN_POLYGON_GAS_PRICE = ethers.utils.parseUnits(\"31\", \"gwei\");\nconst MIN_MUMBAI_GAS_PRICE = ethers.utils.parseUnits(\"1\", \"gwei\");\n\n/**\n * @internal\n */\nfunction getDefaultGasFee(chainId) {\n  switch (chainId) {\n    case ChainId.Polygon:\n      return MIN_POLYGON_GAS_PRICE;\n    case ChainId.Mumbai:\n      return MIN_MUMBAI_GAS_PRICE;\n  }\n}\n\n/**\n *\n * @returns the gas price\n * @internal\n */\nasync function getPolygonGasPriorityFee(chainId) {\n  const gasStationUrl = getGasStationUrl(chainId);\n  try {\n    const data = await (await fetch$1(gasStationUrl)).json();\n    // take the standard speed here, SDK options will define the extra tip\n    const priorityFee = data[\"standard\"][\"maxPriorityFee\"];\n    if (priorityFee > 0) {\n      const fixedFee = parseFloat(priorityFee).toFixed(9);\n      return ethers.utils.parseUnits(fixedFee, \"gwei\");\n    }\n  } catch (e) {\n    console.error(\"failed to fetch gas\", e);\n  }\n  return getDefaultGasFee(chainId);\n}\n\n// couldn't find this in barbones ethers export, but \"type\" should mean it does not increase bundle size either way\n\n/**\n * @internal\n */\n\n/**\n * eip712 sign typed data with different wallet handling including ledger live\n * @internal\n */\nasync function signTypedDataInternal(signer, domain, types, message) {\n  const provider = signer?.provider;\n  if (!provider) {\n    throw new Error(\"missing provider\");\n  }\n  const payload = ethers.utils._TypedDataEncoder.getPayload(domain, types, message);\n  let signature = \"\";\n\n  // an indirect way for accessing walletconnect's underlying provider\n  if (provider?.provider?.isWalletConnect) {\n    signature = await provider.send(\"eth_signTypedData\", [(await signer.getAddress()).toLowerCase(), JSON.stringify(payload)]);\n  } else {\n    try {\n      signature = await signer._signTypedData(domain, types, message);\n    } catch (err) {\n      if (err?.message?.includes(\"Method eth_signTypedData_v4 not supported\")) {\n        signature = await provider.send(\"eth_signTypedData\", [(await signer.getAddress()).toLowerCase(), JSON.stringify(payload)]);\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  // fix ledger live where signature result in v = 0, 1. ethers magically fix it in split/join.\n  return {\n    payload,\n    signature: ethers.utils.joinSignature(ethers.utils.splitSignature(signature))\n  };\n}\n\nconst NAME_ABI = [{\n  inputs: [],\n  name: \"name\",\n  outputs: [{\n    internalType: \"string\",\n    name: \"\",\n    type: \"string\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst DOMAIN_SEPARATOR_ABI = [{\n  constant: true,\n  inputs: [],\n  name: \"DOMAIN_SEPARATOR\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  payable: false,\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [],\n  name: \"getDomainSeperator\",\n  outputs: [{\n    internalType: \"bytes32\",\n    name: \"\",\n    type: \"bytes32\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nconst NONCES_ABI = [{\n  inputs: [{\n    internalType: \"address\",\n    name: \"owner\",\n    type: \"address\"\n  }],\n  name: \"nonces\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}, {\n  inputs: [{\n    internalType: \"address\",\n    name: \"user\",\n    type: \"address\"\n  }],\n  name: \"getNonce\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"nonce\",\n    type: \"uint256\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\nasync function getSignerNonce(signer, contractAddress) {\n  const contract = new Contract(contractAddress, NONCES_ABI, signer);\n  try {\n    return await contract.nonces(await signer.getAddress());\n  } catch (err) {\n    return await contract.getNonce(await signer.getAddress());\n  }\n}\nasync function getDomainSeperator(signer, contractAddress) {\n  const contract = new Contract(contractAddress, DOMAIN_SEPARATOR_ABI, signer);\n  try {\n    return await contract.DOMAIN_SEPARATOR();\n  } catch (err) {\n    return await contract.getDomainSeperator();\n  }\n}\nasync function getTokenName(signer, contractAddress) {\n  return new Contract(contractAddress, NAME_ABI, signer).name();\n}\n\n/**\n * Polygon chain has different EIP712 domain separator for USDC, DAI compared to other chains and slightly different than EIP-2612.\n */\nasync function getChainDomainSeperator(signer, domain) {\n  const contractDomainSeparator = await getDomainSeperator(signer, domain.verifyingContract);\n  const polygonDomain = {\n    name: domain.name,\n    version: domain.version,\n    verifyingContract: domain.verifyingContract,\n    salt: ethers.utils.hexZeroPad(BigNumber.from(domain.chainId).toHexString(), 32)\n  };\n  if (ethers.utils._TypedDataEncoder.hashDomain(polygonDomain) === contractDomainSeparator) {\n    return polygonDomain;\n  }\n  return domain;\n}\n\n/**\n * @internal\n */\nasync function signEIP2612Permit(signer, currencyAddress, owner, spender, value, deadline, nonce) {\n  const domain = await getChainDomainSeperator(signer, {\n    name: await getTokenName(signer, currencyAddress),\n    version: \"1\",\n    chainId: await signer.getChainId(),\n    verifyingContract: currencyAddress\n  });\n  nonce = nonce || (await getSignerNonce(signer, currencyAddress)).toString();\n  deadline = deadline || ethers.constants.MaxUint256;\n  const message = {\n    owner,\n    spender,\n    value,\n    nonce,\n    deadline\n  };\n  const types = {\n    Permit: [{\n      name: \"owner\",\n      type: \"address\"\n    }, {\n      name: \"spender\",\n      type: \"address\"\n    }, {\n      name: \"value\",\n      type: \"uint256\"\n    }, {\n      name: \"nonce\",\n      type: \"uint256\"\n    }, {\n      name: \"deadline\",\n      type: \"uint256\"\n    }]\n  };\n  const {\n    signature\n  } = await signTypedDataInternal(signer, domain, types, message);\n  return {\n    message,\n    signature\n  };\n}\n\n/**\n * @internal\n */\n// @ts-expext-error window is not defined\nconst isBrowser = () => typeof window !== \"undefined\";\n\n/**\n * @internal\n */\nconst isNode = () => !isBrowser();\n\n/**\n * @internal\n */\nclass RPCConnectionHandler extends EventEmitter {\n  constructor(network, options) {\n    super();\n    _defineProperty(this, \"provider\", void 0);\n    _defineProperty(this, \"signer\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    const [signer, provider] = getSignerAndProvider(network, options);\n    this.signer = signer;\n    this.provider = provider;\n    try {\n      this.options = SDKOptionsSchema.parse(options);\n    } catch (optionParseError) {\n      console.error(\"invalid sdk options object passed, falling back to default options\", optionParseError);\n      this.options = SDKOptionsSchema.parse({});\n    }\n  }\n  /**\n   * The function to call whenever the network changes, such as when the users connects their wallet, disconnects their wallet, the connected chain changes, etc.\n   *\n   * @param network - a network, signer or provider that ethers js can interpret\n   */\n  updateSignerOrProvider(network) {\n    const [signer, provider] = getSignerAndProvider(network, this.options);\n    this.signer = signer;\n    this.provider = provider;\n  }\n  /**\n   *\n   * @returns whether or not a signer is set, `true` if there is no signer so the class is in \"read only\" mode\n   */\n  isReadOnly() {\n    return !Signer.isSigner(this.signer);\n  }\n\n  /**\n   * Explicitly get the active signer.\n   * @returns the active signer, if there is one\n   */\n  getSigner() {\n    return this.signer;\n  }\n\n  /**\n   * Explicitly get the active provider.\n   * @returns the active provider\n   */\n  getProvider() {\n    return this.provider;\n  }\n\n  /**\n   *\n   * @returns the current signer if there is one, otherwise the active provider\n   */\n  getSignerOrProvider() {\n    return this.getSigner() || this.getProvider();\n  }\n}\n\n/**\n * @internal\n */\nfunction getSignerAndProvider(network, options) {\n  let signer;\n  let provider;\n  if (Signer.isSigner(network)) {\n    signer = network;\n    if (network.provider) {\n      provider = network.provider;\n    }\n  }\n  if (options?.readonlySettings) {\n    provider = getReadOnlyProvider(options.readonlySettings.rpcUrl, options.readonlySettings.chainId);\n  }\n  if (!provider) {\n    if (providers.Provider.isProvider(network)) {\n      provider = network;\n    } else if (!Signer.isSigner(network)) {\n      if (typeof network === \"string\") {\n        provider = getReadOnlyProvider(network, options?.readonlySettings?.chainId);\n      } else {\n        // no a signer, not a provider, not a string? try with default provider\n        provider = ethers.getDefaultProvider(network);\n      }\n    }\n  }\n  if (!provider) {\n    // we should really never hit this case!\n    provider = ethers.getDefaultProvider();\n    console.error(\"No provider found, using default provider on default chain!\");\n  }\n  return [signer, provider];\n}\n\n/**\n * @internal\n */\nclass ContractWrapper extends RPCConnectionHandler {\n  /**\n   * @internal\n   */\n\n  constructor(network, contractAddress, contractAbi, options) {\n    super(network, options);\n    _defineProperty(this, \"isValidContract\", false);\n    _defineProperty(this, \"customOverrides\", () => ({}));\n    _defineProperty(this, \"writeContract\", void 0);\n    _defineProperty(this, \"readContract\", void 0);\n    _defineProperty(this, \"abi\", void 0);\n    this.abi = contractAbi;\n    // set up the contract\n    this.writeContract = new Contract(contractAddress, contractAbi, this.getSignerOrProvider());\n    // setup the read only contract\n    this.readContract = this.writeContract.connect(this.getProvider());\n  }\n  updateSignerOrProvider(network) {\n    // update the underlying base class\n    super.updateSignerOrProvider(network);\n    // re-connect the contract with the new signer / provider\n    this.writeContract = this.writeContract.connect(this.getSignerOrProvider());\n    // setup the read only contract\n    this.readContract = this.writeContract.connect(this.getProvider());\n  }\n\n  /**\n   * @internal\n   */\n  async getChainID() {\n    const provider = this.getProvider();\n    const {\n      chainId\n    } = await provider.getNetwork();\n    return chainId;\n  }\n  /**\n   * @internal\n   */\n  async getSignerAddress() {\n    const signer = this.getSigner();\n    if (!signer) {\n      throw new Error(\"This action requires a connected wallet to sign the transaction. Please pass a valid signer to the SDK.\");\n    }\n    return await signer.getAddress();\n  }\n\n  /**\n   * @internal\n   */\n  callStatic() {\n    return this.writeContract.callStatic;\n  }\n\n  /**\n   * @internal\n   */\n  async getCallOverrides() {\n    if (isBrowser()) {\n      // When running in the browser, let the wallet suggest gas estimates\n      // this means that the gas speed preferences set in the SDK options are ignored in a browser context\n      // but it also allows users to select their own gas speed prefs per tx from their wallet directly\n      return {};\n    }\n    const feeData = await this.getProvider().getFeeData();\n    const supports1559 = feeData.maxFeePerGas && feeData.maxPriorityFeePerGas;\n    if (supports1559) {\n      const chainId = await this.getChainID();\n      const block = await this.getProvider().getBlock(\"latest\");\n      const baseBlockFee = block && block.baseFeePerGas ? block.baseFeePerGas : ethers.utils.parseUnits(\"1\", \"gwei\");\n      let defaultPriorityFee;\n      if (chainId === ChainId.Mumbai || chainId === ChainId.Polygon) {\n        // for polygon, get fee data from gas station\n        defaultPriorityFee = await getPolygonGasPriorityFee(chainId);\n      } else {\n        // otherwise get it from ethers\n        defaultPriorityFee = BigNumber.from(feeData.maxPriorityFeePerGas);\n      }\n      // then add additional fee based on user preferences\n      const maxPriorityFeePerGas = this.getPreferredPriorityFee(defaultPriorityFee);\n      // See: https://eips.ethereum.org/EIPS/eip-1559 for formula\n      const baseMaxFeePerGas = baseBlockFee.mul(2);\n      const maxFeePerGas = baseMaxFeePerGas.add(maxPriorityFeePerGas);\n      return {\n        maxFeePerGas,\n        maxPriorityFeePerGas\n      };\n    } else {\n      return {\n        gasPrice: await this.getPreferredGasPrice()\n      };\n    }\n  }\n\n  /**\n   * Calculates the priority fee per gas according to user preferences\n   * @param defaultPriorityFeePerGas - the base priority fee\n   */\n  getPreferredPriorityFee(defaultPriorityFeePerGas) {\n    const speed = this.options.gasSettings.speed;\n    const maxGasPrice = this.options.gasSettings.maxPriceInGwei;\n    let extraTip;\n    switch (speed) {\n      case \"standard\":\n        extraTip = BigNumber.from(0); // default is 2.5 gwei for ETH, 31 gwei for polygon\n        break;\n      case \"fast\":\n        extraTip = defaultPriorityFeePerGas.div(100).mul(5); // + 5% - 2.625 gwei / 32.5 gwei\n        break;\n      case \"fastest\":\n        extraTip = defaultPriorityFeePerGas.div(100).mul(10); // + 10% - 2.75 gwei / 34.1 gwei\n        break;\n    }\n    let txGasPrice = defaultPriorityFeePerGas.add(extraTip);\n    const max = ethers.utils.parseUnits(maxGasPrice.toString(), \"gwei\"); // no more than max gas setting\n    const min = ethers.utils.parseUnits(\"2.5\", \"gwei\"); // no less than 2.5 gwei\n    if (txGasPrice.gt(max)) {\n      txGasPrice = max;\n    }\n    if (txGasPrice.lt(min)) {\n      txGasPrice = min;\n    }\n    return txGasPrice;\n  }\n\n  /**\n   * Calculates the gas price for transactions according to user preferences\n   */\n  async getPreferredGasPrice() {\n    const gasPrice = await this.getProvider().getGasPrice();\n    const speed = this.options.gasSettings.speed;\n    const maxGasPrice = this.options.gasSettings.maxPriceInGwei;\n    let txGasPrice = gasPrice;\n    let extraTip;\n    switch (speed) {\n      case \"standard\":\n        extraTip = BigNumber.from(1); // min 1 wei\n        break;\n      case \"fast\":\n        extraTip = gasPrice.div(100).mul(5); // + 5%\n        break;\n      case \"fastest\":\n        extraTip = gasPrice.div(100).mul(10); // + 10%\n        break;\n    }\n    txGasPrice = txGasPrice.add(extraTip);\n    const max = ethers.utils.parseUnits(maxGasPrice.toString(), \"gwei\");\n    if (txGasPrice.gt(max)) {\n      txGasPrice = max;\n    }\n    return txGasPrice;\n  }\n\n  /**\n   * @internal\n   */\n  emitTransactionEvent(status, transactionHash) {\n    this.emit(EventType.Transaction, {\n      status,\n      transactionHash\n    });\n  }\n\n  /**\n   * @internal\n   */\n  async multiCall(encoded) {\n    return this.sendTransaction(\"multicall\", [encoded]);\n  }\n\n  /**\n   * @internal\n   */\n  async estimateGas(fn, args) {\n    return this.writeContract.estimateGas[fn](...args);\n  }\n\n  /**\n   * @internal\n   */\n  withTransactionOverride(hook) {\n    this.customOverrides = hook;\n  }\n\n  /**\n   * @internal\n   */\n  async call(functionName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    // parse last arg as tx options if present\n    let txOptions;\n    try {\n      if (args.length > 0 && typeof args[args.length - 1] === \"object\") {\n        const last = args[args.length - 1];\n        txOptions = CallOverrideSchema.parse(last);\n        // if call overrides found, remove it from args array\n        args = args.slice(0, args.length - 1);\n      }\n    } catch (e) {\n      // no-op\n    }\n    const functions = extractFunctionsFromAbi(AbiSchema.parse(this.abi)).filter(f => f.name === functionName);\n    if (!functions.length) {\n      throw new Error(`Function \"${functionName}\" not found in contract. Check your dashboard for the list of functions available`);\n    }\n    const fn = functions.find(f => f.name === functionName && f.inputs.length === args.length);\n\n    // TODO extract this and re-use for deploy function to check constructor args\n    if (!fn) {\n      throw new Error(`Function \"${functionName}\" requires ${functions[0].inputs.length} arguments, but ${args.length} were provided.\\nExpected function signature: ${functions[0].signature}`);\n    }\n    const ethersFnName = `${functionName}(${fn.inputs.map(i => i.type).join()})`;\n\n    // check if the function exists on the contract, otherwise use the name passed in\n    const fnName = ethersFnName in this.readContract.functions ? ethersFnName : functionName;\n\n    // TODO validate each argument\n    if (fn.stateMutability === \"view\" || fn.stateMutability === \"pure\") {\n      // read function\n      return this.readContract[fnName](...args);\n    } else {\n      // write function\n      const receipt = await this.sendTransaction(fnName, args, txOptions);\n      return {\n        receipt\n      };\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async sendTransaction(fn, args, callOverrides) {\n    if (!callOverrides) {\n      callOverrides = await this.getCallOverrides();\n    }\n    // if a custom override is set, merge our override with the custom one\n    callOverrides = {\n      ...callOverrides,\n      ...this.customOverrides()\n    };\n    // clear up the override (single use)\n    this.customOverrides = () => ({});\n    if (this.options?.gasless && (\"openzeppelin\" in this.options.gasless || \"biconomy\" in this.options.gasless)) {\n      if (fn === \"multicall\" && Array.isArray(args[0]) && args[0].length > 0) {\n        const from = await this.getSignerAddress();\n        args[0] = args[0].map(tx => ethers.utils.solidityPack([\"bytes\", \"address\"], [tx, from]));\n      }\n      const provider = this.getProvider();\n      const txHash = await this.sendGaslessTransaction(fn, args, callOverrides);\n      this.emitTransactionEvent(\"submitted\", txHash);\n      const receipt = await provider.waitForTransaction(txHash);\n      this.emitTransactionEvent(\"completed\", txHash);\n      return receipt;\n    } else {\n      // one time verification that this is a valid contract (to avoid sending funds to wrong addresses)\n      if (!this.isValidContract) {\n        const code = await this.getProvider().getCode(this.readContract.address);\n        this.isValidContract = code !== \"0x\";\n        if (!this.isValidContract) {\n          throw new Error(\"The address you're trying to send a transaction to is not a smart contract. Make sure you are on the correct network and the contract address is correct\");\n        }\n      }\n      const tx = await this.sendTransactionByFunction(fn, args, callOverrides);\n      this.emitTransactionEvent(\"submitted\", tx.hash);\n      const receipt = tx.wait();\n      this.emitTransactionEvent(\"completed\", tx.hash);\n      return receipt;\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async sendTransactionByFunction(fn, args, callOverrides) {\n    const func = this.writeContract.functions[fn];\n    if (!func) {\n      throw new Error(`invalid function: \"${fn.toString()}\"`);\n    }\n    try {\n      return await func(...args, callOverrides);\n    } catch (e) {\n      const network = await this.getProvider().getNetwork();\n      const signerAddress = await this.getSignerAddress();\n      const contractAddress = await this.readContract.address;\n      throw await convertToTWError(e, network, signerAddress, contractAddress, this.readContract.interface);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async sendGaslessTransaction(fn) {\n    let args = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    let callOverrides = arguments.length > 2 ? arguments[2] : undefined;\n    const signer = this.getSigner();\n    invariant(signer, \"Cannot execute gasless transaction without valid signer\");\n    const chainId = await this.getChainID();\n    const from = await this.getSignerAddress();\n    const to = this.writeContract.address;\n    const value = callOverrides?.value || 0;\n    if (BigNumber.from(value).gt(0)) {\n      throw new Error(\"Cannot send native token value with gasless transaction\");\n    }\n    const data = this.writeContract.interface.encodeFunctionData(fn, args);\n    let gas = BigNumber.from(0);\n    try {\n      const gasEstimate = await this.readContract.estimateGas[fn](...args);\n      gas = gasEstimate.mul(2);\n    } catch (e) {\n      // ignore\n    }\n\n    // in some cases WalletConnect doesn't properly gives an estimate for how much gas it would actually use.\n    // as a fix, we're setting it to a high arbitrary number (500k) as the gas limit that should cover for most function calls.\n    if (gas.lt(100000)) {\n      gas = BigNumber.from(500000);\n    }\n\n    // check for gas override in callOverrides\n    if (callOverrides.gasLimit && BigNumber.from(callOverrides.gasLimit).gt(gas)) {\n      gas = BigNumber.from(callOverrides.gasLimit);\n    }\n    const tx = {\n      from,\n      to,\n      data,\n      chainId,\n      gasLimit: gas,\n      functionName: fn.toString(),\n      functionArgs: args,\n      callOverrides\n    };\n    return await this.defaultGaslessSendFunction(tx);\n  }\n  async signTypedData(signer, domain, types, message) {\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message,\n      signature: \"\"\n    });\n    const {\n      signature: sig\n    } = await signTypedDataInternal(signer, domain, types, message);\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message,\n      signature: sig\n    });\n    return sig;\n  }\n  parseLogs(eventName, logs) {\n    if (!logs || logs.length === 0) {\n      return [];\n    }\n    const topic = this.writeContract.interface.getEventTopic(eventName);\n    const parsedLogs = logs.filter(x => x.topics.indexOf(topic) >= 0);\n    return parsedLogs.map(l => this.writeContract.interface.parseLog(l));\n  }\n  async defaultGaslessSendFunction(transaction) {\n    if (this.options.gasless && \"biconomy\" in this.options.gasless) {\n      return this.biconomySendFunction(transaction);\n    }\n    return this.defenderSendFunction(transaction);\n  }\n  async biconomySendFunction(transaction) {\n    invariant(this.options.gasless && \"biconomy\" in this.options.gasless, \"calling biconomySendFunction without biconomy\");\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    invariant(signer && provider, \"signer and provider must be set\");\n    const forwarder = new ethers.Contract(getContractAddressByChainId(transaction.chainId, \"biconomyForwarder\"), BiconomyForwarderAbi, provider);\n    const batchId = 0;\n    const batchNonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from, batchId]);\n    const request = {\n      from: transaction.from,\n      to: transaction.to,\n      token: ethers.constants.AddressZero,\n      txGas: transaction.gasLimit.toNumber(),\n      tokenGasPrice: \"0\",\n      batchId,\n      batchNonce: batchNonce.toNumber(),\n      deadline: Math.floor(Date.now() / 1000 + (this.options?.gasless && \"biconomy\" in this.options.gasless && this.options.gasless.biconomy?.deadlineSeconds || 3600)),\n      data: transaction.data\n    };\n    const hashToSign = ethers.utils.arrayify(ethers.utils.solidityKeccak256([\"address\", \"address\", \"address\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"uint256\", \"bytes32\"], [request.from, request.to, request.token, request.txGas, request.tokenGasPrice, request.batchId, request.batchNonce, request.deadline, ethers.utils.keccak256(request.data)]));\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message: hashToSign,\n      signature: \"\"\n    });\n    const signature = await signer.signMessage(hashToSign);\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message: hashToSign,\n      signature\n    });\n    const response = await fetch$1(\"https://api.biconomy.io/api/v2/meta-tx/native\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        from: transaction.from,\n        apiId: this.options.gasless.biconomy.apiId,\n        params: [request, signature],\n        to: transaction.to,\n        gasLimit: transaction.gasLimit.toHexString()\n      }),\n      headers: {\n        \"x-api-key\": this.options.gasless.biconomy.apiKey,\n        \"Content-Type\": \"application/json;charset=utf-8\"\n      }\n    });\n    if (response.ok) {\n      const resp = await response.json();\n      if (!resp.txHash) {\n        throw new Error(`relay transaction failed: ${resp.log}`);\n      }\n      return resp.txHash;\n    }\n    throw new Error(`relay transaction failed with status: ${response.status} (${response.statusText})`);\n  }\n  async defenderSendFunction(transaction) {\n    invariant(this.options.gasless && \"openzeppelin\" in this.options.gasless, \"calling openzeppelin gasless transaction without openzeppelin config in the SDK options\");\n    const signer = this.getSigner();\n    const provider = this.getProvider();\n    invariant(signer, \"provider is not set\");\n    invariant(provider, \"provider is not set\");\n    const forwarderAddress = this.options.gasless.openzeppelin.relayerForwarderAddress || (this.options.gasless.openzeppelin.useEOAForwarder ? CONTRACT_ADDRESSES[transaction.chainId].openzeppelinForwarderEOA : CONTRACT_ADDRESSES[transaction.chainId].openzeppelinForwarder);\n    const forwarder = new Contract(forwarderAddress, ForwarderABI, provider);\n    const nonce = await getAndIncrementNonce(forwarder, \"getNonce\", [transaction.from]);\n    let domain;\n    let types;\n    let message;\n    if (this.options.gasless.experimentalChainlessSupport) {\n      domain = {\n        name: \"GSNv2 Forwarder\",\n        version: \"0.0.1\",\n        verifyingContract: forwarderAddress\n      };\n      types = {\n        ForwardRequest: ChainAwareForwardRequest\n      };\n      message = {\n        from: transaction.from,\n        to: transaction.to,\n        value: BigNumber.from(0).toString(),\n        gas: BigNumber.from(transaction.gasLimit).toString(),\n        nonce: BigNumber.from(nonce).toString(),\n        data: transaction.data,\n        chainid: BigNumber.from(transaction.chainId).toString()\n      };\n    } else {\n      domain = {\n        name: \"GSNv2 Forwarder\",\n        version: \"0.0.1\",\n        chainId: transaction.chainId,\n        verifyingContract: forwarderAddress\n      };\n      types = {\n        ForwardRequest\n      };\n      message = {\n        from: transaction.from,\n        to: transaction.to,\n        value: BigNumber.from(0).toString(),\n        gas: BigNumber.from(transaction.gasLimit).toString(),\n        nonce: BigNumber.from(nonce).toString(),\n        data: transaction.data\n      };\n    }\n    let signature;\n    this.emit(EventType.Signature, {\n      status: \"submitted\",\n      message,\n      signature: \"\"\n    });\n\n    // if the executing function is \"approve\" and matches with erc20 approve signature\n    // and if the token supports permit, then we use permit for gasless instead of approve.\n    if (transaction.functionName === \"approve\" && transaction.functionArgs.length === 2) {\n      const spender = transaction.functionArgs[0];\n      const amount = transaction.functionArgs[1];\n      // TODO: support DAI permit by signDAIPermit\n      const {\n        message: permit,\n        signature: sig\n      } = await signEIP2612Permit(signer, this.writeContract.address, transaction.from, spender, amount);\n      const {\n        r,\n        s,\n        v\n      } = ethers.utils.splitSignature(sig);\n      message = {\n        to: this.readContract.address,\n        owner: permit.owner,\n        spender: permit.spender,\n        value: BigNumber.from(permit.value).toString(),\n        nonce: BigNumber.from(permit.nonce).toString(),\n        deadline: BigNumber.from(permit.deadline).toString(),\n        r,\n        s,\n        v\n      };\n      signature = sig;\n    } else {\n      const {\n        signature: sig\n      } = await signTypedDataInternal(signer, domain, types, message);\n      signature = sig;\n    }\n    let messageType = \"forward\";\n\n    // if has owner property then it's permit :)\n    if (message?.owner) {\n      messageType = \"permit\";\n    }\n    const body = JSON.stringify({\n      request: message,\n      signature,\n      forwarderAddress,\n      type: messageType\n    });\n    this.emit(EventType.Signature, {\n      status: \"completed\",\n      message,\n      signature\n    });\n    const response = await fetch$1(this.options.gasless.openzeppelin.relayerUrl, {\n      method: \"POST\",\n      body\n    });\n    if (response.ok) {\n      const resp = await response.json();\n      if (!resp.result) {\n        throw new Error(`Relay transaction failed: ${resp.message}`);\n      }\n      const result = JSON.parse(resp.result);\n      return result.txHash;\n    }\n    throw new Error(`relay transaction failed with status: ${response.status} (${response.statusText})`);\n  }\n}\n\nfunction isNativeToken(tokenAddress) {\n  return tokenAddress.toLowerCase() === NATIVE_TOKEN_ADDRESS || tokenAddress.toLowerCase() === constants.AddressZero;\n}\nfunction cleanCurrencyAddress(currencyAddress) {\n  if (isNativeToken(currencyAddress)) {\n    return NATIVE_TOKEN_ADDRESS;\n  }\n  return currencyAddress;\n}\n\n/**\n *\n * @param provider\n * @param inputPrice\n * @param currencyAddress\n * @returns\n * @internal\n */\nasync function normalizePriceValue(provider, inputPrice, currencyAddress) {\n  const metadata = await fetchCurrencyMetadata(provider, currencyAddress);\n  return utils.parseUnits(AmountSchema.parse(inputPrice), metadata.decimals);\n}\n\n/**\n *\n * @param provider\n * @param asset\n * @returns\n * @internal\n */\nasync function fetchCurrencyMetadata(provider, asset) {\n  if (isNativeToken(asset)) {\n    const network = await provider.getNetwork();\n    const nativeToken = getNativeTokenByChainId(network.chainId);\n    return {\n      name: nativeToken.name,\n      symbol: nativeToken.symbol,\n      decimals: nativeToken.decimals\n    };\n  } else {\n    const erc20 = new Contract(asset, ERC20MetadataAbi, provider);\n    const [name, symbol, decimals] = await Promise.all([erc20.name(), erc20.symbol(), erc20.decimals()]);\n    return {\n      name,\n      symbol,\n      decimals\n    };\n  }\n}\n\n/**\n *\n * @param providerOrSigner\n * @param asset\n * @param price\n * @returns\n * @internal\n */\nasync function fetchCurrencyValue(providerOrSigner, asset, price) {\n  const metadata = await fetchCurrencyMetadata(providerOrSigner, asset);\n  return {\n    ...metadata,\n    value: BigNumber.from(price),\n    displayValue: utils.formatUnits(price, metadata.decimals)\n  };\n}\nasync function setErc20Allowance(contractToApprove, value, currencyAddress, overrides) {\n  if (isNativeToken(currencyAddress)) {\n    overrides[\"value\"] = value;\n  } else {\n    const signer = contractToApprove.getSigner();\n    const provider = contractToApprove.getProvider();\n    const erc20 = new ContractWrapper(signer || provider, currencyAddress, ERC20Abi, contractToApprove.options);\n    const owner = await contractToApprove.getSignerAddress();\n    const spender = contractToApprove.readContract.address;\n    const allowance = await erc20.readContract.allowance(owner, spender);\n    if (allowance.lt(value)) {\n      // approve overrides the previous allowance, set it to the minimum required for this tx\n      await erc20.sendTransaction(\"approve\", [spender, value]);\n    }\n    return overrides;\n  }\n}\nasync function approveErc20Allowance(contractToApprove, currencyAddress, price, quantity, tokenDecimals) {\n  const signer = contractToApprove.getSigner();\n  const provider = contractToApprove.getProvider();\n  const erc20 = new ContractWrapper(signer || provider, currencyAddress, ERC20Abi, contractToApprove.options);\n  const owner = await contractToApprove.getSignerAddress();\n  const spender = contractToApprove.readContract.address;\n  const allowance = await erc20.readContract.allowance(owner, spender);\n  const totalPrice = BigNumber.from(price).mul(BigNumber.from(quantity)).div(ethers.utils.parseUnits(\"1\", tokenDecimals));\n  if (allowance.lt(totalPrice)) {\n    await erc20.sendTransaction(\"approve\", [spender, allowance.add(totalPrice)]);\n  }\n}\nasync function hasERC20Allowance(contractToApprove, currencyAddress, value) {\n  const provider = contractToApprove.getProvider();\n  const erc20 = new ContractWrapper(provider, currencyAddress, ERC20Abi, {});\n  const owner = await contractToApprove.getSignerAddress();\n  const spender = contractToApprove.readContract.address;\n  const allowance = await erc20.readContract.allowance(owner, spender);\n  return allowance.gte(value);\n}\n\n/**\n * Returns proofs and the overrides required for the transaction.\n * @internal\n * @returns - `overrides` and `proofs` as an object.\n */\nasync function prepareClaim(addressToClaim, quantity, activeClaimCondition, merkleMetadataFetcher, tokenDecimals, contractWrapper, storage, checkERC20Allowance, snapshotFormatVersion) {\n  let maxClaimable = convertQuantityToBigNumber(activeClaimCondition.maxClaimablePerWallet, tokenDecimals);\n  let proofs = [utils.hexZeroPad([0], 32)];\n  let priceInProof = activeClaimCondition.price; // the price to send to the contract in claim proofs\n  let currencyAddressInProof = activeClaimCondition.currencyAddress;\n  try {\n    if (!activeClaimCondition.merkleRootHash.toString().startsWith(constants.AddressZero)) {\n      const snapshotEntry = await fetchSnapshotEntryForAddress(addressToClaim, activeClaimCondition.merkleRootHash.toString(), await merkleMetadataFetcher(), contractWrapper.getProvider(), storage, snapshotFormatVersion);\n      if (snapshotEntry) {\n        proofs = snapshotEntry.proof;\n        // override only if not default values (unlimited for quantity, zero addr for currency)\n        maxClaimable = snapshotEntry.maxClaimable === \"unlimited\" ? ethers.constants.MaxUint256 : ethers.utils.parseUnits(snapshotEntry.maxClaimable, tokenDecimals);\n        priceInProof = snapshotEntry.price === undefined || snapshotEntry.price === \"unlimited\" ? ethers.constants.MaxUint256 : await normalizePriceValue(contractWrapper.getProvider(), snapshotEntry.price, snapshotEntry.currencyAddress || ethers.constants.AddressZero);\n        currencyAddressInProof = snapshotEntry.currencyAddress || ethers.constants.AddressZero;\n      } else {\n        // if no snapshot entry, and it's a v1 format (exclusive allowlist) then address can't claim\n        if (snapshotFormatVersion === SnapshotFormatVersion.V1) {\n          throw new Error(\"No claim found for this address\");\n        }\n        // but if its snapshot v2 (override list behavior) then address can still claim with default settings\n      }\n    }\n  } catch (e) {\n    // have to handle the valid error case that we *do* want to throw on\n    if (e?.message === \"No claim found for this address\") {\n      throw e;\n    }\n    // other errors we wanna ignore and try to continue\n    console.warn(\"failed to check claim condition merkle root hash, continuing anyways\", e);\n  }\n  const overrides = (await contractWrapper.getCallOverrides()) || {};\n  // the actual price to check allowance against\n  // if proof price is unlimited, then we use the price from the claim condition\n  // this mimics the contract behavior\n  const pricePerToken = priceInProof.toString() !== ethers.constants.MaxUint256.toString() ? priceInProof : activeClaimCondition.price;\n  // same for currency address\n  const currencyAddress = currencyAddressInProof !== ethers.constants.AddressZero ? currencyAddressInProof : activeClaimCondition.currencyAddress;\n  if (pricePerToken.gt(0)) {\n    if (isNativeToken(currencyAddress)) {\n      overrides[\"value\"] = BigNumber.from(pricePerToken).mul(quantity).div(ethers.utils.parseUnits(\"1\", tokenDecimals));\n    } else if (checkERC20Allowance) {\n      await approveErc20Allowance(contractWrapper, currencyAddress, pricePerToken, quantity, tokenDecimals);\n    }\n  }\n  return {\n    overrides,\n    proofs,\n    maxClaimable,\n    price: pricePerToken,\n    currencyAddress: currencyAddress,\n    priceInProof,\n    currencyAddressInProof\n  };\n}\n\n/**\n * @internal\n * @param merkleRoot\n * @param merkleMetadata\n * @param storage\n */\nasync function fetchSnapshot(merkleRoot, merkleMetadata, storage) {\n  if (!merkleMetadata) {\n    return null;\n  }\n  const snapshotUri = merkleMetadata[merkleRoot];\n  if (snapshotUri) {\n    const raw = await storage.downloadJSON(snapshotUri);\n    if (raw.isShardedMerkleTree && raw.merkleRoot === merkleRoot) {\n      const smt = await ShardedMerkleTree.fromUri(snapshotUri, storage);\n      return smt?.getAllEntries() || null;\n    } else {\n      const snapshotData = SnapshotSchema.parse(raw);\n      if (merkleRoot === snapshotData.merkleRoot) {\n        return snapshotData.claims.map(claim => ({\n          address: claim.address,\n          maxClaimable: claim.maxClaimable,\n          price: claim.price,\n          currencyAddress: claim.currencyAddress\n        }));\n      }\n    }\n  }\n  return null;\n}\nasync function fetchSnapshotEntryForAddress(address, merkleRoot, merkleMetadata, provider, storage, snapshotFormatVersion) {\n  if (!merkleMetadata) {\n    return null;\n  }\n  const snapshotUri = merkleMetadata[merkleRoot];\n  if (snapshotUri) {\n    const raw = await storage.downloadJSON(snapshotUri);\n    if (raw.isShardedMerkleTree && raw.merkleRoot === merkleRoot) {\n      const merkleTree = await ShardedMerkleTree.fromShardedMerkleTreeInfo(raw, storage);\n      return await merkleTree.getProof(address, provider, snapshotFormatVersion);\n    }\n    // legacy non-sharded, just fetch it all and filter out\n    const snapshotData = SnapshotSchema.parse(raw);\n    if (merkleRoot === snapshotData.merkleRoot) {\n      return snapshotData.claims.find(c => c.address.toLowerCase() === address.toLowerCase()) || null;\n    }\n  }\n  return null;\n}\n\n/**\n * @internal\n * @param index\n * @param claimConditionInput\n * @param existingConditions\n */\nasync function updateExistingClaimConditions(index, claimConditionInput, existingConditions) {\n  if (index >= existingConditions.length) {\n    throw Error(`Index out of bounds - got index: ${index} with ${existingConditions.length} conditions`);\n  }\n  // merge input with existing claim condition\n  const priceDecimals = existingConditions[index].currencyMetadata.decimals;\n  const priceInWei = existingConditions[index].price;\n  const priceInTokens = ethers.utils.formatUnits(priceInWei, priceDecimals);\n\n  // merge existing (output format) with incoming (input format)\n  const newConditionParsed = ClaimConditionInputSchema.parse({\n    ...existingConditions[index],\n    price: priceInTokens,\n    ...claimConditionInput\n  });\n\n  // convert to output claim condition\n  const mergedConditionOutput = ClaimConditionOutputSchema.parse({\n    ...newConditionParsed,\n    price: priceInWei\n  });\n  return existingConditions.map((existingOutput, i) => {\n    let newConditionAtIndex;\n    if (i === index) {\n      newConditionAtIndex = mergedConditionOutput;\n    } else {\n      newConditionAtIndex = existingOutput;\n    }\n    const formattedPrice = ethers.utils.formatUnits(newConditionAtIndex.price, priceDecimals);\n    return {\n      ...newConditionAtIndex,\n      price: formattedPrice // manually transform back to input price type\n    };\n  });\n}\n\n/**\n * @internal\n * Decorates claim conditions with merkle roots from snapshots if present\n * @param claimConditionInputs\n * @param tokenDecimals\n * @param provider\n * @param storage\n * @param snapshotFormatVersion\n */\nasync function processSnapshotData(claimConditionInputs, tokenDecimals, provider, storage, snapshotFormatVersion) {\n  const snapshotInfos = [];\n  const inputsWithSnapshots = await Promise.all(claimConditionInputs.map(async conditionInput => {\n    // check snapshots and upload if provided\n    if (conditionInput.snapshot && conditionInput.snapshot.length > 0) {\n      const snapshotInfo = await createSnapshot(conditionInput.snapshot, tokenDecimals, provider, storage, snapshotFormatVersion);\n      snapshotInfos.push(snapshotInfo);\n      conditionInput.merkleRootHash = snapshotInfo.merkleRoot;\n    } else {\n      // if no snapshot is passed or empty, reset the merkle root\n      conditionInput.merkleRootHash = utils.hexZeroPad([0], 32);\n    }\n    // fill condition with defaults values if not provided\n    return conditionInput;\n  }));\n  return {\n    inputsWithSnapshots,\n    snapshotInfos\n  };\n}\nfunction compare(a, b) {\n  const left = BigNumber.from(a);\n  const right = BigNumber.from(b);\n  if (left.eq(right)) {\n    return 0;\n  } else if (left.gt(right)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n\n/**\n * Create and uploads snapshots + converts claim conditions to contract format\n * @param claimConditionInputs\n * @param tokenDecimals\n * @param provider\n * @param storage\n * @param snapshotFormatVersion\n * @internal\n */\nasync function processClaimConditionInputs(claimConditionInputs, tokenDecimals, provider, storage, snapshotFormatVersion) {\n  const {\n    inputsWithSnapshots,\n    snapshotInfos\n  } = await processSnapshotData(claimConditionInputs, tokenDecimals, provider, storage, snapshotFormatVersion);\n  const parsedInputs = ClaimConditionInputArray.parse(inputsWithSnapshots);\n  // Convert processed inputs to the format the contract expects, and sort by timestamp\n  const sortedConditions = (await Promise.all(parsedInputs.map(c => convertToContractModel(c, tokenDecimals, provider, storage)))).sort((a, b) => {\n    return compare(a.startTimestamp, b.startTimestamp);\n  });\n  return {\n    snapshotInfos,\n    sortedConditions\n  };\n}\n\n/**\n * Converts a local SDK model to contract model\n * @param c\n * @param tokenDecimals\n * @param provider\n * @param storage\n * @internal\n */\nasync function convertToContractModel(c, tokenDecimals, provider, storage) {\n  const currency = c.currencyAddress === constants.AddressZero ? NATIVE_TOKEN_ADDRESS : c.currencyAddress;\n  const maxClaimableSupply = convertQuantityToBigNumber(c.maxClaimableSupply, tokenDecimals);\n  const maxClaimablePerWallet = convertQuantityToBigNumber(c.maxClaimablePerWallet, tokenDecimals);\n  let metadataOrUri;\n  if (c.metadata) {\n    if (typeof c.metadata === \"string\") {\n      metadataOrUri = c.metadata;\n    } else {\n      metadataOrUri = await storage.upload(c.metadata);\n    }\n  }\n  return {\n    startTimestamp: c.startTime,\n    maxClaimableSupply,\n    supplyClaimed: 0,\n    maxClaimablePerWallet,\n    pricePerToken: await normalizePriceValue(provider, c.price, currency),\n    currency,\n    merkleRoot: c.merkleRootHash.toString(),\n    waitTimeInSecondsBetweenClaims: c.waitInSeconds || 0,\n    metadata: metadataOrUri\n  };\n}\nfunction abstractContractModelToLegacy(model) {\n  return {\n    startTimestamp: model.startTimestamp,\n    maxClaimableSupply: model.maxClaimableSupply,\n    supplyClaimed: model.supplyClaimed,\n    merkleRoot: model.merkleRoot,\n    pricePerToken: model.pricePerToken,\n    currency: model.currency,\n    quantityLimitPerTransaction: model.maxClaimablePerWallet,\n    waitTimeInSecondsBetweenClaims: model.waitTimeInSecondsBetweenClaims || 0\n  };\n}\nfunction abstractContractModelToNew(model) {\n  return {\n    startTimestamp: model.startTimestamp,\n    maxClaimableSupply: model.maxClaimableSupply,\n    supplyClaimed: model.supplyClaimed,\n    merkleRoot: model.merkleRoot,\n    pricePerToken: model.pricePerToken,\n    currency: model.currency,\n    quantityLimitPerWallet: model.maxClaimablePerWallet,\n    metadata: model.metadata || \"\"\n  };\n}\nfunction legacyContractModelToAbstract(model) {\n  return {\n    startTimestamp: model.startTimestamp,\n    maxClaimableSupply: model.maxClaimableSupply,\n    supplyClaimed: model.supplyClaimed,\n    merkleRoot: model.merkleRoot.toString(),\n    pricePerToken: model.pricePerToken,\n    currency: model.currency,\n    maxClaimablePerWallet: model.quantityLimitPerTransaction,\n    waitTimeInSecondsBetweenClaims: model.waitTimeInSecondsBetweenClaims\n  };\n}\nfunction newContractModelToAbstract(model) {\n  return {\n    startTimestamp: model.startTimestamp,\n    maxClaimableSupply: model.maxClaimableSupply,\n    supplyClaimed: model.supplyClaimed,\n    merkleRoot: model.merkleRoot.toString(),\n    pricePerToken: model.pricePerToken,\n    currency: model.currency,\n    maxClaimablePerWallet: model.quantityLimitPerWallet,\n    waitTimeInSecondsBetweenClaims: 0,\n    metadata: model.metadata\n  };\n}\n\n/**\n * Transforms a contract model to local model\n * @param pm\n * @param tokenDecimals\n * @param provider\n * @param merkleMetadata\n * @param storage\n * @param shouldDownloadSnapshot\n * @internal\n */\nasync function transformResultToClaimCondition(pm, tokenDecimals, provider, merkleMetadata, storage, shouldDownloadSnapshot) {\n  const cv = await fetchCurrencyValue(provider, pm.currency, pm.pricePerToken);\n  const maxClaimableSupply = convertToReadableQuantity(pm.maxClaimableSupply, tokenDecimals);\n  const maxClaimablePerWallet = convertToReadableQuantity(pm.maxClaimablePerWallet, tokenDecimals);\n  const availableSupply = convertToReadableQuantity(BigNumber.from(pm.maxClaimableSupply).sub(pm.supplyClaimed), tokenDecimals);\n  const currentMintSupply = convertToReadableQuantity(pm.supplyClaimed, tokenDecimals);\n  let resolvedMetadata;\n  if (pm.metadata) {\n    resolvedMetadata = await storage.downloadJSON(pm.metadata);\n  }\n  return ClaimConditionOutputSchema.parse({\n    startTime: pm.startTimestamp,\n    maxClaimableSupply,\n    maxClaimablePerWallet,\n    currentMintSupply,\n    availableSupply,\n    waitInSeconds: pm.waitTimeInSecondsBetweenClaims?.toString(),\n    price: BigNumber.from(pm.pricePerToken),\n    currency: pm.currency,\n    currencyAddress: pm.currency,\n    currencyMetadata: cv,\n    merkleRootHash: pm.merkleRoot,\n    snapshot: shouldDownloadSnapshot ? await fetchSnapshot(pm.merkleRoot, merkleMetadata, storage) : undefined,\n    metadata: resolvedMetadata\n  });\n}\n\n/**\n * @internal\n * @param bn\n * @param tokenDecimals\n */\nfunction convertToReadableQuantity(bn, tokenDecimals) {\n  if (bn.toString() === ethers.constants.MaxUint256.toString()) {\n    return \"unlimited\";\n  } else {\n    return ethers.utils.formatUnits(bn, tokenDecimals);\n  }\n}\n\n/**\n * @internal\n * @param quantity\n * @param tokenDecimals\n */\nfunction convertQuantityToBigNumber(quantity, tokenDecimals) {\n  if (quantity === \"unlimited\") {\n    return ethers.constants.MaxUint256;\n  } else {\n    return ethers.utils.parseUnits(quantity, tokenDecimals);\n  }\n}\nasync function calculateClaimCost(contractWrapper, pricePerToken, quantity, currencyAddress, checkERC20Allowance) {\n  let overrides = {};\n  const currency = currencyAddress || NATIVE_TOKEN_ADDRESS;\n  const normalizedPrice = await normalizePriceValue(contractWrapper.getProvider(), pricePerToken, currency);\n  const totalCost = normalizedPrice.mul(quantity);\n  if (totalCost.gt(0)) {\n    if (currency === NATIVE_TOKEN_ADDRESS) {\n      overrides = {\n        value: totalCost\n      };\n    } else if (currency !== NATIVE_TOKEN_ADDRESS && checkERC20Allowance) {\n      await approveErc20Allowance(contractWrapper, currency, totalCost, quantity, 0);\n    }\n  }\n  return overrides;\n}\n\n// shard using the first 2 hex character of the address\n// this splits the merkle tree into 256 shards\n// shard files will be 00.json, 01.json, 02.json, ..., ff.json\nconst SHARD_NYBBLES = 2;\nlet SnapshotFormatVersion; // address, maxClaimable, price, currencyAddress\n(function (SnapshotFormatVersion) {\n  SnapshotFormatVersion[SnapshotFormatVersion[\"V1\"] = 1] = \"V1\";\n  SnapshotFormatVersion[SnapshotFormatVersion[\"V2\"] = 2] = \"V2\";\n})(SnapshotFormatVersion || (SnapshotFormatVersion = {}));\nclass ShardedMerkleTree {\n  constructor(storage, baseUri, originalEntriesUri, shardNybbles, tokenDecimals) {\n    _defineProperty(this, \"shardNybbles\", void 0);\n    _defineProperty(this, \"shards\", void 0);\n    _defineProperty(this, \"trees\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"baseUri\", void 0);\n    _defineProperty(this, \"originalEntriesUri\", void 0);\n    _defineProperty(this, \"tokenDecimals\", void 0);\n    this.storage = storage;\n    this.shardNybbles = shardNybbles;\n    this.baseUri = baseUri;\n    this.originalEntriesUri = originalEntriesUri;\n    this.tokenDecimals = tokenDecimals;\n    this.shards = {};\n    this.trees = {};\n  }\n  static async fromUri(uri, storage) {\n    try {\n      const shardedMerkleTreeInfo = await storage.downloadJSON(uri);\n      if (shardedMerkleTreeInfo.isShardedMerkleTree) {\n        return ShardedMerkleTree.fromShardedMerkleTreeInfo(shardedMerkleTreeInfo, storage);\n      }\n    } catch (e) {\n      return undefined;\n    }\n  }\n  static async fromShardedMerkleTreeInfo(info, storage) {\n    return new ShardedMerkleTree(storage, info.baseUri, info.originalEntriesUri, info.shardNybbles, info.tokenDecimals);\n  }\n  static hashEntry(entry, tokenDecimals, currencyDecimals, snapshotFormatVersion) {\n    switch (snapshotFormatVersion) {\n      case SnapshotFormatVersion.V1:\n        return utils.solidityKeccak256([\"address\", \"uint256\"], [entry.address, convertQuantityToBigNumber(entry.maxClaimable, tokenDecimals)]);\n      case SnapshotFormatVersion.V2:\n        return utils.solidityKeccak256([\"address\", \"uint256\", \"uint256\", \"address\"], [entry.address, convertQuantityToBigNumber(entry.maxClaimable, tokenDecimals), convertQuantityToBigNumber(entry.price || \"unlimited\", currencyDecimals), entry.currencyAddress || ethers.constants.AddressZero]);\n    }\n  }\n  static async fetchAndCacheDecimals(cache, provider, currencyAddress) {\n    if (!currencyAddress) {\n      return 18;\n    }\n    // cache decimals for each currency to avoid refetching for every address\n    let currencyDecimals = cache[currencyAddress];\n    if (currencyDecimals === undefined) {\n      const currencyMetadata = await fetchCurrencyMetadata(provider, currencyAddress);\n      currencyDecimals = currencyMetadata.decimals;\n      cache[currencyAddress] = currencyDecimals;\n    }\n    return currencyDecimals;\n  }\n  static async buildAndUpload(snapshotInput, tokenDecimals, provider, storage, snapshotFormatVersion) {\n    let shardNybbles = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : SHARD_NYBBLES;\n    const inputs = SnapshotInputSchema.parse(snapshotInput);\n    // TODO Could also derive shardNybbles from input size\n    const shards = {};\n    for (const snapshotEntry of inputs) {\n      const shard = snapshotEntry.address.slice(2, 2 + shardNybbles).toLowerCase();\n      if (shards[shard] === undefined) {\n        shards[shard] = [];\n      }\n      shards[shard].push(snapshotEntry);\n    }\n    const currencyDecimalMap = {};\n    // create shard => subtree root map\n    const subTrees = await Promise.all(Object.entries(shards).map(async _ref => {\n      let [shard, entries] = _ref;\n      return [shard, new MerkleTree(await Promise.all(entries.map(async entry => {\n        // cache decimals for each currency to avoid refetching for every address\n        const currencyDecimals = await ShardedMerkleTree.fetchAndCacheDecimals(currencyDecimalMap, provider, entry.currencyAddress);\n        return ShardedMerkleTree.hashEntry(entry, tokenDecimals, currencyDecimals, snapshotFormatVersion);\n      })), utils.keccak256, {\n        sort: true\n      }).getHexRoot()];\n    }));\n    const roots = Object.fromEntries(subTrees);\n    // create master tree from shard => subtree root map\n    const tree = new MerkleTree(Object.values(roots), utils.keccak256, {\n      sort: true\n    });\n    const shardsToUpload = [];\n    for (const [shardId, entries] of Object.entries(shards)) {\n      const data = {\n        proofs: tree.getProof(roots[shardId]).map(value => \"0x\" + value.data.toString(\"hex\")),\n        entries\n      };\n      shardsToUpload.push({\n        data: JSON.stringify(data),\n        name: `${shardId}.json`\n      });\n    }\n    const uris = await storage.uploadBatch(shardsToUpload);\n    const baseUri = uris[0].slice(0, uris[0].lastIndexOf(\"/\"));\n    const originalEntriesUri = await storage.upload(inputs);\n    const shardedMerkleInfo = {\n      merkleRoot: tree.getHexRoot(),\n      baseUri,\n      originalEntriesUri,\n      shardNybbles,\n      tokenDecimals,\n      isShardedMerkleTree: true\n    };\n    const masterUri = await storage.upload(shardedMerkleInfo);\n    return {\n      shardedMerkleInfo,\n      uri: masterUri\n    };\n  }\n  async getProof(address, provider, snapshotFormatVersion) {\n    const shardId = address.slice(2, 2 + this.shardNybbles).toLowerCase();\n    let shard = this.shards[shardId];\n    const currencyDecimalMap = {};\n    if (shard === undefined) {\n      try {\n        shard = this.shards[shardId] = await this.storage.downloadJSON(`${this.baseUri}/${shardId}.json`);\n        const hashedEntries = await Promise.all(shard.entries.map(async entry => {\n          // cache decimals for each currency to avoid refetching for every address\n          const currencyDecimals = await ShardedMerkleTree.fetchAndCacheDecimals(currencyDecimalMap, provider, entry.currencyAddress);\n          return ShardedMerkleTree.hashEntry(entry, this.tokenDecimals, currencyDecimals, snapshotFormatVersion);\n        }));\n        this.trees[shardId] = new MerkleTree(hashedEntries, utils.keccak256, {\n          sort: true\n        });\n      } catch (e) {\n        console.warn(\"No merkle entry found for address\", address);\n        return null;\n      }\n    }\n    const entry = shard.entries.find(i => i.address.toLowerCase() === address.toLowerCase());\n    if (!entry) {\n      return null;\n    }\n    const currencyDecimals = await ShardedMerkleTree.fetchAndCacheDecimals(currencyDecimalMap, provider, entry.currencyAddress);\n    const leaf = ShardedMerkleTree.hashEntry(entry, this.tokenDecimals, currencyDecimals, snapshotFormatVersion);\n    const proof = this.trees[shardId].getProof(leaf).map(i => \"0x\" + i.data.toString(\"hex\"));\n    return SnapshotEntryWithProofSchema.parse({\n      ...entry,\n      proof: proof.concat(shard.proofs)\n    });\n  }\n  async getAllEntries() {\n    try {\n      return await this.storage.downloadJSON(this.originalEntriesUri);\n    } catch (e) {\n      console.warn(\"Could not fetch original snapshot entries\", e);\n      return [];\n    }\n  }\n}\n\n/**\n * Create a snapshot (merkle tree) from a list of addresses and uploads it to IPFS\n * @param snapshotInput - the list of addresses to hash\n * @param tokenDecimals - the token decimals\n * @param provider\n * @param storage - the storage to upload to\n * @param snapshotFormatVersion\n * @returns the generated snapshot and URI\n * @internal\n */\nasync function createSnapshot(snapshotInput, tokenDecimals, provider, storage, snapshotFormatVersion) {\n  const input = SnapshotInputSchema.parse(snapshotInput);\n  const addresses = input.map(i => i.address);\n  const hasDuplicates = new Set(addresses).size < addresses.length;\n  if (hasDuplicates) {\n    throw new DuplicateLeafsError();\n  }\n  const tree = await ShardedMerkleTree.buildAndUpload(input, tokenDecimals, provider, storage, snapshotFormatVersion);\n  return {\n    merkleRoot: tree.shardedMerkleInfo.merkleRoot,\n    snapshotUri: tree.uri\n  };\n}\n\n/**\n *\n * @internal\n */\nconst roleMap = {\n  admin: \"\",\n  transfer: \"TRANSFER_ROLE\",\n  minter: \"MINTER_ROLE\",\n  pauser: \"PAUSER_ROLE\",\n  lister: \"LISTER_ROLE\",\n  asset: \"ASSET_ROLE\",\n  unwrap: \"UNWRAP_ROLE\",\n  factory: \"FACTORY_ROLE\"\n};\n\n/**\n * @public\n */\n\n/**\n * @public\n */\nconst ALL_ROLES = Object.keys(roleMap);\n\n/**\n * @internal\n */\nfunction getRoleHash(role) {\n  if (role === \"admin\") {\n    return ethers.utils.hexZeroPad([0], 32);\n  }\n  return ethers.utils.id(roleMap[role]);\n}\n\nconst FEATURE_TOKEN_CLAIM_CONDITIONS_V1 = {\n  name: \"ERC20ClaimConditionsV1\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"DropSinglePhase_V1\"\n  },\n  abis: [ERC20Abi, IDropSinglePhaseV1],\n  features: {}\n};\nconst FEATURE_TOKEN_CLAIM_CONDITIONS_V2 = {\n  name: \"ERC20ClaimConditionsV2\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"DropSinglePhase\"\n  },\n  abis: [ERC20Abi, IDropSinglePhase],\n  features: {}\n};\nconst FEATURE_TOKEN_CLAIM_PHASES_V2 = {\n  name: \"ERC20ClaimPhasesV2\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"Drop\"\n  },\n  abis: [ERC20Abi, IDrop],\n  features: {}\n};\nconst FEATURE_TOKEN_CLAIM_PHASES_V1 = {\n  name: \"ERC20ClaimPhasesV1\",\n  namespace: \"token.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc20dclaimable\",\n    contracts: \"Drop\"\n  },\n  abis: [DropERC20_V2Abi],\n  features: {}\n};\nconst FEATURE_TOKEN_BURNABLE = {\n  name: \"ERC20Burnable\",\n  namespace: \"token.burn\",\n  docLinks: {\n    sdk: \"sdk.erc20burnable\",\n    contracts: \"IBurnableERC20\"\n  },\n  abis: [ERC20Abi, IBurnableERC20Abi],\n  features: {}\n};\nconst FEATURE_TOKEN_SIGNATURE_MINTABLE = {\n  name: \"ERC20SignatureMintable\",\n  namespace: \"token.signature\",\n  docLinks: {\n    sdk: \"sdk.erc20signaturemintable\",\n    contracts: \"ISignatureMintERC20\"\n  },\n  abis: [ERC20Abi, ISignatureMintERC20Abi],\n  features: {}\n};\nconst FEATURE_TOKEN_BATCH_MINTABLE = {\n  name: \"ERC20BatchMintable\",\n  namespace: \"token.mint.batch\",\n  docLinks: {\n    sdk: \"sdk.erc20batchmintable\",\n    contracts: \"IMulticall\"\n  },\n  abis: [ERC20Abi, IMintableERC20Abi, MulticallAbi],\n  features: {}\n};\nconst FEATURE_TOKEN_MINTABLE = {\n  name: \"ERC20Mintable\",\n  namespace: \"token.mint\",\n  docLinks: {\n    sdk: \"sdk.erc20mintable\",\n    contracts: \"IMintableERC20\"\n  },\n  abis: [ERC20Abi, IMintableERC20Abi],\n  features: {\n    [FEATURE_TOKEN_BATCH_MINTABLE.name]: FEATURE_TOKEN_BATCH_MINTABLE\n  }\n};\nconst FEATURE_TOKEN = {\n  name: \"ERC20\",\n  namespace: \"token\",\n  docLinks: {\n    sdk: \"sdk.erc20\",\n    contracts: \"IERC20\"\n  },\n  abis: [ERC20Abi],\n  features: {\n    [FEATURE_TOKEN_BURNABLE.name]: FEATURE_TOKEN_BURNABLE,\n    [FEATURE_TOKEN_MINTABLE.name]: FEATURE_TOKEN_MINTABLE,\n    [FEATURE_TOKEN_CLAIM_CONDITIONS_V1.name]: FEATURE_TOKEN_CLAIM_CONDITIONS_V1,\n    [FEATURE_TOKEN_CLAIM_CONDITIONS_V2.name]: FEATURE_TOKEN_CLAIM_CONDITIONS_V2,\n    [FEATURE_TOKEN_CLAIM_PHASES_V1.name]: FEATURE_TOKEN_CLAIM_PHASES_V1,\n    [FEATURE_TOKEN_CLAIM_PHASES_V2.name]: FEATURE_TOKEN_CLAIM_PHASES_V2,\n    [FEATURE_TOKEN_SIGNATURE_MINTABLE.name]: FEATURE_TOKEN_SIGNATURE_MINTABLE\n  }\n};\n\nconst FEATURE_NFT_BURNABLE = {\n  name: \"ERC721Burnable\",\n  namespace: \"nft.burn\",\n  docLinks: {\n    sdk: \"sdk.erc721burnable\",\n    contracts: \"IBurnableERC721\"\n  },\n  abis: [Erc721Abi, IBurnableERC721Abi],\n  features: {}\n};\nconst FEATURE_NFT_REVEALABLE = {\n  name: \"ERC721Revealable\",\n  namespace: \"nft.drop.revealer\",\n  docLinks: {\n    sdk: \"sdk.delayedreveal\",\n    contracts: \"DelayedReveal\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi, DelayedRevealAbi],\n  features: {}\n};\nconst FEATURE_NFT_TIERED_DROP = {\n  name: \"ERC721TieredDrop\",\n  namespace: \"nft.tieredDrop\",\n  docLinks: {\n    sdk: \"sdk.erc721tiereddrop\",\n    contracts: \"TieredDrop\"\n  },\n  abis: [Erc721Abi, TieredDropAbi],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_CONDITIONS_V1 = {\n  name: \"ERC721ClaimConditionsV1\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"DropSinglePhase_V1\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi, IDropSinglePhaseV1],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_CONDITIONS_V2 = {\n  name: \"ERC721ClaimConditionsV2\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"DropSinglePhase\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi, IDropSinglePhase],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_PHASES_V1 = {\n  name: \"ERC721ClaimPhasesV1\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"Drop\"\n  },\n  abis: [DropERC721_V3Abi],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_PHASES_V2 = {\n  name: \"ERC721ClaimPhasesV2\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"Drop\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi, IDrop],\n  features: {}\n};\nconst FEATURE_NFT_CLAIM_CUSTOM = {\n  name: \"ERC721ClaimCustom\",\n  namespace: \"nft.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc721claimable\",\n    contracts: \"IClaimableERC721\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi, IClaimableERC721],\n  features: {}\n};\nconst FEATURE_NFT_LAZY_MINTABLE = {\n  name: \"ERC721LazyMintable\",\n  namespace: \"nft.drop\",\n  docLinks: {\n    sdk: \"sdk.erc721lazymintable\",\n    contracts: \"LazyMint\"\n  },\n  abis: [Erc721Abi, ILazyMintAbi],\n  features: {\n    [FEATURE_NFT_REVEALABLE.name]: FEATURE_NFT_REVEALABLE,\n    [FEATURE_NFT_CLAIM_CUSTOM.name]: FEATURE_NFT_CLAIM_CUSTOM,\n    [FEATURE_NFT_CLAIM_CONDITIONS_V1.name]: FEATURE_NFT_CLAIM_CONDITIONS_V1,\n    [FEATURE_NFT_CLAIM_CONDITIONS_V2.name]: FEATURE_NFT_CLAIM_CONDITIONS_V2,\n    [FEATURE_NFT_CLAIM_PHASES_V1.name]: FEATURE_NFT_CLAIM_PHASES_V1,\n    [FEATURE_NFT_CLAIM_PHASES_V2.name]: FEATURE_NFT_CLAIM_PHASES_V2\n  }\n};\nconst FEATURE_NFT_BATCH_MINTABLE = {\n  name: \"ERC721BatchMintable\",\n  namespace: \"nft.mint.batch\",\n  docLinks: {\n    sdk: \"sdk.erc721batchmintable\",\n    contracts: \"IMulticall\"\n  },\n  abis: [Erc721Abi, IMintableERC721Abi, MulticallAbi],\n  features: {}\n};\nconst FEATURE_NFT_MINTABLE = {\n  name: \"ERC721Mintable\",\n  namespace: \"nft.mint\",\n  docLinks: {\n    sdk: \"sdk.erc721mintable\",\n    contracts: \"IMintableERC721\"\n  },\n  abis: [Erc721Abi, IMintableERC721Abi],\n  features: {\n    [FEATURE_NFT_BATCH_MINTABLE.name]: FEATURE_NFT_BATCH_MINTABLE\n  }\n};\nconst FEATURE_NFT_SIGNATURE_MINTABLE_V2 = {\n  name: \"ERC721SignatureMintV2\",\n  namespace: \"nft.signature\",\n  docLinks: {\n    sdk: \"sdk.erc721signaturemint\",\n    contracts: \"ISignatureMintERC721\"\n  },\n  abis: [Erc721Abi, SignatureMintERC721Abi],\n  features: {}\n};\nconst FEATURE_NFT_SIGNATURE_MINTABLE_V1 = {\n  name: \"ERC721SignatureMintV1\",\n  namespace: \"nft.signature\",\n  docLinks: {\n    sdk: \"sdk.erc721signaturemint\",\n    contracts: \"ISignatureMintERC721\"\n  },\n  abis: [SignatureMintERC721_V1Abi],\n  features: {}\n};\nconst FEATURE_NFT_ENUMERABLE = {\n  name: \"ERC721Enumerable\",\n  namespace: \"nft.query.owned\",\n  docLinks: {\n    sdk: \"sdk.erc721enumerable\",\n    contracts: \"IERC721Enumerable\"\n  },\n  abis: [Erc721Abi, Erc721EnumerableAbi],\n  features: {}\n};\nconst FEATURE_NFT_SUPPLY = {\n  name: \"ERC721Supply\",\n  namespace: \"nft.query\",\n  docLinks: {\n    sdk: \"sdk.erc721supply\",\n    contracts: \"IERC721Supply\"\n  },\n  abis: [Erc721Abi, Erc721SupplyAbi],\n  features: {\n    [FEATURE_NFT_ENUMERABLE.name]: FEATURE_NFT_ENUMERABLE\n  }\n};\nconst FEATURE_NFT = {\n  name: \"ERC721\",\n  namespace: \"nft\",\n  docLinks: {\n    sdk: \"sdk.erc721\",\n    contracts: \"IERC721\"\n  },\n  abis: [Erc721Abi],\n  features: {\n    [FEATURE_NFT_BURNABLE.name]: FEATURE_NFT_BURNABLE,\n    [FEATURE_NFT_SUPPLY.name]: FEATURE_NFT_SUPPLY,\n    [FEATURE_NFT_MINTABLE.name]: FEATURE_NFT_MINTABLE,\n    [FEATURE_NFT_LAZY_MINTABLE.name]: FEATURE_NFT_LAZY_MINTABLE,\n    [FEATURE_NFT_SIGNATURE_MINTABLE_V1.name]: FEATURE_NFT_SIGNATURE_MINTABLE_V1,\n    [FEATURE_NFT_SIGNATURE_MINTABLE_V2.name]: FEATURE_NFT_SIGNATURE_MINTABLE_V2,\n    [FEATURE_NFT_TIERED_DROP.name]: FEATURE_NFT_TIERED_DROP\n  }\n};\n\nconst FEATURE_EDITION_BURNABLE = {\n  name: \"ERC1155Burnable\",\n  namespace: \"edition.burn\",\n  docLinks: {\n    sdk: \"sdk.erc1155burnable\",\n    contracts: \"IBurnableERC1155\"\n  },\n  abis: [Erc1155Abi, IBurnableERC1155Abi],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_CONDITIONS_V1 = {\n  name: \"ERC1155ClaimConditionsV1\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"DropSinglePhase1155\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi, IDropSinglePhase1155_V1],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_CONDITIONS_V2 = {\n  name: \"ERC1155ClaimConditionsV2\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"DropSinglePhase1155\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi, IDropSinglePhase1155],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_PHASES_V2 = {\n  name: \"ERC1155ClaimPhasesV2\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"Drop1155\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi, IDropMultiPhase1155],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_PHASES_V1 = {\n  name: \"ERC1155ClaimPhasesV1\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"Drop1155\"\n  },\n  abis: [DropERC1155_V2Abi],\n  features: {}\n};\nconst FEATURE_EDITION_CLAIM_CUSTOM = {\n  name: \"ERC1155ClaimCustom\",\n  namespace: \"edition.drop.claim\",\n  docLinks: {\n    sdk: \"sdk.erc1155claimable\",\n    contracts: \"IClaimableERC1155\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi, IClaimableERC1155],\n  features: {}\n};\nconst FEATURE_EDITION_REVEALABLE = {\n  name: \"ERC1155Revealable\",\n  namespace: \"edition.drop.revealer\",\n  docLinks: {\n    sdk: \"sdk.drop.delayedreveal\",\n    contracts: \"DelayedReveal\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi, DelayedRevealAbi],\n  features: {}\n};\nconst FEATURE_EDITION_LAZY_MINTABLE_V2 = {\n  name: \"ERC1155LazyMintableV2\",\n  namespace: \"edition.drop\",\n  docLinks: {\n    sdk: \"sdk.erc1155droppable\",\n    contracts: \"LazyMint\"\n  },\n  abis: [Erc1155Abi, ILazyMintAbi],\n  features: {\n    [FEATURE_EDITION_REVEALABLE.name]: FEATURE_EDITION_REVEALABLE,\n    [FEATURE_EDITION_CLAIM_CUSTOM.name]: FEATURE_EDITION_CLAIM_CUSTOM,\n    [FEATURE_EDITION_CLAIM_CONDITIONS_V1.name]: FEATURE_EDITION_CLAIM_CONDITIONS_V1,\n    [FEATURE_EDITION_CLAIM_CONDITIONS_V2.name]: FEATURE_EDITION_CLAIM_CONDITIONS_V2,\n    [FEATURE_EDITION_CLAIM_PHASES_V2.name]: FEATURE_EDITION_CLAIM_PHASES_V2\n  }\n};\nconst FEATURE_EDITION_LAZY_MINTABLE_V1 = {\n  name: \"ERC1155LazyMintableV1\",\n  namespace: \"edition.drop\",\n  docLinks: {\n    sdk: \"sdk.erc1155droppable\",\n    contracts: \"LazyMint\"\n  },\n  abis: [DropERC1155_V2Abi],\n  features: {\n    [FEATURE_EDITION_CLAIM_PHASES_V1.name]: FEATURE_EDITION_CLAIM_PHASES_V1\n  }\n};\nconst FEATURE_EDITION_SIGNATURE_MINTABLE = {\n  name: \"ERC1155SignatureMintable\",\n  namespace: \"edition.signature\",\n  docLinks: {\n    sdk: \"sdk.erc1155signaturemintable\",\n    contracts: \"ISignatureMintERC1155\"\n  },\n  abis: [Erc1155Abi, ISignatureMintERC1155Abi],\n  features: {}\n};\nconst FEATURE_EDITION_BATCH_MINTABLE = {\n  name: \"ERC1155BatchMintable\",\n  namespace: \"edition.mint.batch\",\n  docLinks: {\n    sdk: \"sdk.erc1155batchmintable\",\n    contracts: \"IMulticall\"\n  },\n  abis: [Erc1155Abi, IMintableERC1155Abi, MulticallAbi],\n  features: {}\n};\nconst FEATURE_EDITION_MINTABLE = {\n  name: \"ERC1155Mintable\",\n  namespace: \"edition.mint\",\n  docLinks: {\n    sdk: \"sdk.erc1155mintable\",\n    contracts: \"IMintableERC1155\"\n  },\n  abis: [Erc1155Abi, IMintableERC1155Abi],\n  features: {\n    [FEATURE_EDITION_BATCH_MINTABLE.name]: FEATURE_EDITION_BATCH_MINTABLE\n  }\n};\nconst FEATURE_EDITION_ENUMERABLE = {\n  name: \"ERC1155Enumerable\",\n  namespace: \"edition.query\",\n  docLinks: {\n    sdk: \"sdk.erc1155\",\n    contracts: \"IERC1155\"\n  },\n  abis: [Erc1155Abi, Erc1155EnumerableAbi],\n  features: {}\n};\nconst FEATURE_EDITION = {\n  name: \"ERC1155\",\n  namespace: \"edition\",\n  docLinks: {\n    sdk: \"sdk.erc1155enumerable\",\n    contracts: \"IERC1155Enumerable\"\n  },\n  abis: [Erc1155Abi],\n  features: {\n    [FEATURE_EDITION_BURNABLE.name]: FEATURE_EDITION_BURNABLE,\n    [FEATURE_EDITION_ENUMERABLE.name]: FEATURE_EDITION_ENUMERABLE,\n    [FEATURE_EDITION_MINTABLE.name]: FEATURE_EDITION_MINTABLE,\n    [FEATURE_EDITION_LAZY_MINTABLE_V1.name]: FEATURE_EDITION_LAZY_MINTABLE_V1,\n    [FEATURE_EDITION_LAZY_MINTABLE_V2.name]: FEATURE_EDITION_LAZY_MINTABLE_V2,\n    [FEATURE_EDITION_REVEALABLE.name]: FEATURE_EDITION_REVEALABLE,\n    [FEATURE_EDITION_SIGNATURE_MINTABLE.name]: FEATURE_EDITION_SIGNATURE_MINTABLE\n  }\n};\n\nconst FEATURE_ROYALTY = {\n  name: \"Royalty\",\n  namespace: \"royalty\",\n  docLinks: {\n    sdk: \"sdk.contractroyalty\",\n    contracts: \"Royalty\"\n  },\n  abis: [IThirdwebRoyaltyAbi],\n  features: {}\n};\nconst FEATURE_PRIMARY_SALE = {\n  name: \"PrimarySale\",\n  namespace: \"sales\",\n  docLinks: {\n    sdk: \"sdk.contractprimarysale\",\n    contracts: \"PrimarySale\"\n  },\n  abis: [IThirdwebPrimarySaleAbi],\n  features: {}\n};\nconst FEATURE_PLATFORM_FEE = {\n  name: \"PlatformFee\",\n  namespace: \"platformFee\",\n  docLinks: {\n    sdk: \"sdk.platformfee\",\n    contracts: \"PlatformFee\"\n  },\n  abis: [IThirdwebPlatformFeeAbi],\n  features: {}\n};\nconst FEATURE_PERMISSIONS_ENUMERABLE = {\n  name: \"PermissionsEnumerable\",\n  namespace: \"roles\",\n  docLinks: {\n    sdk: \"sdk.contractroles\",\n    contracts: \"PermissionsEnumerable\"\n  },\n  abis: [IPermissionsEnumerableAbi],\n  features: {}\n};\nconst FEATURE_PERMISSIONS = {\n  name: \"Permissions\",\n  namespace: \"roles\",\n  docLinks: {\n    sdk: \"sdk.contractroles\",\n    contracts: \"Permissions\"\n  },\n  abis: [IPermissionsAbi],\n  features: {\n    [FEATURE_PERMISSIONS_ENUMERABLE.name]: FEATURE_PERMISSIONS_ENUMERABLE\n  }\n};\nconst FEATURE_METADATA = {\n  name: \"ContractMetadata\",\n  namespace: \"metadata\",\n  docLinks: {\n    sdk: \"sdk.contractmetadata\",\n    contracts: \"ContractMetadata\"\n  },\n  abis: [IContractMetadataAbi],\n  features: {}\n};\nconst FEATURE_APPURI = {\n  name: \"AppURI\",\n  namespace: \"appURI\",\n  docLinks: {\n    sdk: \"sdk.appURI\",\n    contracts: \"AppURI\"\n  },\n  abis: [IAppURI],\n  features: {}\n};\nconst FEATURE_OWNER = {\n  name: \"Ownable\",\n  namespace: \"owner\",\n  docLinks: {\n    sdk: \"sdk.owner\",\n    contracts: \"Ownable\"\n  },\n  abis: [IOwnableAbi],\n  features: {}\n};\nconst FEATURE_GASLESS = {\n  name: \"Gasless\",\n  namespace: \"gasless\",\n  docLinks: {\n    sdk: \"sdk.gaslesstransaction\",\n    // TODO add the correct name for this once it's added to portal\n    contracts: \"\"\n  },\n  abis: [IERC2771ContextAbi],\n  features: {}\n};\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst SUPPORTED_FEATURES = {\n  [FEATURE_TOKEN.name]: FEATURE_TOKEN,\n  [FEATURE_NFT.name]: FEATURE_NFT,\n  [FEATURE_EDITION.name]: FEATURE_EDITION,\n  [FEATURE_ROYALTY.name]: FEATURE_ROYALTY,\n  [FEATURE_PLATFORM_FEE.name]: FEATURE_PLATFORM_FEE,\n  [FEATURE_PRIMARY_SALE.name]: FEATURE_PRIMARY_SALE,\n  [FEATURE_PERMISSIONS.name]: FEATURE_PERMISSIONS,\n  [FEATURE_METADATA.name]: FEATURE_METADATA,\n  [FEATURE_APPURI.name]: FEATURE_APPURI,\n  [FEATURE_OWNER.name]: FEATURE_OWNER,\n  [FEATURE_GASLESS.name]: FEATURE_GASLESS\n};\n\n/* eslint-disable eqeqeq */\nlet decoder;\ntry {\n  decoder = new TextDecoder();\n} catch (error) {}\nlet src;\nlet srcEnd;\nlet position = 0;\nconst LEGACY_RECORD_INLINE_ID = 105;\nconst RECORD_DEFINITIONS_ID = 0xdffe;\nconst RECORD_INLINE_ID = 0xdfff; // temporary first-come first-serve tag // proposed tag: 0x7265 // 're'\nconst BUNDLED_STRINGS_ID = 0xdff9;\nconst PACKED_REFERENCE_TAG_ID = 6;\nconst STOP_CODE = {};\nlet currentDecoder = {};\nlet currentStructures;\nlet srcString;\nlet srcStringStart = 0;\nlet srcStringEnd = 0;\nlet bundledStrings;\nlet referenceMap;\nlet currentExtensions = [];\nlet currentExtensionRanges = [];\nlet packedValues;\nlet dataView;\nlet restoreMapsAsObject;\nlet defaultOptions = {\n  useRecords: false,\n  mapsAsObjects: true\n};\nlet sequentialMode = false;\nclass Decoder {\n  constructor(options) {\n    if (options) {\n      if ((options.keyMap || options._keyMap) && !options.useRecords) {\n        options.useRecords = false;\n        options.mapsAsObjects = true;\n      }\n      if (options.useRecords === false && options.mapsAsObjects === undefined) {\n        options.mapsAsObjects = true;\n      }\n      if (options.getStructures) {\n        options.getShared = options.getStructures;\n      }\n      if (options.getShared && !options.structures) {\n        (options.structures = []).uninitialized = true;\n      } // this is what we use to denote an uninitialized structures\n      if (options.keyMap) {\n        this.mapKey = new Map();\n        for (let [k, v] of Object.entries(options.keyMap)) {\n          this.mapKey.set(v, k);\n        }\n      }\n    }\n    Object.assign(this, options);\n  }\n  decodeKey(key) {\n    return this.keyMap ? this.mapKey.get(key) || key : key;\n  }\n  decode(source, end) {\n    if (src) {\n      // re-entrant execution, save the state and restore it after we do this decode\n      return saveState(() => {\n        clearSource();\n        return this ? this.decode(source, end) : Decoder.prototype.decode.call(defaultOptions, source, end);\n      });\n    }\n    srcEnd = end > -1 ? end : source.length;\n    position = 0;\n    srcStringEnd = 0;\n    srcString = null;\n    bundledStrings = null;\n    src = source;\n    // this provides cached access to the data view for a buffer if it is getting reused, which is a recommend\n    // technique for getting data from a database where it can be copied into an existing buffer instead of creating\n    // new ones\n    try {\n      dataView = source.dataView || (source.dataView = new DataView(source.buffer, source.byteOffset, source.byteLength));\n    } catch (error) {\n      // if it doesn't have a buffer, maybe it is the wrong type of object\n      src = null;\n      if (source instanceof Uint8Array) {\n        throw error;\n      }\n      throw new Error(\"Source must be a Uint8Array or Buffer but was a \" + (source && typeof source === \"object\" ? source.constructor.name : typeof source));\n    }\n    if (this instanceof Decoder) {\n      currentDecoder = this;\n      packedValues = this.sharedValues && (this.pack ? new Array(this.maxPrivatePackedValues || 16).concat(this.sharedValues) : this.sharedValues);\n      if (this.structures) {\n        currentStructures = this.structures;\n        return checkedRead();\n      } else if (!currentStructures || currentStructures.length > 0) {\n        currentStructures = [];\n      }\n    } else {\n      currentDecoder = defaultOptions;\n      if (!currentStructures || currentStructures.length > 0) {\n        currentStructures = [];\n      }\n      packedValues = null;\n    }\n    return checkedRead();\n  }\n}\nfunction checkedRead() {\n  try {\n    let result = read();\n    if (bundledStrings) {\n      if (position >= bundledStrings.postBundlePosition) {\n        let error = new Error(\"Unexpected bundle position\");\n        error.incomplete = true;\n        throw error;\n      }\n      // bundled strings to skip past\n      position = bundledStrings.postBundlePosition;\n      bundledStrings = null;\n    }\n    if (position == srcEnd) {\n      // finished reading this source, cleanup references\n      currentStructures = null;\n      src = null;\n      if (referenceMap) {\n        referenceMap = null;\n      }\n    } else if (position > srcEnd) {\n      // over read\n      let error = new Error(\"Unexpected end of CBOR data\");\n      error.incomplete = true;\n      throw error;\n    } else if (!sequentialMode) {\n      throw new Error(\"Data read, but end of buffer not reached\");\n    }\n    // else more to read, but we are reading sequentially, so don't clear source yet\n    return result;\n  } catch (error) {\n    clearSource();\n    if (error instanceof RangeError || error.message.startsWith(\"Unexpected end of buffer\")) {\n      error.incomplete = true;\n    }\n    throw error;\n  }\n}\nfunction read() {\n  let token = src[position++];\n  let majorType = token >> 5;\n  token = token & 0x1f;\n  if (token > 0x17) {\n    switch (token) {\n      case 0x18:\n        token = src[position++];\n        break;\n      case 0x19:\n        if (majorType == 7) {\n          return getFloat16();\n        }\n        token = dataView.getUint16(position);\n        position += 2;\n        break;\n      case 0x1a:\n        if (majorType == 7) {\n          let value = dataView.getFloat32(position);\n          if (currentDecoder.useFloat32 > 2) {\n            // this does rounding of numbers that were encoded in 32-bit float to nearest significant decimal digit that could be preserved\n            let multiplier = mult10[(src[position] & 0x7f) << 1 | src[position + 1] >> 7];\n            position += 4;\n            return (multiplier * value + (value > 0 ? 0.5 : -0.5) >> 0) / multiplier;\n          }\n          position += 4;\n          return value;\n        }\n        token = dataView.getUint32(position);\n        position += 4;\n        break;\n      case 0x1b:\n        if (majorType == 7) {\n          let value = dataView.getFloat64(position);\n          position += 8;\n          return value;\n        }\n        if (majorType > 1) {\n          if (dataView.getUint32(position) > 0) {\n            throw new Error(\"JavaScript does not support arrays, maps, or strings with length over 4294967295\");\n          }\n          token = dataView.getUint32(position + 4);\n        } else if (currentDecoder.int64AsNumber) {\n          token = dataView.getUint32(position) * 0x100000000;\n          token += dataView.getUint32(position + 4);\n        } else {\n          token = dataView.getBigUint64(position);\n        }\n        position += 8;\n        break;\n      case 0x1f:\n        // indefinite length\n        switch (majorType) {\n          case 2: // byte string\n          case 3:\n            // text string\n            throw new Error(\"Indefinite length not supported for byte or text strings\");\n          case 4:\n            // array\n            let array = [];\n            let value,\n              i = 0;\n            while ((value = read()) != STOP_CODE) {\n              array[i++] = value;\n            }\n            return majorType == 4 ? array : majorType == 3 ? array.join(\"\") : Buffer.concat(array);\n          case 5:\n            // map\n            let key;\n            if (currentDecoder.mapsAsObjects) {\n              let object = {};\n              if (currentDecoder.keyMap) {\n                while ((key = read()) != STOP_CODE) {\n                  object[safeKey(currentDecoder.decodeKey(key))] = read();\n                }\n              } else {\n                while ((key = read()) != STOP_CODE) {\n                  object[safeKey(key)] = read();\n                }\n              }\n              return object;\n            } else {\n              if (restoreMapsAsObject) {\n                currentDecoder.mapsAsObjects = true;\n                restoreMapsAsObject = false;\n              }\n              let map = new Map();\n              if (currentDecoder.keyMap) {\n                while ((key = read()) != STOP_CODE) {\n                  map.set(currentDecoder.decodeKey(key), read());\n                }\n              } else {\n                while ((key = read()) != STOP_CODE) {\n                  map.set(key, read());\n                }\n              }\n              return map;\n            }\n          case 7:\n            return STOP_CODE;\n          default:\n            throw new Error(\"Invalid major type for indefinite length \" + majorType);\n        }\n      default:\n        throw new Error(\"Unknown token \" + token);\n    }\n  }\n  switch (majorType) {\n    case 0:\n      // positive int\n      return token;\n    case 1:\n      // negative int\n      return ~token;\n    case 2:\n      // buffer\n      return readBin(token);\n    case 3:\n      // string\n      if (srcStringEnd >= position) {\n        return srcString.slice(position - srcStringStart, (position += token) - srcStringStart);\n      }\n      if (srcStringEnd == 0 && srcEnd < 140 && token < 32) {\n        // for small blocks, avoiding the overhead of the extract call is helpful\n        let string = token < 16 ? shortStringInJS(token) : longStringInJS(token);\n        if (string != null) {\n          return string;\n        }\n      }\n      return readFixedString(token);\n    case 4:\n      // array\n      let array = new Array(token);\n      //if (currentDecoder.keyMap) for (let i = 0; i < token; i++) array[i] = currentDecoder.decodeKey(read())\n      //else\n      for (let i = 0; i < token; i++) {\n        array[i] = read();\n      }\n      return array;\n    case 5:\n      // map\n      if (currentDecoder.mapsAsObjects) {\n        let object = {};\n        if (currentDecoder.keyMap) {\n          for (let i = 0; i < token; i++) {\n            object[safeKey(currentDecoder.decodeKey(read()))] = read();\n          }\n        } else {\n          for (let i = 0; i < token; i++) {\n            object[safeKey(read())] = read();\n          }\n        }\n        return object;\n      } else {\n        if (restoreMapsAsObject) {\n          currentDecoder.mapsAsObjects = true;\n          restoreMapsAsObject = false;\n        }\n        let map = new Map();\n        if (currentDecoder.keyMap) {\n          for (let i = 0; i < token; i++) {\n            map.set(currentDecoder.decodeKey(read()), read());\n          }\n        } else {\n          for (let i = 0; i < token; i++) {\n            map.set(read(), read());\n          }\n        }\n        return map;\n      }\n    case 6:\n      // extension\n      if (token >= BUNDLED_STRINGS_ID) {\n        let structure = currentStructures[token & 0x1fff]; // check record structures first\n        // At some point we may provide an option for dynamic tag assignment with a range like token >= 8 && (token < 16 || (token > 0x80 && token < 0xc0) || (token > 0x130 && token < 0x4000))\n        if (structure) {\n          if (!structure.read) {\n            structure.read = createStructureReader(structure);\n          }\n          return structure.read();\n        }\n        if (token < 0x10000) {\n          if (token == RECORD_INLINE_ID) {\n            // we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n            return recordDefinition(read());\n          } else if (token == RECORD_DEFINITIONS_ID) {\n            let length = readJustLength();\n            let id = read();\n            for (let i = 2; i < length; i++) {\n              recordDefinition([id++, read()]);\n            }\n            return read();\n          } else if (token == BUNDLED_STRINGS_ID) {\n            return readBundleExt();\n          }\n          if (currentDecoder.getShared) {\n            loadShared();\n            structure = currentStructures[token & 0x1fff];\n            if (structure) {\n              if (!structure.read) {\n                structure.read = createStructureReader(structure);\n              }\n              return structure.read();\n            }\n          }\n        }\n      }\n      let extension = currentExtensions[token];\n      if (extension) {\n        if (extension.handlesRead) {\n          return extension(read);\n        } else {\n          return extension(read());\n        }\n      } else {\n        let input = read();\n        for (let i = 0; i < currentExtensionRanges.length; i++) {\n          let value = currentExtensionRanges[i](token, input);\n          if (value !== undefined) {\n            return value;\n          }\n        }\n        return new Tag(input, token);\n      }\n    case 7:\n      // fixed value\n      switch (token) {\n        case 0x14:\n          return false;\n        case 0x15:\n          return true;\n        case 0x16:\n          return null;\n        case 0x17:\n          return;\n        // undefined\n        case 0x1f:\n        default:\n          let packedValue = (packedValues || getPackedValues())[token];\n          if (packedValue !== undefined) {\n            return packedValue;\n          }\n          throw new Error(\"Unknown token \" + token);\n      }\n    default:\n      // negative int\n      if (isNaN(token)) {\n        let error = new Error(\"Unexpected end of CBOR data\");\n        error.incomplete = true;\n        throw error;\n      }\n      throw new Error(\"Unknown CBOR token \" + token);\n  }\n}\nconst validName = /^[a-zA-Z_$][a-zA-Z\\d_$]*$/;\nfunction createStructureReader(structure) {\n  function readObject() {\n    // get the array size from the header\n    let length = src[position++];\n    //let majorType = token >> 5\n    length = length & 0x1f;\n    if (length > 0x17) {\n      switch (length) {\n        case 0x18:\n          length = src[position++];\n          break;\n        case 0x19:\n          length = dataView.getUint16(position);\n          position += 2;\n          break;\n        case 0x1a:\n          length = dataView.getUint32(position);\n          position += 4;\n          break;\n        default:\n          throw new Error(\"Expected array header, but got \" + src[position - 1]);\n      }\n    }\n    // This initial function is quick to instantiate, but runs slower. After several iterations pay the cost to build the faster function\n    let compiledReader = this.compiledReader; // first look to see if we have the fast compiled function\n    while (compiledReader) {\n      // we have a fast compiled object literal reader\n      if (compiledReader.propertyCount === length) {\n        return compiledReader(read);\n      } // with the right length, so we use it\n      compiledReader = compiledReader.next; // see if there is another reader with the right length\n    }\n\n    if (this.slowReads++ >= 3) {\n      // create a fast compiled reader\n      let array = this.length == length ? this : this.slice(0, length);\n      compiledReader = currentDecoder.keyMap ? new Function(\"r\", \"return {\" + array.map(k => currentDecoder.decodeKey(k)).map(k => validName.test(k) ? safeKey(k) + \":r()\" : \"[\" + JSON.stringify(k) + \"]:r()\").join(\",\") + \"}\") : new Function(\"r\", \"return {\" + array.map(key => validName.test(key) ? safeKey(key) + \":r()\" : \"[\" + JSON.stringify(key) + \"]:r()\").join(\",\") + \"}\");\n      if (this.compiledReader) {\n        compiledReader.next = this.compiledReader;\n      } // if there is an existing one, we store multiple readers as a linked list because it is usually pretty rare to have multiple readers (of different length) for the same structure\n      compiledReader.propertyCount = length;\n      this.compiledReader = compiledReader;\n      return compiledReader(read);\n    }\n    let object = {};\n    if (currentDecoder.keyMap) {\n      for (let i = 0; i < length; i++) {\n        object[safeKey(currentDecoder.decodeKey(this[i]))] = read();\n      }\n    } else {\n      for (let i = 0; i < length; i++) {\n        object[safeKey(this[i])] = read();\n      }\n    }\n    return object;\n  }\n  structure.slowReads = 0;\n  return readObject;\n}\nfunction safeKey(key) {\n  return key === \"__proto__\" ? \"__proto_\" : key;\n}\nlet readFixedString = readStringJS;\nfunction readStringJS(length) {\n  let result;\n  if (length < 16) {\n    if (result = shortStringInJS(length)) {\n      return result;\n    }\n  }\n  if (length > 64 && decoder) {\n    return decoder.decode(src.subarray(position, position += length));\n  }\n  const end = position + length;\n  const units = [];\n  result = \"\";\n  while (position < end) {\n    const byte1 = src[position++];\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = src[position++] & 0x3f;\n      units.push((byte1 & 0x1f) << 6 | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = src[position++] & 0x3f;\n      const byte3 = src[position++] & 0x3f;\n      units.push((byte1 & 0x1f) << 12 | byte2 << 6 | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = src[position++] & 0x3f;\n      const byte3 = src[position++] & 0x3f;\n      const byte4 = src[position++] & 0x3f;\n      let unit = (byte1 & 0x07) << 0x12 | byte2 << 0x0c | byte3 << 0x06 | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(unit >>> 10 & 0x3ff | 0xd800);\n        unit = 0xdc00 | unit & 0x3ff;\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n    if (units.length >= 0x1000) {\n      result += fromCharCode.apply(String, units);\n      units.length = 0;\n    }\n  }\n  if (units.length > 0) {\n    result += fromCharCode.apply(String, units);\n  }\n  return result;\n}\nlet fromCharCode = String.fromCharCode;\nfunction longStringInJS(length) {\n  let start = position;\n  let bytes = new Array(length);\n  for (let i = 0; i < length; i++) {\n    const byte = src[position++];\n    if ((byte & 0x80) > 0) {\n      position = start;\n      return;\n    }\n    bytes[i] = byte;\n  }\n  return fromCharCode.apply(String, bytes);\n}\nfunction shortStringInJS(length) {\n  if (length < 4) {\n    if (length < 2) {\n      if (length === 0) {\n        return \"\";\n      } else {\n        let a = src[position++];\n        if ((a & 0x80) > 1) {\n          position -= 1;\n          return;\n        }\n        return fromCharCode(a);\n      }\n    } else {\n      let a = src[position++];\n      let b = src[position++];\n      if ((a & 0x80) > 0 || (b & 0x80) > 0) {\n        position -= 2;\n        return;\n      }\n      if (length < 3) {\n        return fromCharCode(a, b);\n      }\n      let c = src[position++];\n      if ((c & 0x80) > 0) {\n        position -= 3;\n        return;\n      }\n      return fromCharCode(a, b, c);\n    }\n  } else {\n    let a = src[position++];\n    let b = src[position++];\n    let c = src[position++];\n    let d = src[position++];\n    if ((a & 0x80) > 0 || (b & 0x80) > 0 || (c & 0x80) > 0 || (d & 0x80) > 0) {\n      position -= 4;\n      return;\n    }\n    if (length < 6) {\n      if (length === 4) {\n        return fromCharCode(a, b, c, d);\n      } else {\n        let e = src[position++];\n        if ((e & 0x80) > 0) {\n          position -= 5;\n          return;\n        }\n        return fromCharCode(a, b, c, d, e);\n      }\n    } else if (length < 8) {\n      let e = src[position++];\n      let f = src[position++];\n      if ((e & 0x80) > 0 || (f & 0x80) > 0) {\n        position -= 6;\n        return;\n      }\n      if (length < 7) {\n        return fromCharCode(a, b, c, d, e, f);\n      }\n      let g = src[position++];\n      if ((g & 0x80) > 0) {\n        position -= 7;\n        return;\n      }\n      return fromCharCode(a, b, c, d, e, f, g);\n    } else {\n      let e = src[position++];\n      let f = src[position++];\n      let g = src[position++];\n      let h = src[position++];\n      if ((e & 0x80) > 0 || (f & 0x80) > 0 || (g & 0x80) > 0 || (h & 0x80) > 0) {\n        position -= 8;\n        return;\n      }\n      if (length < 10) {\n        if (length === 8) {\n          return fromCharCode(a, b, c, d, e, f, g, h);\n        } else {\n          let i = src[position++];\n          if ((i & 0x80) > 0) {\n            position -= 9;\n            return;\n          }\n          return fromCharCode(a, b, c, d, e, f, g, h, i);\n        }\n      } else if (length < 12) {\n        let i = src[position++];\n        let j = src[position++];\n        if ((i & 0x80) > 0 || (j & 0x80) > 0) {\n          position -= 10;\n          return;\n        }\n        if (length < 11) {\n          return fromCharCode(a, b, c, d, e, f, g, h, i, j);\n        }\n        let k = src[position++];\n        if ((k & 0x80) > 0) {\n          position -= 11;\n          return;\n        }\n        return fromCharCode(a, b, c, d, e, f, g, h, i, j, k);\n      } else {\n        let i = src[position++];\n        let j = src[position++];\n        let k = src[position++];\n        let l = src[position++];\n        if ((i & 0x80) > 0 || (j & 0x80) > 0 || (k & 0x80) > 0 || (l & 0x80) > 0) {\n          position -= 12;\n          return;\n        }\n        if (length < 14) {\n          if (length === 12) {\n            return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l);\n          } else {\n            let m = src[position++];\n            if ((m & 0x80) > 0) {\n              position -= 13;\n              return;\n            }\n            return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m);\n          }\n        } else {\n          let m = src[position++];\n          let n = src[position++];\n          if ((m & 0x80) > 0 || (n & 0x80) > 0) {\n            position -= 14;\n            return;\n          }\n          if (length < 15) {\n            return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n);\n          }\n          let o = src[position++];\n          if ((o & 0x80) > 0) {\n            position -= 15;\n            return;\n          }\n          return fromCharCode(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);\n        }\n      }\n    }\n  }\n}\nfunction readBin(length) {\n  return currentDecoder.copyBuffers ?\n  // specifically use the copying slice (not the node one)\n  Uint8Array.prototype.slice.call(src, position, position += length) : src.subarray(position, position += length);\n}\nlet f32Array = new Float32Array(1);\nlet u8Array = new Uint8Array(f32Array.buffer, 0, 4);\nfunction getFloat16() {\n  let byte0 = src[position++];\n  let byte1 = src[position++];\n  let exponent = (byte0 & 0x7f) >> 2;\n  if (exponent === 0x1f) {\n    // specials\n    if (byte1 || byte0 & 3) {\n      return NaN;\n    }\n    return byte0 & 0x80 ? -Infinity : Infinity;\n  }\n  if (exponent === 0) {\n    // sub-normals\n    // significand with 10 fractional bits and divided by 2^14\n    let abs = ((byte0 & 3) << 8 | byte1) / (1 << 24);\n    return byte0 & 0x80 ? -abs : abs;\n  }\n  u8Array[3] = byte0 & 0x80 |\n  // sign bit\n  (exponent >> 1) + 56; // 4 of 5 of the exponent bits, re-offset-ed\n  u8Array[2] = (byte0 & 7) << 5 |\n  // last exponent bit and first two mantissa bits\n  byte1 >> 3; // next 5 bits of mantissa\n  u8Array[1] = byte1 << 5; // last three bits of mantissa\n  u8Array[0] = 0;\n  return f32Array[0];\n}\nclass Tag {\n  constructor(value, tag) {\n    this.value = value;\n    this.tag = tag;\n  }\n}\ncurrentExtensions[0] = dateString => {\n  // string date extension\n  return new Date(dateString);\n};\ncurrentExtensions[1] = epochSec => {\n  // numeric date extension\n  return new Date(Math.round(epochSec * 1000));\n};\ncurrentExtensions[2] = buffer => {\n  // bigint extension\n  let value = BigInt(0);\n  for (let i = 0, l = buffer.byteLength; i < l; i++) {\n    value = BigInt(buffer[i]) + value << BigInt(8);\n  }\n  return value;\n};\ncurrentExtensions[3] = buffer => {\n  // negative bigint extension\n  return BigInt(-1) - currentExtensions[2](buffer);\n};\ncurrentExtensions[4] = fraction => {\n  // best to reparse to maintain accuracy\n  return Number(fraction[1] + \"e\" + fraction[0]);\n};\ncurrentExtensions[5] = fraction => {\n  // probably not sufficiently accurate\n  return fraction[1] * Math.exp(fraction[0] * Math.log(2));\n};\n\n// the registration of the record definition extension\nconst recordDefinition = definition => {\n  let id = definition[0] - 0xe000;\n  let structure = definition[1];\n  let existingStructure = currentStructures[id];\n  if (existingStructure && existingStructure.isShared) {\n    (currentStructures.restoreStructures || (currentStructures.restoreStructures = []))[id] = existingStructure;\n  }\n  currentStructures[id] = structure;\n  structure.read = createStructureReader(structure);\n  let object = {};\n  if (currentDecoder.keyMap) {\n    for (let i = 2, l = definition.length; i < l; i++) {\n      let key = currentDecoder.decodeKey(structure[i - 2]);\n      object[safeKey(key)] = definition[i];\n    }\n  } else {\n    for (let i = 2, l = definition.length; i < l; i++) {\n      let key = structure[i - 2];\n      object[safeKey(key)] = definition[i];\n    }\n  }\n  return object;\n};\ncurrentExtensions[LEGACY_RECORD_INLINE_ID] = recordDefinition;\ncurrentExtensions[14] = value => {\n  if (bundledStrings) {\n    return bundledStrings[0].slice(bundledStrings.position0, bundledStrings.position0 += value);\n  }\n  return new Tag(value, 14);\n};\ncurrentExtensions[15] = value => {\n  if (bundledStrings) {\n    return bundledStrings[1].slice(bundledStrings.position1, bundledStrings.position1 += value);\n  }\n  return new Tag(value, 15);\n};\nlet glbl = {\n  Error,\n  RegExp\n};\ncurrentExtensions[27] = data => {\n  // http://cbor.schmorp.de/generic-object\n  return (glbl[data[0]] || Error)(data[1], data[2]);\n};\nconst packedTable = _read => {\n  if (src[position++] != 0x84) {\n    throw new Error(\"Packed values structure must be followed by a 4 element array\");\n  }\n  let newPackedValues = _read(); // packed values\n  packedValues = packedValues ? newPackedValues.concat(packedValues.slice(newPackedValues.length)) : newPackedValues;\n  packedValues.prefixes = _read();\n  packedValues.suffixes = _read();\n  return _read(); // read the rump\n};\n\npackedTable.handlesRead = true;\ncurrentExtensions[51] = packedTable;\ncurrentExtensions[PACKED_REFERENCE_TAG_ID] = data => {\n  // packed reference\n  if (!packedValues) {\n    if (currentDecoder.getShared) {\n      loadShared();\n    } else {\n      return new Tag(data, PACKED_REFERENCE_TAG_ID);\n    }\n  }\n  if (typeof data === \"number\") {\n    return packedValues[16 + (data >= 0 ? 2 * data : -2 * data - 1)];\n  }\n  throw new Error(\"No support for non-integer packed references yet\");\n};\ncurrentExtensions[25] = id => {\n  return stringRefs[id];\n};\ncurrentExtensions[256] = _read => {\n  stringRefs = [];\n  try {\n    return _read();\n  } finally {\n    stringRefs = null;\n  }\n};\ncurrentExtensions[256].handlesRead = true;\ncurrentExtensions[28] = _read => {\n  // shareable http://cbor.schmorp.de/value-sharing (for structured clones)\n  if (!referenceMap) {\n    referenceMap = new Map();\n    referenceMap.id = 0;\n  }\n  let id = referenceMap.id++;\n  let token = src[position];\n  let target;\n  // TODO: handle Maps, Sets, and other types that can cycle; this is complicated, because you potentially need to read\n  // ahead past references to record structure definitions\n  if (token >> 5 == 4) {\n    target = [];\n  } else {\n    target = {};\n  }\n  let refEntry = {\n    target\n  }; // a placeholder object\n  referenceMap.set(id, refEntry);\n  let targetProperties = _read(); // read the next value as the target object to id\n  if (refEntry.used) {\n    // there is a cycle, so we have to assign properties to original target\n    return Object.assign(target, targetProperties);\n  }\n  refEntry.target = targetProperties; // the placeholder wasn't used, replace with the deserialized one\n  return targetProperties; // no cycle, can just use the returned read object\n};\n\ncurrentExtensions[28].handlesRead = true;\ncurrentExtensions[29] = id => {\n  // sharedref http://cbor.schmorp.de/value-sharing (for structured clones)\n  let refEntry = referenceMap.get(id);\n  refEntry.used = true;\n  return refEntry.target;\n};\ncurrentExtensions[258] = array => new Set(array); // https://github.com/input-output-hk/cbor-sets-spec/blob/master/CBOR_SETS.md\n(currentExtensions[259] = _read => {\n  // https://github.com/shanewholloway/js-cbor-codec/blob/master/docs/CBOR-259-spec\n  // for decoding as a standard Map\n  if (currentDecoder.mapsAsObjects) {\n    currentDecoder.mapsAsObjects = false;\n    restoreMapsAsObject = true;\n  }\n  return _read();\n}).handlesRead = true;\nfunction combine(a, b) {\n  if (typeof a === \"string\") {\n    return a + b;\n  }\n  if (a instanceof Array) {\n    return a.concat(b);\n  }\n  return Object.assign({}, a, b);\n}\nfunction getPackedValues() {\n  if (!packedValues) {\n    if (currentDecoder.getShared) {\n      loadShared();\n    } else {\n      throw new Error(\"No packed values available\");\n    }\n  }\n  return packedValues;\n}\nconst SHARED_DATA_TAG_ID = 0x53687264; // ascii 'Shrd'\ncurrentExtensionRanges.push((tag, input) => {\n  if (tag >= 225 && tag <= 255) {\n    return combine(getPackedValues().prefixes[tag - 224], input);\n  }\n  if (tag >= 28704 && tag <= 32767) {\n    return combine(getPackedValues().prefixes[tag - 28672], input);\n  }\n  if (tag >= 1879052288 && tag <= 2147483647) {\n    return combine(getPackedValues().prefixes[tag - 1879048192], input);\n  }\n  if (tag >= 216 && tag <= 223) {\n    return combine(input, getPackedValues().suffixes[tag - 216]);\n  }\n  if (tag >= 27647 && tag <= 28671) {\n    return combine(input, getPackedValues().suffixes[tag - 27639]);\n  }\n  if (tag >= 1811940352 && tag <= 1879048191) {\n    return combine(input, getPackedValues().suffixes[tag - 1811939328]);\n  }\n  if (tag == SHARED_DATA_TAG_ID) {\n    // we do a special check for this so that we can keep the currentExtensions as densely stored array (v8 stores arrays densely under about 3000 elements)\n    return {\n      packedValues: packedValues,\n      structures: currentStructures.slice(0),\n      version: input\n    };\n  }\n  if (tag == 55799) {\n    // self-descriptive CBOR tag, just return input value\n    return input;\n  }\n});\nconst isLittleEndianMachine = new Uint8Array(new Uint16Array([1]).buffer)[0] == 1;\nconst typedArrays = [Uint8Array];\nconst typedArrayTags = [64];\nfor (let i = 0; i < typedArrays.length; i++) {\n  registerTypedArray(typedArrays[i], typedArrayTags[i]);\n}\nfunction registerTypedArray(TypedArray, tag) {\n  let dvMethod = \"get\" + TypedArray.name.slice(0, -5);\n  if (typeof TypedArray !== \"function\") {\n    TypedArray = null;\n  }\n  let bytesPerElement = TypedArray.BYTES_PER_ELEMENT;\n  for (let littleEndian = 0; littleEndian < 2; littleEndian++) {\n    if (!littleEndian && bytesPerElement == 1) {\n      continue;\n    }\n    let sizeShift = bytesPerElement == 2 ? 1 : bytesPerElement == 4 ? 2 : 3;\n    currentExtensions[littleEndian ? tag : tag - 4] = bytesPerElement == 1 || littleEndian == isLittleEndianMachine ? buffer => {\n      if (!TypedArray) {\n        throw new Error(\"Could not find typed array for code \" + tag);\n      }\n      // we have to always slice/copy here to get a new ArrayBuffer that is word/byte aligned\n      return new TypedArray(Uint8Array.prototype.slice.call(buffer, 0).buffer);\n    } : buffer => {\n      if (!TypedArray) {\n        throw new Error(\"Could not find typed array for code \" + tag);\n      }\n      let dv = new DataView(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n      let elements = buffer.length >> sizeShift;\n      let ta = new TypedArray(elements);\n      let method = dv[dvMethod];\n      for (let i = 0; i < elements; i++) {\n        ta[i] = method.call(dv, i << sizeShift, littleEndian);\n      }\n      return ta;\n    };\n  }\n}\nfunction readBundleExt() {\n  let length = readJustLength();\n  let bundlePosition = position + read();\n  for (let i = 2; i < length; i++) {\n    // skip past bundles that were already read\n    let bundleLength = readJustLength(); // this will increment position, so must add to position afterwards\n    position += bundleLength;\n  }\n  let dataPosition = position;\n  position = bundlePosition;\n  bundledStrings = [readStringJS(readJustLength()), readStringJS(readJustLength())];\n  bundledStrings.position0 = 0;\n  bundledStrings.position1 = 0;\n  bundledStrings.postBundlePosition = position;\n  position = dataPosition;\n  return read();\n}\nfunction readJustLength() {\n  let token = src[position++] & 0x1f;\n  if (token > 0x17) {\n    switch (token) {\n      case 0x18:\n        token = src[position++];\n        break;\n      case 0x19:\n        token = dataView.getUint16(position);\n        position += 2;\n        break;\n      case 0x1a:\n        token = dataView.getUint32(position);\n        position += 4;\n        break;\n    }\n  }\n  return token;\n}\nfunction loadShared() {\n  if (currentDecoder.getShared) {\n    let sharedData = saveState(() => {\n      // save the state in case getShared modifies our buffer\n      src = null;\n      return currentDecoder.getShared();\n    }) || {};\n    let updatedStructures = sharedData.structures || [];\n    currentDecoder.sharedVersion = sharedData.version;\n    packedValues = currentDecoder.sharedValues = sharedData.packedValues;\n    if (currentStructures === true) {\n      currentDecoder.structures = currentStructures = updatedStructures;\n    } else {\n      currentStructures.splice.apply(currentStructures, [0, updatedStructures.length].concat(updatedStructures));\n    }\n  }\n}\nfunction saveState(callback) {\n  let savedSrcEnd = srcEnd;\n  let savedPosition = position;\n  let savedSrcStringStart = srcStringStart;\n  let savedSrcStringEnd = srcStringEnd;\n  let savedSrcString = srcString;\n  let savedReferenceMap = referenceMap;\n  let savedBundledStrings = bundledStrings;\n\n  // TODO: We may need to revisit this if we do more external calls to user code (since it could be slow)\n  let savedSrc = new Uint8Array(src.slice(0, srcEnd)); // we copy the data in case it changes while external data is processed\n  let savedStructures = currentStructures;\n  let savedDecoder = currentDecoder;\n  let savedSequentialMode = sequentialMode;\n  let value = callback();\n  srcEnd = savedSrcEnd;\n  position = savedPosition;\n  srcStringStart = savedSrcStringStart;\n  srcStringEnd = savedSrcStringEnd;\n  srcString = savedSrcString;\n  referenceMap = savedReferenceMap;\n  bundledStrings = savedBundledStrings;\n  src = savedSrc;\n  sequentialMode = savedSequentialMode;\n  currentStructures = savedStructures;\n  currentDecoder = savedDecoder;\n  dataView = new DataView(src.buffer, src.byteOffset, src.byteLength);\n  return value;\n}\nfunction clearSource() {\n  src = null;\n  referenceMap = null;\n  currentStructures = null;\n}\nconst mult10 = new Array(147); // this is a table matching binary exponents to the multiplier to determine significant digit rounding\nfor (let i = 0; i < 256; i++) {\n  mult10[i] = Number(\"1e\" + Math.floor(45.15 - i * 0.30103));\n}\nconst defaultDecoder = new Decoder({\n  useRecords: false\n});\nconst decode = defaultDecoder.decode;\n\n/**\n * @internal\n * @param abi\n * @param feature\n */\nfunction matchesAbiInterface(abi, feature) {\n  // returns true if all the functions in `interfaceToMatch` are found in `contract` (removing any duplicates)\n  return hasMatchingAbi(abi, feature.abis);\n}\n\n/**\n * @internal\n * @param contractWrapper\n * @param abi\n * @returns\n */\nfunction matchesPrebuiltAbi(contractWrapper, abi) {\n  return hasMatchingAbi(contractWrapper.abi, [abi]);\n}\n\n/**\n * @internal\n * @param contractAbi\n * @param featureAbis\n * @returns\n */\nfunction hasMatchingAbi(contractAbi, featureAbis) {\n  const contractFn = extractFunctionsFromAbi(contractAbi);\n  const interfaceFn = featureAbis.flatMap(i => extractFunctionsFromAbi(i));\n  // match every function and their arguments\n  const intersection = contractFn.filter(fn => {\n    const match = interfaceFn.find(iFn => iFn.name === fn.name && iFn.inputs.length === fn.inputs.length && iFn.inputs.every((i, index) => {\n      if (i.type === \"tuple\" || i.type === \"tuple[]\") {\n        // check that all properties in the tuple are the same type\n        return i.type === fn.inputs[index].type && i.components?.every((c, cIndex) => {\n          return c.type === fn.inputs[index].components?.[cIndex]?.type;\n        });\n      }\n      return i.type === fn.inputs[index].type;\n    }));\n    return match !== undefined;\n  });\n  return intersection.length === interfaceFn.length;\n}\n\n/**\n * @internal\n */\nasync function extractConstructorParams(predeployMetadataUri, storage) {\n  const meta = await fetchPreDeployMetadata(predeployMetadataUri, storage);\n  return extractConstructorParamsFromAbi(meta.abi);\n}\n\n/**\n * @internal\n * @param predeployMetadataUri\n * @param storage\n */\nasync function extractFunctions(predeployMetadataUri, storage) {\n  const metadata = await fetchPreDeployMetadata(predeployMetadataUri, storage);\n  return extractFunctionsFromAbi(metadata.abi, metadata.metadata);\n}\n\n/**\n * @internal\n * @param name\n * @param metadata\n * @param type\n */\nfunction extractCommentFromMetadata(name, metadata, type) {\n  return metadata?.output?.userdoc?.[type]?.[Object.keys(metadata?.output?.userdoc[type] || {}).find(fn => fn.includes(name || \"unknown\")) || \"\"]?.notice || metadata?.output?.devdoc?.[type]?.[Object.keys(metadata?.output?.devdoc[type] || {}).find(fn => fn.includes(name || \"unknown\")) || \"\"]?.details;\n}\n\n/**\n *\n * @param abi\n * @returns\n * @internal\n */\nfunction extractConstructorParamsFromAbi(abi) {\n  for (const input of abi) {\n    if (input.type === \"constructor\") {\n      return input.inputs || [];\n    }\n  }\n  return [];\n}\n\n/**\n *\n * @param abi\n * @param functionName\n * @returns\n * @internal\n */\nfunction extractFunctionParamsFromAbi(abi, functionName) {\n  for (const input of abi) {\n    if (input.type === \"function\" && input.name === functionName) {\n      return input.inputs || [];\n    }\n  }\n  return [];\n}\n\n/**\n * @internal\n * @param abi\n * @param metadata\n */\nfunction extractFunctionsFromAbi(abi, metadata) {\n  const functions = (abi || []).filter(el => el.type === \"function\");\n  const parsed = [];\n  for (const f of functions) {\n    const doc = extractCommentFromMetadata(f.name, metadata, \"methods\");\n    const args = f.inputs?.map(i => `${i.name || \"key\"}: ${toJSType(i)}`)?.join(\", \") || \"\";\n    const fargs = args ? `, ${args}` : \"\";\n    const out = f.outputs?.map(o => toJSType(o, true))?.join(\", \");\n    const promise = out ? `: Promise<${out}>` : `: Promise<TransactionResult>`;\n    const signature = `contract.call(\"${f.name}\"${fargs})${promise}`;\n    parsed.push({\n      inputs: f.inputs || [],\n      outputs: f.outputs || [],\n      name: f.name || \"unknown\",\n      signature,\n      stateMutability: f.stateMutability || \"\",\n      comment: doc\n    });\n  }\n  return parsed;\n}\n\n/**\n * @internal\n * @param abi\n * @param metadata\n */\nfunction extractEventsFromAbi(abi, metadata) {\n  const events = (abi || []).filter(el => el.type === \"event\");\n  const parsed = [];\n  for (const e of events) {\n    const doc = extractCommentFromMetadata(e.name, metadata, \"events\");\n    parsed.push({\n      inputs: e.inputs || [],\n      outputs: e.outputs || [],\n      name: e.name || \"unknown\",\n      comment: doc\n    });\n  }\n  return parsed;\n}\nfunction toJSType(contractType) {\n  let isReturnType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  let withName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  let jsType = contractType.type;\n  let isArray = false;\n  if (jsType.endsWith(\"[]\")) {\n    isArray = true;\n    jsType = jsType.slice(0, -2);\n  }\n  if (jsType.startsWith(\"bytes\")) {\n    jsType = \"BytesLike\";\n  }\n  if (jsType.startsWith(\"uint\") || jsType.startsWith(\"int\")) {\n    jsType = isReturnType ? \"BigNumber\" : \"BigNumberish\";\n  }\n  if (jsType.startsWith(\"bool\")) {\n    jsType = \"boolean\";\n  }\n  if (jsType === \"address\") {\n    jsType = \"string\";\n  }\n  if (jsType === \"tuple\") {\n    if (contractType.components) {\n      jsType = `{ ${contractType.components.map(a => toJSType(a, false, true)).join(\", \")} }`;\n    }\n  }\n  if (isArray) {\n    jsType += \"[]\";\n  }\n  if (withName) {\n    jsType = `${contractType.name}: ${jsType}`;\n  }\n  return jsType;\n}\n\n/**\n * @internal\n * @param bytecode\n */\nfunction extractMinimalProxyImplementationAddress(bytecode) {\n  // EIP-1167 clone minimal proxy - https://eips.ethereum.org/EIPS/eip-1167\n  if (bytecode.startsWith(\"0x363d3d373d3d3d363d73\")) {\n    const implementationAddress = bytecode.slice(22, 62);\n    return `0x${implementationAddress}`;\n  }\n\n  // Minimal Proxy with receive() from 0xSplits - https://github.com/0xSplits/splits-contracts/blob/c7b741926ec9746182d0d1e2c4c2046102e5d337/contracts/libraries/Clones.sol\n  if (bytecode.startsWith(\"0x36603057343d5230\")) {\n    // +40 = size of addr\n    const implementationAddress = bytecode.slice(122, 122 + 40);\n    return `0x${implementationAddress}`;\n  }\n\n  // 0age's minimal proxy - https://medium.com/coinmonks/the-more-minimal-proxy-5756ae08ee48\n  if (bytecode.startsWith(\"0x3d3d3d3d363d3d37363d73\")) {\n    // +40 = size of addr\n    const implementationAddress = bytecode.slice(24, 24 + 40);\n    return `0x${implementationAddress}`;\n  }\n\n  // vyper's minimal proxy (uniswap v1) - https://etherscan.io/address/0x09cabec1ead1c0ba254b09efb3ee13841712be14#code\n  if (bytecode.startsWith(\"0x366000600037611000600036600073\")) {\n    const implementationAddress = bytecode.slice(32, 32 + 40);\n    return `0x${implementationAddress}`;\n  }\n  return undefined;\n}\n\n/**\n * @internal\n * @param address\n * @param provider\n */\nasync function resolveContractUriFromAddress(address, provider) {\n  const bytecode = await provider.getCode(address);\n  if (bytecode === \"0x\") {\n    const chain = await provider.getNetwork();\n    throw new Error(`Contract at ${address} does not exist on chain '${chain.name}' (chainId: ${chain.chainId})`);\n  }\n  try {\n    const implementationAddress = extractMinimalProxyImplementationAddress(bytecode);\n    if (implementationAddress) {\n      return await resolveContractUriFromAddress(implementationAddress, provider);\n    }\n  } catch (e) {\n    // ignore\n  }\n\n  // EIP-1967 proxy storage slots - https://eips.ethereum.org/EIPS/eip-1967\n  try {\n    const proxyStorage = await provider.getStorageAt(address, BigNumber.from(\"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\"));\n    const implementationAddress = ethers.utils.hexStripZeros(proxyStorage);\n    if (implementationAddress !== \"0x\") {\n      return await resolveContractUriFromAddress(implementationAddress, provider);\n    }\n  } catch (e) {\n    // ignore\n  }\n  // TODO support other types of proxies\n  return await extractIPFSHashFromBytecode(bytecode);\n}\n\n/**\n * @internal\n * @param bytecode\n */\nfunction extractIPFSHashFromBytecode(bytecode) {\n  const numericBytecode = hexToBytes(bytecode);\n  const cborLength = numericBytecode[numericBytecode.length - 2] * 0x100 + numericBytecode[numericBytecode.length - 1];\n  const bytecodeBuffer = Uint8Array.from(numericBytecode.slice(numericBytecode.length - 2 - cborLength, -2));\n  const cborData = decode(bytecodeBuffer);\n  if (\"ipfs\" in cborData && cborData[\"ipfs\"]) {\n    try {\n      return `ipfs://${bs58.encode(cborData[\"ipfs\"])}`;\n    } catch (e) {\n      console.warn(\"feature-detection ipfs cbor failed\", e);\n    }\n  }\n  return undefined;\n}\n\n/**\n * @internal\n * @param hex\n */\nfunction hexToBytes(hex) {\n  hex = hex.toString(16);\n  if (!hex.startsWith(\"0x\")) {\n    hex = `0x${hex}`;\n  }\n  if (!isHexStrict(hex)) {\n    throw new Error(`Given value \"${hex}\" is not a valid hex string.`);\n  }\n  hex = hex.replace(/^0x/i, \"\");\n  const bytes = [];\n  for (let c = 0; c < hex.length; c += 2) {\n    bytes.push(parseInt(hex.slice(c, c + 2), 16));\n  }\n  return bytes;\n}\n\n/**\n * @internal\n * @param hex\n */\nfunction isHexStrict(hex) {\n  return (typeof hex === \"string\" || typeof hex === \"number\") && /^(-)?0x[0-9a-f]*$/i.test(hex.toString());\n}\n\n/**\n * @internal\n * @param address\n * @param provider\n * @param storage\n */\nasync function fetchContractMetadataFromAddress(address, provider, storage) {\n  const compilerMetadataUri = await resolveContractUriFromAddress(address, provider);\n  if (!compilerMetadataUri) {\n    throw new Error(`Could not resolve metadata for contract at ${address}`);\n  }\n  return await fetchContractMetadata(compilerMetadataUri, storage);\n}\n\n/**\n * @internal\n * @param compilerMetadataUri\n * @param storage\n */\nasync function fetchContractMetadata(compilerMetadataUri, storage) {\n  const metadata = await storage.downloadJSON(compilerMetadataUri);\n  if (!metadata || !metadata.output) {\n    throw new Error(`Could not resolve metadata for contract at ${compilerMetadataUri}`);\n  }\n  const abi = AbiSchema.parse(metadata.output.abi);\n  const compilationTarget = metadata.settings.compilationTarget;\n  const targets = Object.keys(compilationTarget);\n  const name = compilationTarget[targets[0]];\n  const info = ContractInfoSchema.parse({\n    title: metadata.output.devdoc.title,\n    author: metadata.output.devdoc.author,\n    details: metadata.output.devdoc.detail,\n    notice: metadata.output.userdoc.notice\n  });\n  const licenses = [...new Set(Object.entries(metadata.sources).map(_ref => {\n    let [, src] = _ref;\n    return src.license;\n  }))];\n  return {\n    name,\n    abi,\n    metadata,\n    info,\n    licenses\n  };\n}\n\n/**\n * @internal\n * @param publishedMetadata\n * @param storage\n */\nasync function fetchSourceFilesFromMetadata(publishedMetadata, storage) {\n  return await Promise.all(Object.entries(publishedMetadata.metadata.sources).map(async _ref2 => {\n    let [path, info] = _ref2;\n    const urls = info.urls;\n    const ipfsLink = urls ? urls.find(url => url.includes(\"ipfs\")) : undefined;\n    if (ipfsLink) {\n      const ipfsHash = ipfsLink.split(\"ipfs/\")[1];\n      // 5 sec timeout for sources that haven't been uploaded to ipfs\n      const timeout = new Promise((_r, rej) => setTimeout(() => rej(\"timeout\"), 5000));\n      const source = await Promise.race([(await storage.download(`ipfs://${ipfsHash}`)).text(), timeout]);\n      return {\n        filename: path,\n        source\n      };\n    } else {\n      return {\n        filename: path,\n        source: info.content || \"Could not find source for this contract\"\n      };\n    }\n  }));\n}\n\n/**\n * @internal\n * @param publishMetadataUri\n * @param storage\n */\nasync function fetchRawPredeployMetadata(publishMetadataUri, storage) {\n  return PreDeployMetadata.parse(JSON.parse(await (await storage.download(publishMetadataUri)).text()));\n}\n\n/**\n * Fetch the metadata coming from CLI, this is before deploying or releasing the contract.\n * @internal\n * @param publishMetadataUri\n * @param storage\n */\nasync function fetchPreDeployMetadata(publishMetadataUri, storage) {\n  const rawMeta = await fetchRawPredeployMetadata(publishMetadataUri, storage);\n  const deployBytecode = await (await storage.download(rawMeta.bytecodeUri)).text();\n  const parsedMeta = await fetchContractMetadata(rawMeta.metadataUri, storage);\n  return PreDeployMetadataFetchedSchema.parse({\n    ...rawMeta,\n    ...parsedMeta,\n    bytecode: deployBytecode\n  });\n}\n\n/**\n * Fetch and parse the full metadata AFTER creating a release, with all the extra information (version, readme, etc)\n * @internal\n * @param publishMetadataUri\n * @param storage\n */\nasync function fetchExtendedReleaseMetadata(publishMetadataUri, storage) {\n  const meta = await (await storage.download(publishMetadataUri)).text();\n  return FullPublishMetadataSchemaOutput.parse(JSON.parse(meta));\n}\n\n/**\n * Processes ALL supported features and sets whether the passed in abi supports each individual feature\n * @internal\n * @param abi\n * @param features\n * @returns the nested struct of all features and whether they're detected in the abi\n */\nfunction detectFeatures(abi) {\n  let features = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SUPPORTED_FEATURES;\n  const results = {};\n  for (const featureKey in features) {\n    const feature = features[featureKey];\n    const enabled = matchesAbiInterface(abi, feature);\n    const childResults = detectFeatures(abi, feature.features);\n    results[featureKey] = {\n      ...feature,\n      features: childResults,\n      enabled\n    };\n  }\n  return results;\n}\nfunction extractFeatures(input, enabledExtensions) {\n  if (!input) {\n    return;\n  }\n  for (const extensionKey in input) {\n    const extension = input[extensionKey];\n    // if extension is enabled, then add it to enabledFeatures\n    if (extension.enabled) {\n      enabledExtensions.push(extension);\n    }\n    // recurse\n    extractFeatures(extension.features, enabledExtensions);\n  }\n}\n\n/**\n * Return all the detected features in the abi\n * @param abi - parsed array of abi entries\n * @returns array of all detected extensions with full information on each feature\n * @public\n */\nfunction getAllDetectedFeatures(abi) {\n  const features = [];\n  extractFeatures(detectFeatures(abi), features);\n  return features;\n}\n\n/**\n * Return all the detected features names in the abi\n * @param abi - parsed array of abi entries\n * @returns array of all detected features names\n * @public\n */\nfunction getAllDetectedFeatureNames(abi) {\n  const features = [];\n  extractFeatures(detectFeatures(abi), features);\n  return features.map(f => f.name);\n}\n\n/**\n * Checks whether the given ABI supports a given feature\n * @internal\n * @param abi\n * @param featureName\n */\nfunction isFeatureEnabled(abi, featureName) {\n  const features = detectFeatures(abi);\n  return _featureEnabled(features, featureName);\n}\n\n/**\n * Checks whether the given DetectableFeature is defined\n * @internal\n * @param namespace The namespace to check\n * @param feature The corresponding feature\n */\nfunction assertEnabled(namespace, feature) {\n  if (!namespace) {\n    throw new ExtensionNotImplementedError(feature);\n  }\n  return namespace;\n}\n\n/**\n * Type guard for contractWrappers depending on passed feature name\n * @internal\n * @param contractWrapper\n * @param featureName\n */\nfunction detectContractFeature(contractWrapper, featureName) {\n  return isFeatureEnabled(AbiSchema.parse(contractWrapper.abi), featureName);\n}\n\n/**\n * Searches the feature map for featureName and returns whether its enabled\n * @internal\n * @param features\n * @param featureName\n */\nfunction _featureEnabled(features, featureName) {\n  const keys = Object.keys(features);\n  if (!keys.includes(featureName)) {\n    let found = false;\n    for (const key of keys) {\n      const f = features[key];\n      found = _featureEnabled(f.features, featureName);\n      if (found) {\n        break;\n      }\n    }\n    return found;\n  }\n  const feature = features[featureName];\n  return feature.enabled;\n}\n\n/**\n * @internal\n * @param contractWrapper\n * @param functionName\n */\nfunction hasFunction(functionName, contractWrapper) {\n  return functionName in contractWrapper.readContract.functions;\n}\n\nconst MAX_LENGTH = 256;\nconst NUMERIC_IDENTIFIER = \"0|[1-9]\\\\d*\";\nconst MAIN_VERSION_IDENTIFIER = `(${NUMERIC_IDENTIFIER})\\\\.(${NUMERIC_IDENTIFIER})\\\\.(${NUMERIC_IDENTIFIER})`;\nconst REGEX_MAIN_VERSION = new RegExp(MAIN_VERSION_IDENTIFIER);\n\n/**\n * @internal\n */\n\n/**\n * @internal\n * @param version\n */\nfunction toSemver(version) {\n  if (version.length > MAX_LENGTH) {\n    throw new Error(`version is longer than ${MAX_LENGTH} characters`);\n  }\n  const matches = version.trim().match(REGEX_MAIN_VERSION);\n  if (!matches || matches?.length !== 4) {\n    throw new Error(`${version} is not a valid semantic version. Should be in the format of major.minor.patch. Ex: 0.4.1`);\n  }\n  const major = Number(matches[1]);\n  const minor = Number(matches[2]);\n  const patch = Number(matches[3]);\n  const versionString = [major, minor, patch].join(\".\");\n  return {\n    major,\n    minor,\n    patch,\n    versionString\n  };\n}\n\n/**\n * @internal\n * @param current\n * @param next\n */\nfunction isIncrementalVersion(current, next) {\n  const currentSemver = toSemver(current);\n  const nextSemver = toSemver(next);\n  if (nextSemver.major > currentSemver.major) {\n    return true;\n  }\n  const eqMajor = nextSemver.major === currentSemver.major;\n  if (eqMajor && nextSemver.minor > currentSemver.minor) {\n    return true;\n  }\n  const eqMinor = nextSemver.minor === currentSemver.minor;\n  return eqMajor && eqMinor && nextSemver.patch > currentSemver.patch;\n}\nfunction isDowngradeVersion(current, next) {\n  const currentSemver = toSemver(current);\n  const nextSemver = toSemver(next);\n  if (nextSemver.major < currentSemver.major) {\n    return true;\n  }\n  const eqMajor = nextSemver.major === currentSemver.major;\n  if (eqMajor && nextSemver.minor < currentSemver.minor) {\n    return true;\n  }\n  const eqMinor = nextSemver.minor === currentSemver.minor;\n  return eqMajor && eqMinor && nextSemver.patch < currentSemver.patch;\n}\n\n/**\n * @internal\n */\nconst BYOCContractMetadataSchema = CommonContractSchema.catchall(z.union([BigNumberTransformSchema, z.unknown()]));\n\n/**\n * @internal\n */\n\n/**\n * @internal\n */\nconst CustomContractInput = BYOCContractMetadataSchema.merge(CommonRoyaltySchema.merge(MerkleSchema).merge(CommonSymbolSchema).partial());\n\n/**\n * @internal\n */\nconst CustomContractOutput = CommonContractOutputSchema.merge(CommonRoyaltySchema.merge(MerkleSchema).merge(CommonSymbolSchema).partial());\n\n/**\n * @internal\n */\nconst CustomContractDeploy = CustomContractInput.merge(CommonPlatformFeeSchema.merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema).partial());\n\n/**\n * @internal\n */\nconst CustomContractSchema = {\n  deploy: CustomContractDeploy,\n  output: CustomContractOutput,\n  input: CustomContractInput\n};\n\n/**\n * @internal\n */\nconst AbiTypeBaseSchema = z.object({\n  type: z.string(),\n  name: z.string()\n}).catchall(z.any());\n\n/**\n * @internal\n */\nconst AbiTypeSchema = AbiTypeBaseSchema.extend({\n  stateMutability: z.string().optional(),\n  components: z.array(AbiTypeBaseSchema).optional()\n}).catchall(z.any());\n\n/**\n * @internal\n */\nconst AbiObjectSchema = z.object({\n  type: z.string(),\n  name: z.string().default(\"\"),\n  inputs: z.array(AbiTypeSchema).default([]),\n  outputs: z.array(AbiTypeSchema).default([])\n}).catchall(z.any());\n\n/**\n * @internal\n */\nconst AbiSchema = z.array(AbiObjectSchema);\n/**\n * @internal\n */\nconst PreDeployMetadata = z.object({\n  name: z.string(),\n  metadataUri: z.string(),\n  bytecodeUri: z.string(),\n  analytics: z.any().optional()\n}).catchall(z.any());\n\n/**\n * @internal\n */\nconst ChainIdToAddressSchema = z.record(z.string(), z.string());\n\n/**\n * @internal\n */\nconst FactoryDeploymentSchema = z.object({\n  implementationAddresses: ChainIdToAddressSchema,\n  implementationInitializerFunction: z.string().default(\"initialize\"),\n  factoryAddresses: ChainIdToAddressSchema.optional()\n});\n\n/**\n * @internal\n */\nconst ExtraPublishMetadataSchemaInput = z.object({\n  version: z.string().refine(v => {\n    try {\n      toSemver(v);\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }, out => {\n    return {\n      message: `'${out}' is not a valid semantic version. Should be in the format of major.minor.patch. Ex: 0.4.1`\n    };\n  }),\n  displayName: z.string().optional(),\n  description: z.string().optional(),\n  readme: z.string().optional(),\n  license: z.string().optional(),\n  changelog: z.string().optional(),\n  tags: z.array(z.string()).optional(),\n  audit: FileOrBufferOrStringSchema.nullable().optional(),\n  logo: FileOrBufferOrStringSchema.nullable().optional(),\n  isDeployableViaFactory: z.boolean().optional(),\n  isDeployableViaProxy: z.boolean().optional(),\n  factoryDeploymentData: FactoryDeploymentSchema.optional(),\n  constructorParams: z.record(z.string(), z.object({\n    displayName: z.string().optional(),\n    description: z.string().optional(),\n    defaultValue: z.string().optional()\n  }).catchall(z.any())).optional()\n}).catchall(z.any());\n\n/**\n * @internal\n */\nconst ExtraPublishMetadataSchemaOutput = ExtraPublishMetadataSchemaInput.extend({\n  audit: z.string().nullable().optional(),\n  logo: z.string().nullable().optional()\n});\n/**\n * @internal\n */\nconst FullPublishMetadataSchemaInput = PreDeployMetadata.merge(ExtraPublishMetadataSchemaInput).extend({\n  publisher: AddressSchema.optional()\n});\n/**\n * @internal\n */\nconst FullPublishMetadataSchemaOutput = PreDeployMetadata.merge(ExtraPublishMetadataSchemaOutput).extend({\n  publisher: AddressSchema.optional()\n});\n/**\n * @internal\n */\nconst ProfileSchemaInput = z.object({\n  name: z.string().optional(),\n  bio: z.string().optional(),\n  avatar: FileOrBufferOrStringSchema.nullable().optional(),\n  website: z.string().optional(),\n  twitter: z.string().optional(),\n  telegram: z.string().optional(),\n  facebook: z.string().optional(),\n  github: z.string().optional(),\n  medium: z.string().optional(),\n  linkedin: z.string().optional(),\n  reddit: z.string().optional(),\n  discord: z.string().optional()\n});\nconst ProfileSchemaOutput = ProfileSchemaInput.extend({\n  avatar: z.string().nullable().optional()\n});\n/**\n * @internal\n */\nconst PublishedContractSchema = z.object({\n  id: z.string(),\n  timestamp: BigNumberishSchema,\n  metadataUri: z.string()\n});\n\n/**\n * @internal\n * Follows https://docs.soliditylang.org/en/v0.8.15/natspec-format.html\n */\nconst ContractInfoSchema = z.object({\n  title: z.string().optional(),\n  author: z.string().optional(),\n  details: z.string().optional(),\n  notice: z.string().optional()\n});\n\n/**\n * @internal\n */\nconst CompilerMetadataFetchedSchema = z.object({\n  name: z.string(),\n  abi: AbiSchema,\n  metadata: z.record(z.string(), z.any()),\n  info: ContractInfoSchema,\n  licenses: z.array(z.string().optional()).default([]).transform(v => {\n    return v.filter(license => license !== undefined);\n  })\n});\n\n/**\n * @internal\n */\nconst PreDeployMetadataFetchedSchema = PreDeployMetadata.merge(CompilerMetadataFetchedSchema).extend({\n  bytecode: z.string()\n});\n\n/**\n * Wallet Authenticator\n * @remarks The wallet authenticator enables server-side applications to securely identify the\n * connected wallet address of users on the client-side, and also enables users to authenticate\n * to any backend using just their wallet. It implements the JSON Web Token (JWT) authentication\n * standard.\n *\n * @example\n * ```javascript\n * // We specify the domain of the application to authenticate to\n * const domain = \"example.com\"\n *\n * // On the client side, we can generate a payload for the connected wallet to login\n * const loginPayload = await sdk.auth.login(domain);\n *\n * // Then on the server side, we can securely verify the connected client-side address\n * const address = sdk.auth.verify(domain, loginPayload);\n *\n * // And we can also generate an authentication token to send to the client\n * const token = sdk.auth.generate(domain, loginPayload);\n *\n * // Finally, the token can be send from the client to the server to make authenticated requests\n * // And the server can use the following function to authenticate a token and verify the associated address\n * const address = sdk.auth.authenticate(domain, token);\n * ```\n * @public\n */\nclass WalletAuthenticator extends RPCConnectionHandler {\n  constructor(network, wallet, options) {\n    super(network, options);\n    _defineProperty(this, \"wallet\", void 0);\n    this.wallet = wallet;\n  }\n\n  /**\n   * Login With Connected Wallet\n   * @remarks Client-side function that allows the connected wallet to login to a server-side application.\n   * Generates a login payload that can be sent to the server-side for verification or authentication.\n   *\n   * @param domain - The domain of the server-side application to login to\n   * @param options - Optional configuration options for the login request\n   * @returns Login payload that can be used on the server-side to verify the login request or authenticate\n   *\n   * @example\n   * ```javascript\n   * // Add the domain of the application users will login to, this will be used throughout the login process\n   * const domain = \"example.com\";\n   * // Generate a signed login payload for the connected wallet to authenticate with\n   * const loginPayload = await sdk.auth.login(domain);\n   * ```\n   */\n  async login(domain, options) {\n    const parsedOptions = LoginOptionsSchema.parse(options);\n    const signerAddress = await this.wallet.getAddress();\n    const expirationTime = parsedOptions?.expirationTime || new Date(Date.now() + 1000 * 60 * 5);\n    const payloadData = LoginPayloadDataSchema.parse({\n      domain,\n      address: signerAddress,\n      nonce: parsedOptions?.nonce,\n      expiration_time: expirationTime,\n      chain_id: parsedOptions?.chainId\n    });\n    const message = this.generateMessage(payloadData);\n    const signature = await this.wallet.sign(message);\n    return {\n      payload: payloadData,\n      signature\n    };\n  }\n\n  /**\n   * Verify Logged In Address\n   * @remarks Server-side function to securely verify the address of the logged in client-side wallet\n   * by validating the provided client-side login request.\n   *\n   * @param domain - The domain of the server-side application to verify the login request for\n   * @param payload - The login payload to verify\n   * @returns Address of the logged in wallet\n   *\n   * @example\n   * ```javascript\n   * const domain = \"example.com\";\n   * const loginPayload = await sdk.auth.login(domain);\n   *\n   * // Verify the login request\n   * const address = sdk.auth.verify(domain, loginPayload);\n   * ```\n   */\n  verify(domain, payload, options) {\n    const parsedOptions = VerifyOptionsSchema.parse(options);\n\n    // Check that the intended domain matches the domain of the payload\n    if (payload.payload.domain !== domain) {\n      throw new Error(`Expected domain '${domain}' does not match domain on payload '${payload.payload.domain}'`);\n    }\n\n    // Check that the payload hasn't expired\n    const currentTime = new Date();\n    if (currentTime > new Date(payload.payload.expiration_time)) {\n      throw new Error(`Login request has expired`);\n    }\n\n    // If chain ID is specified, check that it matches the chain ID of the signature\n    if (parsedOptions?.chainId !== undefined && parsedOptions.chainId !== payload.payload.chain_id) {\n      throw new Error(`Chain ID '${parsedOptions.chainId}' does not match payload chain ID '${payload.payload.chain_id}'`);\n    }\n\n    // Check that the signing address is the claimed wallet address\n    const message = this.generateMessage(payload.payload);\n    const userAddress = this.wallet.recoverAddress(message, payload.signature);\n    if (userAddress.toLowerCase() !== payload.payload.address.toLowerCase()) {\n      throw new Error(`Signer address '${userAddress.toLowerCase()}' does not match payload address '${payload.payload.address.toLowerCase()}'`);\n    }\n    return userAddress;\n  }\n\n  /**\n   * Generate Authentication Token\n   * @remarks Server-side function that generates a JWT token from the provided login request that the\n   * client-side wallet can use to authenticate to the server-side application.\n   *\n   * @param domain - The domain of the server-side application to authenticate to\n   * @param payload - The login payload to authenticate with\n   * @param options - Optional configuration options for the authentication request\n   * @returns A authentication token that can be used by the client to make authenticated requests\n   *\n   * @example\n   * ```javascript\n   * const domain = \"example.com\";\n   * const loginPayload = await sdk.auth.login(domain);\n   *\n   * // Generate a JWT token that can be sent to the client-side wallet and used for authentication\n   * const token = await sdk.auth.generateAuthToken(domain, loginPayload);\n   * ```\n   */\n  async generateAuthToken(domain, payload, options) {\n    if (isBrowser()) {\n      throw new Error(\"Authentication tokens should not be generated in the browser, as they must be signed by a server-side admin wallet.\");\n    }\n    const parsedOptions = AuthenticationOptionsSchema.parse(options);\n    const userAddress = this.verify(domain, payload);\n    const adminAddress = await this.wallet.getAddress();\n    const payloadData = AuthenticationPayloadDataSchema.parse({\n      iss: adminAddress,\n      sub: userAddress,\n      aud: domain,\n      nbf: parsedOptions?.invalidBefore || new Date(),\n      exp: parsedOptions?.expirationTime || new Date(Date.now() + 1000 * 60 * 60 * 5),\n      iat: new Date()\n    });\n    const message = JSON.stringify(payloadData);\n    const signature = await this.wallet.sign(message);\n\n    // Header used for JWT token specifying hash algorithm\n    const header = {\n      // Specify ECDSA with SHA-256 for hashing algorithm\n      alg: \"ES256\",\n      typ: \"JWT\"\n    };\n    const encodedHeader = Buffer.from(JSON.stringify(header)).toString(\"base64\");\n    const encodedData = Buffer.from(JSON.stringify(payloadData)).toString(\"base64\").replace(/=/g, \"\");\n    const encodedSignature = Buffer.from(signature).toString(\"base64\");\n\n    // Generate a JWT token with base64 encoded header, payload, and signature\n    const token = `${encodedHeader}.${encodedData}.${encodedSignature}`;\n    return token;\n  }\n\n  /**\n   * Authenticate With Token\n   * @remarks Server-side function that authenticates the provided JWT token. This function verifies that\n   * the provided authentication token is valid and returns the address of the authenticated wallet.\n   *\n   * @param domain - The domain of the server-side application doing authentication\n   * @param token - The authentication token being used\n   * @returns The address of the authenticated wallet\n   *\n   * @example\n   * ```javascript\n   * const domain = \"example.com\";\n   * const loginPayload = await sdk.auth.login(domain);\n   * const token = await sdk.auth.generateAuthToken(domain, loginPayload);\n   *\n   * // Authenticate the token and get the address of authenticating users wallet\n   * const address = sdk.auth.authenticate(domain, token);\n   * ```\n   */\n  async authenticate(domain, token) {\n    if (isBrowser()) {\n      throw new Error(\"Should not authenticate tokens in the browser, as they must be verified by the server-side admin wallet.\");\n    }\n    const encodedPayload = token.split(\".\")[1];\n    const encodedSignature = token.split(\".\")[2];\n    const payload = JSON.parse(Buffer.from(encodedPayload, \"base64\").toString());\n    const signature = Buffer.from(encodedSignature, \"base64\").toString();\n\n    // Check that the token audience matches the domain\n    if (payload.aud !== domain) {\n      throw new Error(`Expected token to be for the domain '${domain}', but found token with domain '${payload.aud}'`);\n    }\n\n    // Check that the token is past the invalid before time\n    const currentTime = Math.floor(new Date().getTime() / 1000);\n    if (currentTime < payload.nbf) {\n      throw new Error(`This token is invalid before epoch time '${payload.nbf}', current epoch time is '${currentTime}'`);\n    }\n\n    // Check that the token hasn't expired\n    if (currentTime > payload.exp) {\n      throw new Error(`This token expired at epoch time '${payload.exp}', current epoch time is '${currentTime}'`);\n    }\n\n    // Check that the connected wallet matches the token issuer\n    const connectedAddress = await this.wallet.getAddress();\n    if (connectedAddress.toLowerCase() !== payload.iss.toLowerCase()) {\n      throw new Error(`Expected the connected wallet address '${connectedAddress}' to match the token issuer address '${payload.iss}'`);\n    }\n\n    // Check that the connected wallet signed the token\n    const adminAddress = this.wallet.recoverAddress(JSON.stringify(payload), signature);\n    if (connectedAddress.toLowerCase() !== adminAddress.toLowerCase()) {\n      throw new Error(`The connected wallet address '${connectedAddress}' did not sign the token`);\n    }\n    return payload.sub;\n  }\n\n  /**\n   * Generates a EIP-4361 compliant message to sign based on the login payload\n   */\n  generateMessage(payload) {\n    let message = ``;\n\n    // Add the domain and login address for transparency\n    message += `${payload.domain} wants you to sign in with your account:\\n${payload.address}\\n\\n`;\n\n    // Prompt user to make sure domain is correct to prevent phishing attacks\n    message += `Make sure that the requesting domain above matches the URL of the current website.\\n\\n`;\n\n    // Add data fields in compliance with the EIP-4361 standard\n    if (payload.chain_id) {\n      message += `Chain ID: ${payload.chain_id}\\n`;\n    }\n    message += `Nonce: ${payload.nonce}\\n`;\n    message += `Expiration Time: ${payload.expiration_time}\\n`;\n    return message;\n  }\n}\n\n/**\n * Encodes and decodes Contract functions\n * @public\n */\nclass ContractEncoder {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Encodes the given contract function with argument\n   * @returns the encoded data\n   */\n  encode(fn, args) {\n    return this.contractWrapper.readContract.interface.encodeFunctionData(fn, args);\n  }\n\n  /**\n   * Decode encoded call data for a given function\n   * @param fn - the function to decode\n   * @param encodedArgs - the encoded arguments\n   */\n  decode(fn, encodedArgs) {\n    return this.contractWrapper.readContract.interface.decodeFunctionData(fn, encodedArgs);\n  }\n}\n\n/**\n * Handles metadata for a Contract\n * @remarks Read and update metadata for this contract\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const metadata = await contract.metadata.get();\n * await contract.metadata.set({\n *   name: \"My Contract\",\n *   description: \"My contract description\"\n * })\n * ```\n * @public\n */\nclass ContractMetadata {\n  constructor(contractWrapper, schema, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_METADATA.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"schema\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.schema = schema;\n    this.storage = storage;\n  }\n  /**\n   * @internal\n   */\n  parseOutputMetadata(metadata) {\n    return this.schema.output.parse(metadata);\n  }\n\n  /**\n   * @internal\n   */\n  parseInputMetadata(metadata) {\n    return this.schema.input.parse(metadata);\n  }\n  /**\n   * Get the metadata of a contract\n   * @remarks Get the metadata of a contract\n   * @example\n   * ```javascript\n   * const metadata = await contract.metadata.get();\n   * ```\n   * @public\n   * @returns the metadata of the given contract\n   * @twfeature ContractMetadata\n   */\n  async get() {\n    let data;\n    if (this.supportsContractMetadata(this.contractWrapper)) {\n      const uri = await this.contractWrapper.readContract.contractURI();\n      if (uri && uri.includes(\"://\")) {\n        data = await this.storage.downloadJSON(uri);\n      }\n    }\n    if (!data) {\n      try {\n        // try fetching metadata from bytecode and / or contract itself\n        let contractName;\n        try {\n          if (hasFunction(\"name\", this.contractWrapper)) {\n            contractName = await this.contractWrapper.readContract.name();\n          }\n        } catch (err) {\n          // no-op\n        }\n        const publishedMetadata = await fetchContractMetadataFromAddress(this.contractWrapper.readContract.address, this.contractWrapper.getProvider(), this.storage);\n        data = {\n          name: contractName || publishedMetadata.name,\n          description: publishedMetadata.info.title\n        };\n      } catch (e) {\n        throw new Error(\"Could not fetch contract metadata\");\n      }\n    }\n    return this.parseOutputMetadata(data);\n  }\n  /**\n   * Set the metadata of a contract\n   * @remarks OVERWRITE the metadata of a contract\n   * @example\n   * ```javascript\n   * await contract.metadata.set({\n   *  name: \"My Contract\",\n   *  description: \"My contract description\"\n   * })\n   * ```\n   * @public\n   * @param metadata - the metadata to set\n   * @twfeature ContractMetadata\n   */\n  async set(metadata) {\n    const uri = await this._parseAndUploadMetadata(metadata);\n    const wrapper = this.contractWrapper;\n    if (this.supportsContractMetadata(wrapper)) {\n      const receipt = await wrapper.sendTransaction(\"setContractURI\", [uri]);\n      return {\n        receipt,\n        data: this.get\n      };\n    } else {\n      throw new ExtensionNotImplementedError(FEATURE_METADATA);\n    }\n  }\n\n  /**\n   * Update the metadata of a contract\n   * @remarks Update the metadata of a contract\n   * @example\n   * ```javascript\n   * await contract.metadata.update({\n   *   name: \"My Contract\",\n   *   description: \"My contract description\"\n   * })\n   * ```\n   * @public\n   * @param metadata - the metadata to update\n   * @twfeature ContractMetadata\n   * */\n  async update(metadata) {\n    return await this.set({\n      ...(await this.get()),\n      ...metadata\n    });\n  }\n\n  /**\n   *\n   * @internal\n   * @param metadata - the metadata to set\n   * @returns\n   */\n  async _parseAndUploadMetadata(metadata) {\n    const parsedMetadata = this.parseInputMetadata(metadata);\n    return this.storage.upload(parsedMetadata);\n  }\n  supportsContractMetadata(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ContractMetadata\");\n  }\n}\n\n/**\n * Handle contract permissions\n * @remarks Configure roles and permissions for a contract, to restrict certain actions.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const rolesAndMembers = await contract.roles.getAll();\n * await contract.roles.grantRole(\"admin\", \"0x...\");\n * ```\n * @public\n */\nclass ContractRoles {\n  /**\n   * @internal\n   * @remarks This is used for typing inside react hooks which is why it has to be public.\n   */\n\n  constructor(contractWrapper, roles) {\n    _defineProperty(this, \"featureName\", FEATURE_PERMISSIONS.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"roles\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.roles = roles;\n  }\n\n  /** **************************\n   * READ FUNCTIONS\n   ****************************/\n\n  /**\n   * Call this to get get a list of addresses for all supported roles on the contract.\n   * @remarks See {@link ContractRoles.get} to get a list of addresses that are members of a specific role.\n   * @example\n   * ```javascript\n   * const rolesAndMembers = await contract.roles.getAll();\n   * ```\n   * @returns A record of {@link Role}s to lists of addresses that are members of the given role.\n   * @throws If the contract does not support roles this will throw an error.\n   *\n   * @public\n   * @twfeature Permissions\n   */\n  async getAll() {\n    invariant(this.roles.length, \"this contract has no support for roles\");\n    const roles = {};\n    for (const role of this.roles) {\n      roles[role] = await this.get(role);\n    }\n    return roles;\n  }\n\n  /**\n   * Call this to get a list of addresses that are members of a specific role.\n   * @remarks See {@link ContractRoles.getAll} to get get a list of addresses for all supported roles on the contract.\n   * @param role - The Role to to get a memberlist for.\n   * @returns The list of addresses that are members of the specific role.\n   * @throws If you are requestiong a role that does not exist on the contract this will throw an error.\n   *\n   * @example Say you want to get the list of addresses that are members of the minter role.\n   * ```javascript\n   * const minterAddresses = await contract.roles.get(\"minter\");\n   * ```\n   *\n   * @public\n   * @twfeature Permissions\n   */\n  async get(role) {\n    invariant(this.roles.includes(role), `this contract does not support the \"${role}\" role`);\n    const wrapper = this.contractWrapper;\n    if (hasFunction(\"getRoleMemberCount\", wrapper) && hasFunction(\"getRoleMember\", wrapper)) {\n      const roleHash = getRoleHash(role);\n      const count = (await wrapper.readContract.getRoleMemberCount(roleHash)).toNumber();\n      return await Promise.all(Array.from(Array(count).keys()).map(i => wrapper.readContract.getRoleMember(roleHash, i)));\n    }\n    throw new Error(\"Contract does not support enumerating roles. Please implement IPermissionsEnumerable to unlock this functionality.\");\n  }\n\n  /**\n   * Call this to OVERWRITE the list of addresses that are members of specific roles.\n   *\n   * Every role in the list will be overwritten with the new list of addresses provided with them.\n   * If you want to add or remove addresses for a single address use {@link ContractRoles.grant} and {@link ContractRoles.revoke} respectively instead.\n   * @param rolesWithAddresses - A record of {@link Role}s to lists of addresses that should be members of the given role.\n   * @throws If you are requestiong a role that does not exist on the contract this will throw an error.\n   * @example Say you want to overwrite the list of addresses that are members of the minter role.\n   * ```javascript\n   * const minterAddresses = await contract.roles.get(\"minter\");\n   * await contract.roles.setAll({\n   *  minter: []\n   * });\n   * console.log(await contract.roles.get(\"minter\")); // No matter what members had the role before, the new list will be set to []\n   * ```\n   * @public\n   * @twfeature Permissions\n   *\n   * */\n  async setAll(rolesWithAddresses) {\n    const roles = Object.keys(rolesWithAddresses);\n    invariant(roles.length, \"you must provide at least one role to set\");\n    invariant(roles.every(role => this.roles.includes(role)), \"this contract does not support the given role\");\n    const currentRoles = await this.getAll();\n    const encoded = [];\n    // add / remove admin role at the end so we don't revoke admin then grant\n    const sortedRoles = roles.sort(role => role === \"admin\" ? 1 : -1);\n    for (let i = 0; i < sortedRoles.length; i++) {\n      const role = sortedRoles[i];\n      const addresses = rolesWithAddresses[role] || [];\n      const currentAddresses = currentRoles[role] || [];\n      const toAdd = addresses.filter(address => !currentAddresses.includes(address));\n      const toRemove = currentAddresses.filter(address => !addresses.includes(address));\n      if (toAdd.length) {\n        toAdd.forEach(address => {\n          encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"grantRole\", [getRoleHash(role), address]));\n        });\n      }\n      if (toRemove.length) {\n        for (let j = 0; j < toRemove.length; j++) {\n          const address = toRemove[j];\n          const revokeFunctionName = await this.getRevokeRoleFunctionName(address);\n          encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(revokeFunctionName, [getRoleHash(role), address]));\n        }\n      }\n    }\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded)\n    };\n  }\n\n  /**\n   * Throws an error if an address is missing the roles specified.\n   *\n   * @param roles - The roles to check\n   * @param address - The address to check\n   *\n   * @internal\n   */\n  async verify(roles, address) {\n    await Promise.all(roles.map(async role => {\n      const members = await this.get(role);\n      if (!members.map(a => a.toLowerCase()).includes(address.toLowerCase())) {\n        throw new MissingRoleError(address, role);\n      }\n    }));\n  }\n\n  /** **************************\n   * WRITE FUNCTIONS\n   ****************************/\n\n  /**\n   * Call this to grant a role to a specific address.\n   *\n   * @remarks Make sure you are sure you want to grant the role to the address.\n   *\n   * @example\n   * ```javascript\n   * await contract.roles.grant(\"minter\", \"0x1234567890123456789012345678901234567890\");\n   * ```\n   *\n   * @param role - The {@link Role} to grant to the address\n   * @param address - The address to grant the role to\n   * @returns The transaction receipt\n   * @throws If you are trying to grant does not exist on the contract this will throw an error.\n   *\n   * @public\n   * @twfeature Permissions\n   */\n  async grant(role, address) {\n    invariant(this.roles.includes(role), `this contract does not support the \"${role}\" role`);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"grantRole\", [getRoleHash(role), address])\n    };\n  }\n\n  /**\n   * Call this to revoke a role from a specific address.\n   *\n   * @remarks\n   *\n   * -- Caution --\n   *\n   * This will let you remove yourself from the role, too.\n   * If you remove yourself from the admin role, you will no longer be able to administer the contract.\n   * There is no way to recover from this.\n   *\n   * @example\n   * ```javascript\n   * await contract.roles.revoke(\"minter\", \"0x1234567890123456789012345678901234567890\");\n   * ```\n   *\n   * @param role - The {@link Role} to revoke\n   * @param address - The address to revoke the role from\n   * @returns The transaction receipt\n   * @throws If you are trying to revoke does not exist on the module this will throw an error.\n   *\n   * @public\n   * @twfeature Permissions\n   */\n  async revoke(role, address) {\n    invariant(this.roles.includes(role), `this contract does not support the \"${role}\" role`);\n    const revokeFunctionName = await this.getRevokeRoleFunctionName(address);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(revokeFunctionName, [getRoleHash(role), address])\n    };\n  }\n\n  /** **************************\n   * PRIVATE FUNCTIONS\n   ****************************/\n\n  async getRevokeRoleFunctionName(address) {\n    const signerAddress = await this.contractWrapper.getSignerAddress();\n    if (signerAddress.toLowerCase() === address.toLowerCase()) {\n      return \"renounceRole\";\n    }\n    return \"revokeRole\";\n  }\n}\n\n/**\n * Handle contract royalties\n * @remarks Configure royalties for an entire contract or a particular token.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const royaltyInfo = await contract.royalties.getDefaultRoyaltyInfo();\n * await contract.roles.setTokenRoyaltyInfo(tokenId, {\n *   seller_fee_basis_points: 100, // 1% royalty fee\n *   fee_recipient: \"0x...\", // the fee recipient\n * });\n * ```\n * @public\n */\nclass ContractRoyalty {\n  constructor(contractWrapper, metadata) {\n    _defineProperty(this, \"featureName\", FEATURE_ROYALTY.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"metadata\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.metadata = metadata;\n  }\n\n  /**\n   * Gets the royalty recipient and BPS (basis points) of the contract\n   * @returns - The royalty recipient and BPS\n   * @example\n   * ```javascript\n   * const royaltyInfo = await contract.royalties.getDefaultRoyaltyInfo();\n   * ```\n   * @public\n   * @twfeature Royalty\n   */\n  async getDefaultRoyaltyInfo() {\n    const [royaltyRecipient, royaltyBps] = await this.contractWrapper.readContract.getDefaultRoyaltyInfo();\n    // parse it on the way out to make sure we default things if they are not set\n    return CommonRoyaltySchema.parse({\n      fee_recipient: royaltyRecipient,\n      seller_fee_basis_points: royaltyBps\n    });\n  }\n\n  /**\n   * Gets the royalty recipient and BPS (basis points) of a particular token\n   * @returns - The royalty recipient and BPS\n   * @example\n   * ```javascript\n   * const royaltyInfo = await contract.royalties.getDefaultRoyaltyInfo();\n   * ```\n   * @public\n   * @twfeature Royalty\n   */\n  async getTokenRoyaltyInfo(tokenId) {\n    const [royaltyRecipient, royaltyBps] = await this.contractWrapper.readContract.getRoyaltyInfoForToken(tokenId);\n    return CommonRoyaltySchema.parse({\n      fee_recipient: royaltyRecipient,\n      seller_fee_basis_points: royaltyBps\n    });\n  }\n\n  /**\n   * Set the royalty recipient and fee for a contract\n   * @param royaltyData - the royalty recipient and fee\n   *  @example\n   * ```javascript\n   * await contract.roles.setDefaultRoyaltyInfo({\n   *   seller_fee_basis_points: 100, // 1% royalty fee\n   *   fee_recipient: \"0x...\", // the fee recipient\n   * });\n   * ```\n   * @public\n   * @twfeature Royalty\n   */\n  async setDefaultRoyaltyInfo(royaltyData) {\n    // read the metadata from the contract\n    const oldMetadata = await this.metadata.get();\n\n    // update the metadata with the new royalty data\n    // if one of the keys is \"undefined\" it will be ignored (which is the desired behavior)\n    const mergedMetadata = this.metadata.parseInputMetadata({\n      ...oldMetadata,\n      ...royaltyData\n    });\n\n    // why not use this.metadata.set()? - because that would end up sending it's own separate transaction to `setContractURI`\n    // but we want to send both the `setRoyaltyInfo` and `setContractURI` in one transaction!\n    const contractURI = await this.metadata._parseAndUploadMetadata(mergedMetadata);\n    if (hasFunction(\"setContractURI\", this.contractWrapper)) {\n      // encode both the functions we want to send\n      const encoded = [this.contractWrapper.readContract.interface.encodeFunctionData(\"setDefaultRoyaltyInfo\", [mergedMetadata.fee_recipient, mergedMetadata.seller_fee_basis_points]), this.contractWrapper.readContract.interface.encodeFunctionData(\"setContractURI\", [contractURI])];\n      // actually send the transaction and return the receipt + a way to get the new royalty info\n      return {\n        receipt: await this.contractWrapper.multiCall(encoded),\n        data: () => this.getDefaultRoyaltyInfo()\n      };\n    } else {\n      throw new Error(\"Updating royalties requires implementing ContractMetadata in your contract to support marketplaces like OpenSea.\");\n    }\n  }\n\n  /**\n   * Set the royalty recipient and fee for a particular token\n   * @param tokenId - the token id\n   * @param royaltyData - the royalty recipient and fee\n   * @example\n   * ```javascript\n   * await contract.roles.setTokenRoyaltyInfo(tokenId, {\n   *   seller_fee_basis_points: 100, // 1% royalty fee\n   *   fee_recipient: \"0x...\", // the fee recipient\n   * });\n   * ```\n   * @public\n   * @twfeature Royalty\n   */\n  async setTokenRoyaltyInfo(tokenId, royaltyData) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setRoyaltyInfoForToken\", [tokenId, royaltyData.fee_recipient, royaltyData.seller_fee_basis_points]),\n      data: () => this.getDefaultRoyaltyInfo()\n    };\n  }\n}\n\n/**\n * Handle primary sales recipients\n * @remarks Configure primary sale recipients for an entire contract.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const salesRecipient = await contract.sales.getRecipient();\n * await contract.sales.setRecipient(recipientWalletAddress);\n * ```\n * @public\n */\nclass ContractPrimarySale {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_PRIMARY_SALE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Get the primary sale recipient.\n   * @returns the wallet address.\n   * @example\n   * ```javascript\n   * const salesRecipient = await contract.sales.getRecipient();\n   * ```\n   * @public\n   * @twfeature PrimarySale\n   */\n  async getRecipient() {\n    return await this.contractWrapper.readContract.primarySaleRecipient();\n  }\n\n  /**\n   * Set the primary sale recipient\n   * @param recipient - the wallet address\n   * @example\n   * ```javascript\n   * await contract.sales.setRecipient(recipientWalletAddress);\n   * ```\n   * @public\n   * @twfeature PrimarySale\n   */\n  async setRecipient(recipient) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setPrimarySaleRecipient\", [recipient])\n    };\n  }\n}\n\nconst FALLBACK_METADATA = {\n  name: \"Failed to load NFT metadata\"\n};\n\n/**\n * fetches the token metadata\n * @param tokenId - the id (to get it back in the output)\n * @param tokenUri - the uri to fetch\n * @param storage - which storage to fetch from\n *\n * @internal\n */\nasync function fetchTokenMetadata(tokenId, tokenUri, storage) {\n  const parsedUri = tokenUri.replace(\"{id}\", ethers.utils.hexZeroPad(BigNumber.from(tokenId).toHexString(), 32).slice(2));\n  let jsonMetadata;\n  try {\n    jsonMetadata = await storage.downloadJSON(parsedUri);\n  } catch (err) {\n    const unparsedTokenIdUri = tokenUri.replace(\"{id}\", BigNumber.from(tokenId).toString());\n    try {\n      jsonMetadata = await storage.downloadJSON(unparsedTokenIdUri);\n    } catch (e) {\n      console.warn(`failed to get token metadata: ${JSON.stringify({\n        tokenId: tokenId.toString(),\n        tokenUri\n      })} -- falling back to default metadata`);\n      jsonMetadata = FALLBACK_METADATA;\n    }\n  }\n  return CommonNFTOutput.parse({\n    ...jsonMetadata,\n    id: BigNumber.from(tokenId).toString(),\n    uri: tokenUri\n  });\n}\n\n// Used for marketplace to fetch NFT metadata from contract address + tokenId\n/**\n * @internal\n * @param contractAddress\n * @param provider\n * @param tokenId\n * @param storage\n */\nasync function fetchTokenMetadataForContract(contractAddress, provider, tokenId, storage) {\n  let uri;\n  const erc165 = new Contract(contractAddress, ERC165Abi, provider);\n  const isERC721 = await erc165.supportsInterface(InterfaceId_IERC721);\n  const isERC1155 = await erc165.supportsInterface(InterfaceId_IERC1155);\n  if (isERC721) {\n    const erc721 = new Contract(contractAddress, ERC721MetadataAbi, provider);\n    uri = await erc721.tokenURI(tokenId);\n  } else if (isERC1155) {\n    const erc1155 = new Contract(contractAddress, ERC1155MetadataAbi, provider);\n    uri = await erc1155.uri(tokenId);\n  } else {\n    throw Error(\"Contract must implement ERC 1155 or ERC 721.\");\n  }\n  if (!uri) {\n    throw new NotFoundError();\n  }\n  return fetchTokenMetadata(tokenId, uri, storage);\n}\n\n/**\n * @internal\n * @param metadata\n * @param storage\n */\nasync function uploadOrExtractURI(metadata, storage) {\n  if (typeof metadata === \"string\") {\n    return metadata;\n  } else {\n    return await storage.upload(CommonNFTInput.parse(metadata));\n  }\n}\n\n/**\n * @internal\n * @param metadatas\n * @param storage\n * @param startNumber\n * @param contractAddress\n * @param signerAddress\n * @param options\n */\nasync function uploadOrExtractURIs(metadatas, storage, startNumber, options) {\n  if (isUriList(metadatas)) {\n    return metadatas;\n  } else if (isMetadataList(metadatas)) {\n    const uris = await storage.uploadBatch(metadatas.map(m => CommonNFTInput.parse(m)), {\n      rewriteFileNames: {\n        fileStartNumber: startNumber || 0\n      },\n      onProgress: options?.onProgress\n    });\n    return uris;\n  } else {\n    throw new Error(\"NFT metadatas must all be of the same type (all URI or all NFTMetadataInput)\");\n  }\n}\nfunction getBaseUriFromBatch(uris) {\n  const baseUri = uris[0].substring(0, uris[0].lastIndexOf(\"/\"));\n  for (let i = 0; i < uris.length; i++) {\n    const uri = uris[i].substring(0, uris[i].lastIndexOf(\"/\"));\n    if (baseUri !== uri) {\n      throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${baseUri}' but got '${uri}'`);\n    }\n  }\n\n  // Ensure that baseUri ends with trailing slash\n  return baseUri.replace(/\\/$/, \"\") + \"/\";\n}\nfunction isUriList(metadatas) {\n  return metadatas.find(m => typeof m !== \"string\") === undefined;\n}\nfunction isMetadataList(metadatas) {\n  return metadatas.find(m => typeof m !== \"object\") === undefined;\n}\n\n/**\n * Handles delayed reveal logic\n * @public\n */\nclass DelayedReveal {\n  constructor(contractWrapper, storage, fetureName, nextTokenIdToMintFn) {\n    _defineProperty(this, \"featureName\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"nextTokenIdToMintFn\", void 0);\n    this.featureName = fetureName;\n    this.nextTokenIdToMintFn = nextTokenIdToMintFn;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  /**\n   * Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until your reveal them!\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, until the reveal happens!\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * ```\n   * @public\n   * @param placeholder - the placeholder NFT to show before the reveal\n   * @param metadatas - the final NFTs that will be hidden\n   * @param password - the password that will be used to reveal these NFTs\n   * @param options - additional options like upload progress\n   */\n  async createDelayedRevealBatch(placeholder, metadatas, password, options) {\n    if (!password) {\n      throw new Error(\"Password is required\");\n    }\n    const placeholderUris = await this.storage.uploadBatch([CommonNFTInput.parse(placeholder)], {\n      rewriteFileNames: {\n        fileStartNumber: 0\n      }\n    });\n    const placeholderUri = getBaseUriFromBatch(placeholderUris);\n    const startFileNumber = await this.nextTokenIdToMintFn();\n    const uris = await this.storage.uploadBatch(metadatas.map(m => CommonNFTInput.parse(m)), {\n      onProgress: options?.onProgress,\n      rewriteFileNames: {\n        fileStartNumber: startFileNumber.toNumber()\n      }\n    });\n    const baseUri = getBaseUriFromBatch(uris);\n    const baseUriId = await this.contractWrapper.readContract.getBaseURICount();\n    const hashedPassword = await this.hashDelayRevealPasword(baseUriId, password);\n    const encryptedBaseUri = await this.contractWrapper.readContract.encryptDecrypt(ethers.utils.toUtf8Bytes(baseUri), hashedPassword);\n    let data;\n    const legacyContract = await this.isLegacyContract();\n    if (legacyContract) {\n      data = encryptedBaseUri;\n    } else {\n      const chainId = await this.contractWrapper.getChainID();\n      const provenanceHash = ethers.utils.solidityKeccak256([\"bytes\", \"bytes\", \"uint256\"], [ethers.utils.toUtf8Bytes(baseUri), hashedPassword, chainId]);\n      data = ethers.utils.defaultAbiCoder.encode([\"bytes\", \"bytes32\"], [encryptedBaseUri, provenanceHash]);\n    }\n    const receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [uris.length, placeholderUri.endsWith(\"/\") ? placeholderUri : `${placeholderUri}/`, data]);\n    const events = this.contractWrapper.parseLogs(\"TokensLazyMinted\", receipt?.logs);\n    const startingIndex = events[0].args.startTokenId;\n    const endingIndex = events[0].args.endTokenId;\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt\n      });\n    }\n    return results;\n  }\n\n  /**\n   * Reveal a batch of hidden NFTs\n   * @remarks Reveal the NFTs of a batch using the password.\n   * @example\n   * ```javascript\n   * // the batch to reveal\n   * const batchId = 0;\n   * // reveal the batch\n   * await contract.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   * @public\n   * @param batchId - the id of the batch to reveal\n   * @param password - the password\n   */\n  async reveal(batchId, password) {\n    if (!password) {\n      throw new Error(\"Password is required\");\n    }\n    const key = await this.hashDelayRevealPasword(batchId, password);\n    // performing the reveal locally to make sure it'd succeed before sending the transaction\n    try {\n      const decryptedUri = await this.contractWrapper.callStatic().reveal(batchId, key);\n      // basic sanity check for making sure decryptedUri is valid\n      // this is optional because invalid decryption key would result in non-utf8 bytes and\n      // ethers would throw when trying to decode it\n      if (!decryptedUri.includes(\"://\") || !decryptedUri.endsWith(\"/\")) {\n        throw new Error(\"invalid password\");\n      }\n    } catch (e) {\n      throw new Error(\"invalid password\");\n    }\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"reveal\", [batchId, key])\n    };\n  }\n\n  /**\n   * Gets the list of unrevealed NFT batches.\n   * @remarks Gets the list of unrevealed NFT batches.\n   * @example\n   * ```javascript\n   * const batches = await contract.revealer.getBatchesToReveal();\n   * ```\n   * @public\n   */\n  async getBatchesToReveal() {\n    const count = await this.contractWrapper.readContract.getBaseURICount();\n    if (count.isZero()) {\n      return [];\n    }\n    const countRangeArray = Array.from(Array(count.toNumber()).keys());\n    // map over to get the base uri indices, which should be the end token id of every batch\n    const uriIndices = await Promise.all(countRangeArray.map(i => {\n      if (hasFunction(\"getBatchIdAtIndex\", this.contractWrapper)) {\n        return this.contractWrapper.readContract.getBatchIdAtIndex(i);\n      }\n      if (hasFunction(\"baseURIIndices\", this.contractWrapper)) {\n        return this.contractWrapper.readContract.baseURIIndices(i);\n      }\n      throw new Error(\"Contract does not have getBatchIdAtIndex or baseURIIndices.\");\n    }));\n\n    // first batch always start from 0. don't need to fetch the last batch so pop it from the range array\n    const uriIndicesWithZeroStart = uriIndices.slice(0, uriIndices.length - 1);\n\n    // returns the token uri for each batches. first batch always starts from token id 0.\n    const tokenMetadatas = await Promise.all(Array.from([0, ...uriIndicesWithZeroStart]).map(i => this.getNftMetadata(i.toString())));\n\n    // index is the uri indices, which is end token id. different from uris\n    const legacyContract = await this.isLegacyContract();\n    const encryptedUriData = await Promise.all(Array.from([...uriIndices]).map(i => legacyContract ? this.getLegacyEncryptedData(i) : this.contractWrapper.readContract.encryptedData(i)));\n    const encryptedBaseUris = encryptedUriData.map(data => {\n      if (ethers.utils.hexDataLength(data) > 0) {\n        if (legacyContract) {\n          return data;\n        }\n        const result = ethers.utils.defaultAbiCoder.decode([\"bytes\", \"bytes32\"], data);\n        return result[0];\n      } else {\n        return data;\n      }\n    });\n    return tokenMetadatas.map((meta, index) => ({\n      batchId: BigNumber.from(index),\n      batchUri: meta.uri,\n      placeholderMetadata: meta\n    })).filter((_, index) => ethers.utils.hexDataLength(encryptedBaseUris[index]) > 0);\n  }\n\n  /**\n   * Algorithm to hash delay reveal password, so we don't broadcast the input password on-chain.\n   *\n   * @internal\n   */\n  async hashDelayRevealPasword(batchTokenIndex, password) {\n    const chainId = await this.contractWrapper.getChainID();\n    const contractAddress = this.contractWrapper.readContract.address;\n    return ethers.utils.solidityKeccak256([\"string\", \"uint256\", \"uint256\", \"address\"], [password, chainId, batchTokenIndex, contractAddress]);\n  }\n  async getNftMetadata(tokenId) {\n    return fetchTokenMetadataForContract(this.contractWrapper.readContract.address, this.contractWrapper.getProvider(), tokenId, this.storage);\n  }\n  async isLegacyContract() {\n    if (hasFunction(\"contractVersion\", this.contractWrapper)) {\n      try {\n        const version = await this.contractWrapper.readContract.contractVersion();\n        return version <= 2;\n      } catch (e) {\n        return false;\n      }\n    }\n    return false;\n  }\n  async getLegacyEncryptedData(index) {\n    const legacy = new ethers.Contract(this.contractWrapper.readContract.address, DeprecatedAbi, this.contractWrapper.getProvider());\n    const result = await legacy.functions[\"encryptedBaseURI\"](index);\n    if (result.length > 0) {\n      return result[0];\n    } else {\n      return \"0x\";\n    }\n  }\n}\n\nlet ListingType;\n(function (ListingType) {\n  ListingType[ListingType[\"Direct\"] = 0] = \"Direct\";\n  ListingType[ListingType[\"Auction\"] = 1] = \"Auction\";\n})(ListingType || (ListingType = {}));\n\nlet ProposalState;\n(function (ProposalState) {\n  ProposalState[ProposalState[\"Pending\"] = 0] = \"Pending\";\n  ProposalState[ProposalState[\"Active\"] = 1] = \"Active\";\n  ProposalState[ProposalState[\"Canceled\"] = 2] = \"Canceled\";\n  ProposalState[ProposalState[\"Defeated\"] = 3] = \"Defeated\";\n  ProposalState[ProposalState[\"Succeeded\"] = 4] = \"Succeeded\";\n  ProposalState[ProposalState[\"Queued\"] = 5] = \"Queued\";\n  ProposalState[ProposalState[\"Expired\"] = 6] = \"Expired\";\n  ProposalState[ProposalState[\"Executed\"] = 7] = \"Executed\";\n})(ProposalState || (ProposalState = {}));\n\nlet VoteType;\n(function (VoteType) {\n  VoteType[VoteType[\"Against\"] = 0] = \"Against\";\n  VoteType[VoteType[\"For\"] = 1] = \"For\";\n  VoteType[VoteType[\"Abstain\"] = 2] = \"Abstain\";\n})(VoteType || (VoteType = {}));\n\nlet ClaimEligibility;\n(function (ClaimEligibility) {\n  ClaimEligibility[\"NotEnoughSupply\"] = \"There is not enough supply to claim.\";\n  ClaimEligibility[\"AddressNotAllowed\"] = \"This address is not on the allowlist.\";\n  ClaimEligibility[\"WaitBeforeNextClaimTransaction\"] = \"Not enough time since last claim transaction. Please wait.\";\n  ClaimEligibility[\"AlreadyClaimed\"] = \"You have already claimed the token.\";\n  ClaimEligibility[\"NotEnoughTokens\"] = \"There are not enough tokens in the wallet to pay for the claim.\";\n  ClaimEligibility[\"NoActiveClaimPhase\"] = \"There is no active claim phase at the moment. Please check back in later.\";\n  ClaimEligibility[\"NoClaimConditionSet\"] = \"There is no claim condition set.\";\n  ClaimEligibility[\"NoWallet\"] = \"No wallet connected.\";\n  ClaimEligibility[\"Unknown\"] = \"No claim conditions found.\";\n})(ClaimEligibility || (ClaimEligibility = {}));\n\n/**\n * Estimates the gas cost of Contract calls\n * @public\n */\nclass GasCostEstimator {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Estimates the cost of gas in native token of the current chain\n   * Pass in the same parameters as the contract's function.\n   * @remarks Estimate the cost of gas in native token of the current chain\n   * @example\n   * ```javascript\n   * const costOfClaim = await nftDrop?.estimator.gasCostOf(\"claim\", [\n   *   \"0x...\", // receiver\n   *   1, // quantity\n   *   \"0x...\", // currency\n   *   1, // price per token\n   *   [], // proofs\n   *   1, // proof max quantity per transaction\n   * ]);\n   * ```\n   * @returns the estimated price in native currency (ETH, MATIC, etc) of calling this function\n   * @public\n   */\n  async gasCostOf(fn, args) {\n    const price = await this.contractWrapper.getPreferredGasPrice();\n    const gasUnits = await this.contractWrapper.estimateGas(fn, args);\n    return ethers.utils.formatEther(gasUnits.mul(price));\n  }\n\n  /**\n   * Estimates the gas limit of a transaction\n   * Pass in the same parameters as the contract's function.\n   * @remarks Estimates the gas limit of a transaction\n   * @example\n   * ```javascript\n   * const gasLimitOfClaim = await nftDrop?.estimator.gasLimitOf(\"claim\", [\n   *   \"0x...\", // receiver\n   *   1, // quantity\n   *   \"0x...\", // currency\n   *   1, // price per token\n   *   [], // proofs\n   *   1, // proof max quantity per transaction\n   * ]);\n   * ```\n   * @returns the estimated gas limit of the transaction\n   * @public\n   */\n  async gasLimitOf(fn, args) {\n    return this.contractWrapper.estimateGas(fn, args);\n  }\n\n  /**\n   * Returns the current gas price in gwei\n   * @remarks Get the current gas price in gwei\n   * @example\n   * ```javascript\n   * const gasCostInGwei = await contract.estimator.currentGasPriceInGwei();\n   * ```\n   * @returns the current gas price in gwei\n   * @public\n   */\n  async currentGasPriceInGwei() {\n    const price = await this.contractWrapper.getProvider().getGasPrice();\n    return ethers.utils.formatUnits(price, \"gwei\");\n  }\n}\n\n/**\n * @internal\n * Represents a transaction to be executed and can be customized.\n */\nclass TransactionTask {\n  static make(taskArgs) {\n    return new TransactionTask(taskArgs);\n  }\n  constructor(taskArgs) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"functionName\", void 0);\n    _defineProperty(this, \"args\", void 0);\n    _defineProperty(this, \"overrides\", void 0);\n    _defineProperty(this, \"encoder\", void 0);\n    _defineProperty(this, \"estimator\", void 0);\n    this.contractWrapper = taskArgs.contractWrapper;\n    this.functionName = taskArgs.functionName;\n    this.args = taskArgs.args || [];\n    this.overrides = taskArgs.overrides;\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n  }\n\n  // ////////////// Overrides ////////////////\n\n  /**\n   * Override the gas limit for this transaction.\n   * @param gasLimit\n   */\n  overrideGasLimit(gasLimit) {\n    this.overrides = {\n      ...this.overrides,\n      gasLimit\n    };\n    return this;\n  }\n\n  /**\n   * Override the gas price for this transaction.\n   * @param gasPrice\n   */\n  overrideGasPrice(gasPrice) {\n    this.overrides = {\n      ...this.overrides,\n      gasPrice\n    };\n    return this;\n  }\n\n  /**\n   * Override the nonce for this transaction.\n   * @param nonce\n   */\n  overrideNonce(nonce) {\n    this.overrides = {\n      ...this.overrides,\n      nonce\n    };\n    return this;\n  }\n\n  /**\n   * Override the value sent with this transaction.\n   * @param value\n   */\n  overrideValue(value) {\n    this.overrides = {\n      ...this.overrides,\n      value\n    };\n    return this;\n  }\n\n  // ////////////// Estimates ////////////////\n\n  /**\n   * Returns the gas limit that this transaction would consume if executed.\n   * @returns the gas limit in gas units\n   */\n  async estimateGasLimit() {\n    return await this.estimator.gasLimitOf(this.functionName, this.args);\n  }\n\n  /**\n   * Returns the total gas cost of this transaction if executed.\n   * @returns the gas cost in ether\n   */\n  async estimateGasCostInEther() {\n    return await this.estimator.gasCostOf(this.functionName, this.args);\n  }\n\n  // ////////////// Actions ////////////////\n\n  /**\n   * Returns the encoded function data of this transaction if executed.\n   */\n  async encodeFunctionData() {\n    return this.encoder.encode(this.functionName, this.args);\n  }\n\n  /**\n   * Submits this transaction to the network. Does not wait for the transaction to be mined.\n   * To wait for the transaction to be mined, you can call `.wait()` on the result of this function.\n   */\n  async submit() {\n    return await this.contractWrapper.sendTransactionByFunction(this.functionName, this.args, this.overrides || {});\n  }\n\n  /**\n   * Submits this transaction to the network and waits for it to be mined.\n   */\n  async execute() {\n    const receipt = await this.contractWrapper.sendTransaction(this.functionName, this.args, this.overrides || {});\n    return {\n      receipt\n    };\n  }\n}\n\n/**\n * Manages claim conditions for NFT Drop contracts\n * @public\n */\nclass DropClaimConditions {\n  constructor(contractWrapper, metadata, storage) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"metadata\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.storage = storage;\n    this.contractWrapper = contractWrapper;\n    this.metadata = metadata;\n  }\n\n  /** ***************************************\n   * READ FUNCTIONS\n   *****************************************/\n\n  /**\n   * Get the currently active claim condition\n   *\n   * @returns the claim condition metadata\n   */\n  async getActive(options) {\n    const cc = await this.get();\n    const metadata = await this.metadata.get();\n    return await transformResultToClaimCondition(cc, await this.getTokenDecimals(), this.contractWrapper.getProvider(), metadata.merkle || {}, this.storage, options?.withAllowList || false);\n  }\n  async get(conditionId) {\n    if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n      const contractModel = await this.contractWrapper.readContract.claimCondition();\n      return legacyContractModelToAbstract(contractModel);\n    } else if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n      const id = conditionId !== undefined ? conditionId : await this.contractWrapper.readContract.getActiveClaimConditionId();\n      const contractModel = await this.contractWrapper.readContract.getClaimConditionById(id);\n      return legacyContractModelToAbstract(contractModel);\n    } else if (this.isNewSinglePhaseDrop(this.contractWrapper)) {\n      const contractModel = await this.contractWrapper.readContract.claimCondition();\n      return newContractModelToAbstract(contractModel);\n    } else if (this.isNewMultiphaseDrop(this.contractWrapper)) {\n      const id = conditionId !== undefined ? conditionId : await this.contractWrapper.readContract.getActiveClaimConditionId();\n      const contractModel = await this.contractWrapper.readContract.getClaimConditionById(id);\n      return newContractModelToAbstract(contractModel);\n    } else {\n      throw new Error(\"Contract does not support claim conditions\");\n    }\n  }\n\n  /**\n   * Get all the claim conditions\n   *\n   * @returns the claim conditions metadata\n   */\n  async getAll(options) {\n    if (this.isLegacyMultiPhaseDrop(this.contractWrapper) || this.isNewMultiphaseDrop(this.contractWrapper)) {\n      const claimCondition = await this.contractWrapper.readContract.claimCondition();\n      const startId = claimCondition.currentStartId.toNumber();\n      const count = claimCondition.count.toNumber();\n      const conditions = [];\n      for (let i = startId; i < startId + count; i++) {\n        conditions.push(await this.get(i));\n      }\n      const metadata = await this.metadata.get();\n      const decimals = await this.getTokenDecimals();\n      return Promise.all(conditions.map(c => transformResultToClaimCondition(c, decimals, this.contractWrapper.getProvider(), metadata.merkle, this.storage, options?.withAllowList || false)));\n    } else {\n      return [await this.getActive(options)];\n    }\n  }\n\n  /**\n   * Can Claim\n   *\n   * @remarks Check if the drop can currently be claimed.\n   *\n   * @example\n   * ```javascript\n   * // Quantity of tokens to check claimability of\n   * const quantity = 1;\n   * const canClaim = await contract.canClaim(quantity);\n   * ```\n   */\n  async canClaim(quantity, addressToCheck) {\n    // TODO switch to use verifyClaim\n    return (await this.getClaimIneligibilityReasons(quantity, addressToCheck)).length === 0;\n  }\n\n  /**\n   * For any claim conditions that a particular wallet is violating,\n   * this function returns human readable information about the\n   * breaks in the condition that can be used to inform the user.\n   *\n   * @param quantity - The desired quantity that would be claimed.\n   * @param addressToCheck - The wallet address, defaults to the connected wallet.\n   *\n   */\n  async getClaimIneligibilityReasons(quantity, addressToCheck) {\n    const reasons = [];\n    let activeConditionIndex;\n    let claimCondition;\n    const decimals = await this.getTokenDecimals();\n    const quantityWithDecimals = ethers.utils.parseUnits(AmountSchema.parse(quantity), decimals);\n    if (addressToCheck === undefined) {\n      try {\n        addressToCheck = await this.contractWrapper.getSignerAddress();\n      } catch (err) {\n        console.warn(\"failed to get signer address\", err);\n      }\n    }\n\n    // if we have been unable to get a signer address, we can't check eligibility, so return a NoWallet error reason\n    if (!addressToCheck) {\n      return [ClaimEligibility.NoWallet];\n    }\n    try {\n      claimCondition = await this.getActive();\n    } catch (err) {\n      if (includesErrorMessage(err, \"!CONDITION\") || includesErrorMessage(err, \"no active mint condition\")) {\n        reasons.push(ClaimEligibility.NoClaimConditionSet);\n        return reasons;\n      }\n      console.warn(\"failed to get active claim condition\", err);\n      reasons.push(ClaimEligibility.Unknown);\n      return reasons;\n    }\n    if (claimCondition.availableSupply !== \"unlimited\") {\n      const supplyWithDecimals = ethers.utils.parseUnits(claimCondition.availableSupply, decimals);\n      if (supplyWithDecimals.lt(quantityWithDecimals)) {\n        reasons.push(ClaimEligibility.NotEnoughSupply);\n      }\n    }\n\n    // check for merkle root inclusion\n    const merkleRootArray = ethers.utils.stripZeros(claimCondition.merkleRootHash);\n    const hasAllowList = merkleRootArray.length > 0;\n    let allowListEntry = null;\n    if (hasAllowList) {\n      allowListEntry = await this.getClaimerProofs(addressToCheck);\n      if (!allowListEntry && (this.isLegacySinglePhaseDrop(this.contractWrapper) || this.isLegacyMultiPhaseDrop(this.contractWrapper))) {\n        // exclusive allowlist behavior\n        reasons.push(ClaimEligibility.AddressNotAllowed);\n        return reasons;\n      }\n      if (allowListEntry) {\n        try {\n          const claimVerification = await this.prepareClaim(quantity, false, decimals, addressToCheck);\n          let validMerkleProof;\n          if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n            activeConditionIndex = await this.contractWrapper.readContract.getActiveClaimConditionId();\n            // legacy verifyClaimerMerkleProofs function\n            [validMerkleProof] = await this.contractWrapper.readContract.verifyClaimMerkleProof(activeConditionIndex, addressToCheck, quantity, claimVerification.proofs, claimVerification.maxClaimable);\n            if (!validMerkleProof) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          } else if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n            [validMerkleProof] = await this.contractWrapper.readContract.verifyClaimMerkleProof(addressToCheck, quantity, {\n              proof: claimVerification.proofs,\n              maxQuantityInAllowlist: claimVerification.maxClaimable\n            });\n            if (!validMerkleProof) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          } else if (this.isNewSinglePhaseDrop(this.contractWrapper)) {\n            await this.contractWrapper.readContract.verifyClaim(addressToCheck, quantity, claimVerification.currencyAddress, claimVerification.price, {\n              proof: claimVerification.proofs,\n              quantityLimitPerWallet: claimVerification.maxClaimable,\n              currency: claimVerification.currencyAddressInProof,\n              pricePerToken: claimVerification.priceInProof\n            });\n            if (convertQuantityToBigNumber(claimCondition.maxClaimablePerWallet, decimals).eq(0) && claimVerification.maxClaimable === ethers.constants.MaxUint256 || claimVerification.maxClaimable === BigNumber.from(0)) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          } else if (this.isNewMultiphaseDrop(this.contractWrapper)) {\n            activeConditionIndex = await this.contractWrapper.readContract.getActiveClaimConditionId();\n            await this.contractWrapper.readContract.verifyClaim(activeConditionIndex, addressToCheck, quantity, claimVerification.currencyAddress, claimVerification.price, {\n              proof: claimVerification.proofs,\n              quantityLimitPerWallet: claimVerification.maxClaimable,\n              currency: claimVerification.currencyAddressInProof,\n              pricePerToken: claimVerification.priceInProof\n            });\n            if (convertQuantityToBigNumber(claimCondition.maxClaimablePerWallet, decimals).eq(0) && claimVerification.maxClaimable === ethers.constants.MaxUint256 || claimVerification.maxClaimable === BigNumber.from(0)) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          }\n        } catch (e) {\n          console.warn(\"Merkle proof verification failed:\", \"reason\" in e ? e.reason : e);\n          reasons.push(ClaimEligibility.AddressNotAllowed);\n          return reasons;\n        }\n      }\n    }\n\n    // TODO (cc) check for max claimable per wallet and how much each wallet has claimed\n    if (this.isNewSinglePhaseDrop(this.contractWrapper) || this.isNewMultiphaseDrop(this.contractWrapper)) {\n      if (!hasAllowList || hasAllowList && !allowListEntry) {\n        if (convertQuantityToBigNumber(claimCondition.maxClaimablePerWallet, decimals).eq(0)) {\n          reasons.push(ClaimEligibility.AddressNotAllowed);\n          return reasons;\n        }\n      }\n    }\n\n    // check for claim timestamp between claims (ONLY FOR LEGACY)\n    if (this.isLegacySinglePhaseDrop(this.contractWrapper) || this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n      let [lastClaimedTimestamp, timestampForNextClaim] = [BigNumber.from(0), BigNumber.from(0)];\n      if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n        activeConditionIndex = await this.contractWrapper.readContract.getActiveClaimConditionId();\n        [lastClaimedTimestamp, timestampForNextClaim] = await this.contractWrapper.readContract.getClaimTimestamp(activeConditionIndex, addressToCheck);\n      } else if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n        // check for claim timestamp between claims\n        [lastClaimedTimestamp, timestampForNextClaim] = await this.contractWrapper.readContract.getClaimTimestamp(addressToCheck);\n      }\n      const now = BigNumber.from(Date.now()).div(1000);\n      if (lastClaimedTimestamp.gt(0) && now.lt(timestampForNextClaim)) {\n        // contract will return MaxUint256 if user has already claimed and cannot claim again\n        if (timestampForNextClaim.eq(constants.MaxUint256)) {\n          reasons.push(ClaimEligibility.AlreadyClaimed);\n        } else {\n          reasons.push(ClaimEligibility.WaitBeforeNextClaimTransaction);\n        }\n      }\n    }\n\n    // if not within a browser conetext, check for wallet balance.\n    // In browser context, let the wallet do that job\n    if (claimCondition.price.gt(0) && isNode()) {\n      const totalPrice = claimCondition.price.mul(BigNumber.from(quantity));\n      const provider = this.contractWrapper.getProvider();\n      if (isNativeToken(claimCondition.currencyAddress)) {\n        const balance = await provider.getBalance(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      } else {\n        const erc20 = new ContractWrapper(provider, claimCondition.currencyAddress, ERC20Abi, {});\n        const balance = await erc20.readContract.balanceOf(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      }\n    }\n    return reasons;\n  }\n\n  /**\n   * Returns allow list information and merkle proofs for the given address.\n   * @param claimerAddress - the claimer address\n   * @param claimConditionId - optional the claim condition id to get the proofs for\n   */\n  async getClaimerProofs(claimerAddress, claimConditionId) {\n    const claimCondition = await this.get(claimConditionId);\n    const merkleRoot = claimCondition.merkleRoot;\n    const merkleRootArray = ethers.utils.stripZeros(merkleRoot);\n    if (merkleRootArray.length > 0) {\n      const metadata = await this.metadata.get();\n      return await fetchSnapshotEntryForAddress(claimerAddress, merkleRoot.toString(), metadata.merkle, this.contractWrapper.getProvider(), this.storage, this.getSnapshotFormatVersion());\n    } else {\n      return null;\n    }\n  }\n\n  /** ***************************************\n   * WRITE FUNCTIONS\n   *****************************************/\n\n  /**\n   * Set public mint conditions\n   *\n   * @remarks Sets the public mint conditions that need to be fullfiled by users to claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   *\n   * // Optionally specify addresses that can claim\n   * const snapshots = ['0x...', '0x...']\n   *\n   * // Or alternatively, you can pass snapshots with the max number of NFTs each address can claim\n   * // const snapshots = [{ address: '0x...', maxClaimable: 1 }, { address: '0x...', maxClaimable: 2 }]\n   *\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: snapshots, // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   *\n   * await dropContract.claimConditions.set(claimConditions);\n   * ```\n   *\n   * @param claimConditionInputs - The claim conditions\n   * @param resetClaimEligibilityForAll - Whether to reset the state of who already claimed NFTs previously\n   */\n  async set(claimConditionInputs) {\n    let resetClaimEligibilityForAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let claimConditionsProcessed = claimConditionInputs;\n    if (this.isLegacySinglePhaseDrop(this.contractWrapper) || this.isNewSinglePhaseDrop(this.contractWrapper)) {\n      resetClaimEligibilityForAll = true;\n      if (claimConditionInputs.length === 0) {\n        claimConditionsProcessed = [{\n          startTime: new Date(0),\n          currencyAddress: ethers.constants.AddressZero,\n          price: 0,\n          maxClaimableSupply: 0,\n          maxClaimablePerWallet: 0,\n          waitInSeconds: 0,\n          merkleRootHash: utils.hexZeroPad([0], 32),\n          snapshot: []\n        }];\n      } else if (claimConditionInputs.length > 1) {\n        throw new Error(\"Single phase drop contract cannot have multiple claim conditions, only one is allowed\");\n      }\n    }\n\n    // if using new snapshot format, make sure that maxClaimablePerWallet is set if allowlist is set as well\n    if (this.isNewSinglePhaseDrop(this.contractWrapper) || this.isNewMultiphaseDrop(this.contractWrapper)) {\n      claimConditionsProcessed.forEach(cc => {\n        if (cc.snapshot && cc.snapshot.length > 0 && (cc.maxClaimablePerWallet === undefined || cc.maxClaimablePerWallet === \"unlimited\")) {\n          throw new Error(\"maxClaimablePerWallet must be set to a specific value when an allowlist is set.\\n\" + \"Example: Set it to 0 to only allow addresses in the allowlist to claim the amount specified in the allowlist.\\n\" + \"contract.claimConditions.set([{ snapshot: [{ address: '0x...', maxClaimable: 1 }], maxClaimablePerWallet: 0 }])\");\n        }\n        if (cc.snapshot && cc.snapshot.length > 0 && cc.maxClaimablePerWallet?.toString() === \"0\" && cc.snapshot.map(s => {\n          if (typeof s === \"string\") {\n            return 0;\n          } else {\n            return Number(s.maxClaimable?.toString() || 0);\n          }\n        }).reduce((acc, current) => {\n          return acc + current;\n        }, 0) === 0) {\n          throw new Error(\"maxClaimablePerWallet is set to 0, and all addresses in the allowlist have max claimable 0. This means that no one can claim.\");\n        }\n      });\n    }\n\n    // process inputs\n    const {\n      snapshotInfos,\n      sortedConditions\n    } = await processClaimConditionInputs(claimConditionsProcessed, await this.getTokenDecimals(), this.contractWrapper.getProvider(), this.storage, this.getSnapshotFormatVersion());\n    const merkleInfo = {};\n    snapshotInfos.forEach(s => {\n      merkleInfo[s.merkleRoot] = s.snapshotUri;\n    });\n    const metadata = await this.metadata.get();\n    const encoded = [];\n\n    // upload new merkle roots to snapshot URIs if updated\n    if (!deepEqual(metadata.merkle, merkleInfo)) {\n      const mergedMetadata = this.metadata.parseInputMetadata({\n        ...metadata,\n        merkle: merkleInfo\n      });\n      // using internal method to just upload, avoids one contract call\n      const contractURI = await this.metadata._parseAndUploadMetadata(mergedMetadata);\n\n      // TODO (cc) we could write the merkle tree info on the claim condition metadata instead\n      // TODO (cc) but we still need to maintain the behavior here for older contracts\n      if (hasFunction(\"setContractURI\", this.contractWrapper)) {\n        encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"setContractURI\", [contractURI]));\n      } else {\n        throw new Error(\"Setting a merkle root requires implementing ContractMetadata in your contract to support storing a merkle root.\");\n      }\n    }\n    const cw = this.contractWrapper;\n    if (this.isLegacySinglePhaseDrop(cw)) {\n      encoded.push(cw.readContract.interface.encodeFunctionData(\"setClaimConditions\", [abstractContractModelToLegacy(sortedConditions[0]), resetClaimEligibilityForAll]));\n    } else if (this.isLegacyMultiPhaseDrop(cw)) {\n      encoded.push(cw.readContract.interface.encodeFunctionData(\"setClaimConditions\", [sortedConditions.map(abstractContractModelToLegacy), resetClaimEligibilityForAll]));\n    } else if (this.isNewSinglePhaseDrop(cw)) {\n      encoded.push(cw.readContract.interface.encodeFunctionData(\"setClaimConditions\", [abstractContractModelToNew(sortedConditions[0]), resetClaimEligibilityForAll]));\n    } else if (this.isNewMultiphaseDrop(cw)) {\n      encoded.push(cw.readContract.interface.encodeFunctionData(\"setClaimConditions\", [sortedConditions.map(abstractContractModelToNew), resetClaimEligibilityForAll]));\n    } else {\n      throw new Error(\"Contract does not support claim conditions\");\n    }\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded)\n    };\n  }\n\n  /**\n   * Update a single claim condition with new data.\n   *\n   * @param index - the index of the claim condition to update, as given by the index from the result of `getAll()`\n   * @param claimConditionInput - the new data to update, previous data will be retained\n   */\n  async update(index, claimConditionInput) {\n    const existingConditions = await this.getAll();\n    const newConditionInputs = await updateExistingClaimConditions(index, claimConditionInput, existingConditions);\n    return await this.set(newConditionInputs);\n  }\n\n  /** ***************************************\n   * PRIVATE FUNCTIONS\n   *****************************************/\n\n  async getTokenDecimals() {\n    if (detectContractFeature(this.contractWrapper, \"ERC20\")) {\n      return this.contractWrapper.readContract.decimals();\n    } else {\n      return Promise.resolve(0);\n    }\n  }\n\n  /**\n   * Returns proofs and the overrides required for the transaction.\n   *\n   * @returns - `overrides` and `proofs` as an object.\n   * @internal\n   */\n  async prepareClaim(quantity, checkERC20Allowance) {\n    let decimals = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let address = arguments.length > 3 ? arguments[3] : undefined;\n    const addressToClaim = address ? address : await this.contractWrapper.getSignerAddress();\n    return prepareClaim(addressToClaim, quantity, await this.getActive(), async () => (await this.metadata.get()).merkle, decimals, this.contractWrapper, this.storage, checkERC20Allowance, this.getSnapshotFormatVersion());\n  }\n  async getClaimArguments(destinationAddress, quantity, claimVerification) {\n    if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n      return [destinationAddress, quantity, claimVerification.currencyAddress, claimVerification.price, claimVerification.proofs, claimVerification.maxClaimable];\n    } else if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n      return [destinationAddress, quantity, claimVerification.currencyAddress, claimVerification.price, {\n        proof: claimVerification.proofs,\n        maxQuantityInAllowlist: claimVerification.maxClaimable\n      }, ethers.utils.toUtf8Bytes(\"\")];\n    }\n    return [destinationAddress, quantity, claimVerification.currencyAddress, claimVerification.price, {\n      proof: claimVerification.proofs,\n      quantityLimitPerWallet: claimVerification.maxClaimable,\n      pricePerToken: claimVerification.priceInProof,\n      currency: claimVerification.currencyAddressInProof\n    }, ethers.utils.toUtf8Bytes(\"\")];\n  }\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress\n   * @param quantity\n   * @param options\n   */\n  async getClaimTransaction(destinationAddress, quantity, options) {\n    if (options?.pricePerToken) {\n      throw new Error(\"Price per token is be set via claim conditions by calling `contract.erc721.claimConditions.set()`\");\n    }\n    const claimVerification = await this.prepareClaim(quantity, options?.checkERC20Allowance === undefined ? true : options.checkERC20Allowance, await this.getTokenDecimals());\n    return TransactionTask.make({\n      contractWrapper: this.contractWrapper,\n      functionName: \"claim\",\n      args: await this.getClaimArguments(destinationAddress, quantity, claimVerification),\n      overrides: claimVerification.overrides\n    });\n  }\n  isNewSinglePhaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC721ClaimConditionsV2\") || detectContractFeature(contractWrapper, \"ERC20ClaimConditionsV2\");\n  }\n  isNewMultiphaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC721ClaimPhasesV2\") || detectContractFeature(contractWrapper, \"ERC20ClaimPhasesV2\");\n  }\n  isLegacySinglePhaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC721ClaimConditionsV1\") || detectContractFeature(contractWrapper, \"ERC20ClaimConditionsV1\");\n  }\n  isLegacyMultiPhaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC721ClaimPhasesV1\") || detectContractFeature(contractWrapper, \"ERC20ClaimPhasesV1\");\n  }\n  getSnapshotFormatVersion() {\n    return this.isLegacyMultiPhaseDrop(this.contractWrapper) || this.isLegacySinglePhaseDrop(this.contractWrapper) ? SnapshotFormatVersion.V1 : SnapshotFormatVersion.V2;\n  }\n}\n\n/**\n * Manages claim conditions for Edition Drop contracts\n * @public\n */\nclass DropErc1155ClaimConditions {\n  constructor(contractWrapper, metadata, storage) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"metadata\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.storage = storage;\n    this.contractWrapper = contractWrapper;\n    this.metadata = metadata;\n  }\n\n  /** ***************************************\n   * READ FUNCTIONS\n   *****************************************/\n\n  /**\n   * Get the currently active claim condition\n   *\n   * @returns the claim condition metadata\n   */\n  async getActive(tokenId, options) {\n    const mc = await this.get(tokenId);\n    const metadata = await this.metadata.get();\n    return await transformResultToClaimCondition(mc, 0, this.contractWrapper.getProvider(), metadata.merkle, this.storage, options?.withAllowList || false);\n  }\n  async get(tokenId, conditionId) {\n    if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n      const contractModel = await this.contractWrapper.readContract.claimCondition(tokenId);\n      return legacyContractModelToAbstract(contractModel);\n    } else if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n      const id = conditionId !== undefined ? conditionId : await this.contractWrapper.readContract.getActiveClaimConditionId(tokenId);\n      const contractModel = await this.contractWrapper.readContract.getClaimConditionById(tokenId, id);\n      return legacyContractModelToAbstract(contractModel);\n    } else if (this.isNewSinglePhaseDrop(this.contractWrapper)) {\n      const contractModel = await this.contractWrapper.readContract.claimCondition(tokenId);\n      return newContractModelToAbstract(contractModel);\n    } else if (this.isNewMultiphaseDrop(this.contractWrapper)) {\n      const id = conditionId !== undefined ? conditionId : await this.contractWrapper.readContract.getActiveClaimConditionId(tokenId);\n      const contractModel = await this.contractWrapper.readContract.getClaimConditionById(tokenId, id);\n      return newContractModelToAbstract(contractModel);\n    } else {\n      throw new Error(\"Contract does not support claim conditions\");\n    }\n  }\n\n  /**\n   * Get all the claim conditions\n   *\n   * @returns the claim conditions metadata\n   */\n  async getAll(tokenId, options) {\n    if (this.isLegacyMultiPhaseDrop(this.contractWrapper) || this.isNewMultiphaseDrop(this.contractWrapper)) {\n      const claimCondition = await this.contractWrapper.readContract.claimCondition(tokenId);\n      const startId = claimCondition.currentStartId.toNumber();\n      const count = claimCondition.count.toNumber();\n      const conditions = [];\n      for (let i = startId; i < startId + count; i++) {\n        conditions.push(await this.get(tokenId, i));\n      }\n      const metadata = await this.metadata.get();\n      return Promise.all(conditions.map(c => transformResultToClaimCondition(c, 0, this.contractWrapper.getProvider(), metadata.merkle, this.storage, options?.withAllowList || false)));\n    } else {\n      return [await this.getActive(tokenId, options)];\n    }\n  }\n\n  /**\n   * Can Claim\n   *\n   * @remarks Check if a particular NFT can currently be claimed by a given user.\n   *\n   * @example\n   * ```javascript\n   * // Quantity of tokens to check claimability of\n   * const quantity = 1;\n   * const canClaim = await contract.canClaim(quantity);\n   * ```\n   */\n  async canClaim(tokenId, quantity, addressToCheck) {\n    // TODO switch to use verifyClaim\n    return (await this.getClaimIneligibilityReasons(tokenId, quantity, addressToCheck)).length === 0;\n  }\n\n  /**\n   * For any claim conditions that a particular wallet is violating,\n   * this function returns human-readable information about the\n   * breaks in the condition that can be used to inform the user.\n   *\n   * @param tokenId - the token id to check\n   * @param quantity - The desired quantity that would be claimed.\n   * @param addressToCheck - The wallet address, defaults to the connected wallet.\n   *\n   */\n  async getClaimIneligibilityReasons(tokenId, quantity, addressToCheck) {\n    const reasons = [];\n    let activeConditionIndex;\n    let claimCondition;\n    if (addressToCheck === undefined) {\n      try {\n        addressToCheck = await this.contractWrapper.getSignerAddress();\n      } catch (err) {\n        console.warn(\"failed to get signer address\", err);\n      }\n    }\n\n    // if we have been unable to get a signer address, we can't check eligibility, so return a NoWallet error reason\n    if (!addressToCheck) {\n      return [ClaimEligibility.NoWallet];\n    }\n    try {\n      claimCondition = await this.getActive(tokenId);\n    } catch (err) {\n      if (includesErrorMessage(err, \"!CONDITION\") || includesErrorMessage(err, \"no active mint condition\")) {\n        reasons.push(ClaimEligibility.NoClaimConditionSet);\n        return reasons;\n      }\n      reasons.push(ClaimEligibility.Unknown);\n      return reasons;\n    }\n    if (claimCondition.availableSupply !== \"unlimited\") {\n      if (BigNumber.from(claimCondition.availableSupply).lt(quantity)) {\n        reasons.push(ClaimEligibility.NotEnoughSupply);\n      }\n    }\n\n    // check for merkle root inclusion\n    const merkleRootArray = ethers.utils.stripZeros(claimCondition.merkleRootHash);\n    const hasAllowList = merkleRootArray.length > 0;\n    let allowListEntry = null;\n    if (hasAllowList) {\n      allowListEntry = await this.getClaimerProofs(tokenId, addressToCheck);\n      if (!allowListEntry && (this.isLegacySinglePhaseDrop(this.contractWrapper) || this.isLegacyMultiPhaseDrop(this.contractWrapper))) {\n        // exclusive allowlist behavior\n        reasons.push(ClaimEligibility.AddressNotAllowed);\n        return reasons;\n      }\n      if (allowListEntry) {\n        try {\n          const claimVerification = await this.prepareClaim(tokenId, quantity, false, addressToCheck);\n          let validMerkleProof;\n          if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n            activeConditionIndex = await this.contractWrapper.readContract.getActiveClaimConditionId(tokenId);\n            // legacy verifyClaimerMerkleProofs function\n            [validMerkleProof] = await this.contractWrapper.readContract.verifyClaimMerkleProof(activeConditionIndex, addressToCheck, tokenId, quantity, claimVerification.proofs, claimVerification.maxClaimable);\n            if (!validMerkleProof) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          } else if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n            [validMerkleProof] = await this.contractWrapper.readContract.verifyClaimMerkleProof(tokenId, addressToCheck, quantity, {\n              proof: claimVerification.proofs,\n              maxQuantityInAllowlist: claimVerification.maxClaimable\n            });\n            if (!validMerkleProof) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          } else if (this.isNewSinglePhaseDrop(this.contractWrapper)) {\n            await this.contractWrapper.readContract.verifyClaim(tokenId, addressToCheck, quantity, claimVerification.currencyAddress, claimVerification.price, {\n              proof: claimVerification.proofs,\n              quantityLimitPerWallet: claimVerification.maxClaimable,\n              currency: claimVerification.currencyAddressInProof,\n              pricePerToken: claimVerification.priceInProof\n            });\n            // TODO (cc) in new override format, anyone can claim (no allow list restriction)\n            // TODO (cc) instead check if maxClaimablePerWallet is 0 and this address has no overrides\n            // TODO (cc) meaning this address is not allowed to claim\n            if (claimCondition.maxClaimablePerWallet === \"0\" && claimVerification.maxClaimable === ethers.constants.MaxUint256 || claimVerification.maxClaimable === BigNumber.from(0)) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          } else if (this.isNewMultiphaseDrop(this.contractWrapper)) {\n            activeConditionIndex = await this.contractWrapper.readContract.getActiveClaimConditionId(tokenId);\n            await this.contractWrapper.readContract.verifyClaim(activeConditionIndex, addressToCheck, tokenId, quantity, claimVerification.currencyAddress, claimVerification.price, {\n              proof: claimVerification.proofs,\n              quantityLimitPerWallet: claimVerification.maxClaimable,\n              currency: claimVerification.currencyAddressInProof,\n              pricePerToken: claimVerification.priceInProof\n            });\n            if (claimCondition.maxClaimablePerWallet === \"0\" && claimVerification.maxClaimable === ethers.constants.MaxUint256 || claimVerification.maxClaimable === BigNumber.from(0)) {\n              reasons.push(ClaimEligibility.AddressNotAllowed);\n              return reasons;\n            }\n          }\n        } catch (e) {\n          console.warn(\"Merkle proof verification failed:\", \"reason\" in e ? e.reason : e);\n          reasons.push(ClaimEligibility.AddressNotAllowed);\n          return reasons;\n        }\n      }\n    }\n\n    // TODO (cc) check for max claimable per wallet and how much each wallet has claimed\n    if (this.isNewSinglePhaseDrop(this.contractWrapper) || this.isNewMultiphaseDrop(this.contractWrapper)) {\n      if (!hasAllowList || hasAllowList && !allowListEntry) {\n        if (claimCondition.maxClaimablePerWallet === \"0\") {\n          reasons.push(ClaimEligibility.AddressNotAllowed);\n          return reasons;\n        }\n      }\n    }\n\n    // check for claim timestamp between claims\n    let [lastClaimedTimestamp, timestampForNextClaim] = [BigNumber.from(0), BigNumber.from(0)];\n    if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n      activeConditionIndex = await this.contractWrapper.readContract.getActiveClaimConditionId(tokenId);\n      [lastClaimedTimestamp, timestampForNextClaim] = await this.contractWrapper.readContract.getClaimTimestamp(tokenId, activeConditionIndex, addressToCheck);\n    } else if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n      [lastClaimedTimestamp, timestampForNextClaim] = await this.contractWrapper.readContract.getClaimTimestamp(tokenId, addressToCheck);\n    }\n    const now = BigNumber.from(Date.now()).div(1000);\n    if (lastClaimedTimestamp.gt(0) && now.lt(timestampForNextClaim)) {\n      // contract will return MaxUint256 if user has already claimed and cannot claim again\n      if (timestampForNextClaim.eq(constants.MaxUint256)) {\n        reasons.push(ClaimEligibility.AlreadyClaimed);\n      } else {\n        reasons.push(ClaimEligibility.WaitBeforeNextClaimTransaction);\n      }\n    }\n\n    // if not within a browser conetext, check for wallet balance.\n    // In browser context, let the wallet do that job\n    if (claimCondition.price.gt(0) && isNode()) {\n      const totalPrice = claimCondition.price.mul(quantity);\n      const provider = this.contractWrapper.getProvider();\n      if (isNativeToken(claimCondition.currencyAddress)) {\n        const balance = await provider.getBalance(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      } else {\n        const erc20 = new ContractWrapper(provider, claimCondition.currencyAddress, ERC20Abi, {});\n        const balance = await erc20.readContract.balanceOf(addressToCheck);\n        if (balance.lt(totalPrice)) {\n          reasons.push(ClaimEligibility.NotEnoughTokens);\n        }\n      }\n    }\n    return reasons;\n  }\n\n  /**\n   * Returns allow list information and merkle proofs for the given address.\n   * @param tokenId - the token ID to check\n   * @param claimerAddress - the claimer address\n   * @param claimConditionId - optional the claim condition id to get the proofs for\n   */\n  async getClaimerProofs(tokenId, claimerAddress, claimConditionId) {\n    const claimCondition = await this.get(tokenId, claimConditionId);\n    const merkleRoot = claimCondition.merkleRoot;\n    const merkleRootArray = ethers.utils.stripZeros(merkleRoot);\n    if (merkleRootArray.length > 0) {\n      const metadata = await this.metadata.get();\n      return await fetchSnapshotEntryForAddress(claimerAddress, merkleRoot.toString(), metadata.merkle, this.contractWrapper.getProvider(), this.storage, this.getSnapshotFormatVersion());\n    } else {\n      return null;\n    }\n  }\n\n  /** ***************************************\n   * WRITE FUNCTIONS\n   *****************************************/\n\n  /**\n   * Set claim conditions on a single NFT\n   *\n   * @remarks Sets the public mint conditions that need to be fulfilled by users to claim a particular NFT in this contract.\n   *\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   *\n   * // Optionally specify addresses that can claim\n   * const snapshots = ['0x...', '0x...']\n   *\n   * // Or alternatively, you can pass snapshots with the max number of NFTs each address can claim\n   * // const snapshots = [{ address: '0x...', maxClaimable: 1 }, { address: '0x...', maxClaimable: 2 }]\n   *\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: snapshots, // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   *\n   * const tokenId = 0; // the id of the NFT to set claim conditions on\n   * await dropContract.claimConditions.set(tokenId, claimConditions);\n   * ```\n   *\n   * @param tokenId - The id of the NFT to set the claim conditions on\n   * @param claimConditionInputs - The claim conditions\n   * @param resetClaimEligibilityForAll - Whether to reset the state of who already claimed NFTs previously\n   */\n  async set(tokenId, claimConditionInputs) {\n    let resetClaimEligibilityForAll = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return this.setBatch([{\n      tokenId,\n      claimConditions: claimConditionInputs\n    }], resetClaimEligibilityForAll);\n  }\n\n  /**\n   * Set claim conditions on multiple NFTs at once\n   *\n   * @remarks Sets the claim conditions that need to be fulfilled by users to claim the given NFTs in this contract.\n   *\n   * @example\n   * ```javascript\n   * const claimConditionsForTokens = [\n   *   {\n   *     tokenId: 0,\n   *     claimConditions: [{\n   *       startTime: new Date(), // start the claim phase now\n   *       maxQuantity: 2, // limit how many mints for this tokenId\n   *       price: 0.01, // price for this tokenId\n   *       snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *     }]\n   *   },\n   *   {\n   *     tokenId: 1,\n   *     claimConditions: [{\n   *       startTime: new Date(),\n   *       price: 0.08, // different price for this tokenId\n   *     }]\n   *   },\n   * ];\n   *\n   * await dropContract.claimConditions.setBatch(claimConditionsForTokens);\n   * ```\n   *\n   * @param claimConditionsForToken - The claim conditions for each NFT\n   * @param resetClaimEligibilityForAll - Whether to reset the state of who already claimed NFTs previously\n   */\n  async setBatch(claimConditionsForToken) {\n    let resetClaimEligibilityForAll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    const merkleInfo = {};\n    const processedClaimConditions = await Promise.all(claimConditionsForToken.map(async _ref => {\n      let {\n        tokenId,\n        claimConditions\n      } = _ref;\n      // sanitize for single phase deletions\n      let claimConditionsProcessed = claimConditions;\n      if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n        resetClaimEligibilityForAll = true;\n        if (claimConditions.length === 0) {\n          claimConditionsProcessed = [{\n            startTime: new Date(0),\n            currencyAddress: ethers.constants.AddressZero,\n            price: 0,\n            maxClaimableSupply: 0,\n            maxClaimablePerWallet: 0,\n            waitInSeconds: 0,\n            merkleRootHash: utils.hexZeroPad([0], 32),\n            snapshot: []\n          }];\n        } else if (claimConditions.length > 1) {\n          throw new Error(\"Single phase drop contract cannot have multiple claim conditions, only one is allowed\");\n        }\n      }\n      // if using new snapshot format, make sure that maxClaimablePerWallet is set if allowlist is set as well\n      if (this.isNewSinglePhaseDrop(this.contractWrapper) || this.isNewMultiphaseDrop(this.contractWrapper)) {\n        claimConditionsProcessed.forEach(cc => {\n          if (cc.snapshot && cc.snapshot.length > 0 && (cc.maxClaimablePerWallet === undefined || cc.maxClaimablePerWallet === \"unlimited\")) {\n            throw new Error(\"maxClaimablePerWallet must be set to a specific value when an allowlist is set.\\n\" + \"Set it to 0 to only allow addresses in the allowlist to claim the amount specified in the allowlist.\" + \"\\n\\nex:\\n\" + \"contract.claimConditions.set(tokenId, [{ snapshot: [{ address: '0x...', maxClaimable: 1 }], maxClaimablePerWallet: 0 }])\");\n          }\n          if (cc.snapshot && cc.snapshot.length > 0 && cc.maxClaimablePerWallet?.toString() === \"0\" && cc.snapshot.map(s => {\n            if (typeof s === \"string\") {\n              return 0;\n            } else {\n              return Number(s.maxClaimable?.toString() || 0);\n            }\n          }).reduce((acc, current) => {\n            return acc + current;\n          }, 0) === 0) {\n            throw new Error(\"maxClaimablePerWallet is set to 0, and all addresses in the allowlist have max claimable 0. This means that no one can claim.\");\n          }\n        });\n      }\n      // process inputs\n      const {\n        snapshotInfos,\n        sortedConditions\n      } = await processClaimConditionInputs(claimConditionsProcessed, 0, this.contractWrapper.getProvider(), this.storage, this.getSnapshotFormatVersion());\n      snapshotInfos.forEach(s => {\n        merkleInfo[s.merkleRoot] = s.snapshotUri;\n      });\n      return {\n        tokenId,\n        sortedConditions\n      };\n    }));\n    const metadata = await this.metadata.get();\n    const encoded = [];\n\n    // keep the old merkle roots from other tokenIds\n    for (const key of Object.keys(metadata.merkle || {})) {\n      merkleInfo[key] = metadata.merkle[key];\n    }\n\n    // upload new merkle roots to snapshot URIs if updated\n    if (!deepEqual(metadata.merkle, merkleInfo)) {\n      const mergedMetadata = this.metadata.parseInputMetadata({\n        ...metadata,\n        merkle: merkleInfo\n      });\n      // using internal method to just upload, avoids one contract call\n      const contractURI = await this.metadata._parseAndUploadMetadata(mergedMetadata);\n      if (hasFunction(\"setContractURI\", this.contractWrapper)) {\n        encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"setContractURI\", [contractURI]));\n      } else {\n        throw new Error(\"Setting a merkle root requires implementing ContractMetadata in your contract to support storing a merkle root.\");\n      }\n    }\n    processedClaimConditions.forEach(_ref2 => {\n      let {\n        tokenId,\n        sortedConditions\n      } = _ref2;\n      if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n        encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"setClaimConditions\", [tokenId, abstractContractModelToLegacy(sortedConditions[0]), resetClaimEligibilityForAll]));\n      } else if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n        encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"setClaimConditions\", [tokenId, sortedConditions.map(abstractContractModelToLegacy), resetClaimEligibilityForAll]));\n      } else if (this.isNewSinglePhaseDrop(this.contractWrapper)) {\n        encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"setClaimConditions\", [tokenId, abstractContractModelToNew(sortedConditions[0]), resetClaimEligibilityForAll]));\n      } else if (this.isNewMultiphaseDrop(this.contractWrapper)) {\n        encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"setClaimConditions\", [tokenId, sortedConditions.map(abstractContractModelToNew), resetClaimEligibilityForAll]));\n      } else {\n        throw new Error(\"Contract does not support claim conditions\");\n      }\n    });\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded)\n    };\n  }\n\n  /**\n   * Update a single claim condition with new data.\n   * @param tokenId - the token id to update\n   * @param index - the index of the claim condition to update, as given by the index from the result of `getAll()`\n   * @param claimConditionInput - the new data to update, previous data will be retained\n   */\n  async update(tokenId, index, claimConditionInput) {\n    const existingConditions = await this.getAll(tokenId);\n    const newConditionInputs = await updateExistingClaimConditions(index, claimConditionInput, existingConditions);\n    return await this.set(tokenId, newConditionInputs);\n  }\n\n  /**\n   * Returns proofs and the overrides required for the transaction.\n   *\n   * @returns - `overrides` and `proofs` as an object.\n   */\n  async prepareClaim(tokenId, quantity, checkERC20Allowance, address) {\n    const addressToClaim = address ? address : await this.contractWrapper.getSignerAddress();\n    return prepareClaim(addressToClaim, quantity, await this.getActive(tokenId), async () => (await this.metadata.get()).merkle, 0, this.contractWrapper, this.storage, checkERC20Allowance, this.getSnapshotFormatVersion());\n  }\n  async getClaimArguments(tokenId, destinationAddress, quantity, claimVerification) {\n    if (this.isLegacyMultiPhaseDrop(this.contractWrapper)) {\n      return [destinationAddress, tokenId, quantity, claimVerification.currencyAddress, claimVerification.price, claimVerification.proofs, claimVerification.maxClaimable];\n    } else if (this.isLegacySinglePhaseDrop(this.contractWrapper)) {\n      return [destinationAddress, tokenId, quantity, claimVerification.currencyAddress, claimVerification.price, {\n        proof: claimVerification.proofs,\n        maxQuantityInAllowlist: claimVerification.maxClaimable\n      }, ethers.utils.toUtf8Bytes(\"\")];\n    }\n    return [destinationAddress, tokenId, quantity, claimVerification.currencyAddress, claimVerification.price, {\n      proof: claimVerification.proofs,\n      quantityLimitPerWallet: claimVerification.maxClaimable,\n      pricePerToken: claimVerification.priceInProof,\n      currency: claimVerification.currencyAddressInProof\n    }, ethers.utils.toUtf8Bytes(\"\")];\n  }\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   */\n  async getClaimTransaction(destinationAddress, tokenId, quantity, options) {\n    if (options?.pricePerToken) {\n      throw new Error(\"Price per token should be set via claim conditions by calling `contract.erc1155.claimConditions.set()`\");\n    }\n    const claimVerification = await this.prepareClaim(tokenId, quantity, options?.checkERC20Allowance || true);\n    return TransactionTask.make({\n      contractWrapper: this.contractWrapper,\n      functionName: \"claim\",\n      args: await this.getClaimArguments(tokenId, destinationAddress, quantity, claimVerification),\n      overrides: claimVerification.overrides\n    });\n  }\n  isNewSinglePhaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC1155ClaimConditionsV2\");\n  }\n  isNewMultiphaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC1155ClaimPhasesV2\");\n  }\n  isLegacySinglePhaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC1155ClaimConditionsV1\");\n  }\n  isLegacyMultiPhaseDrop(contractWrapper) {\n    return detectContractFeature(contractWrapper, \"ERC1155ClaimPhasesV1\");\n  }\n  getSnapshotFormatVersion() {\n    return this.isLegacyMultiPhaseDrop(this.contractWrapper) || this.isLegacySinglePhaseDrop(this.contractWrapper) ? SnapshotFormatVersion.V1 : SnapshotFormatVersion.V2;\n  }\n}\n\n/**\n * Manages history for Edition Drop contracts\n * @public\n */\nclass DropErc1155History {\n  constructor(events) {\n    _defineProperty(this, \"events\", void 0);\n    this.events = events;\n  }\n\n  /**\n   * Get all claimer addresses\n   *\n   * @remarks Get a list of all the addresses that have claimed a token\n   * @param tokenId - the tokenId of the NFT to get the addresses of*\n   * @returns - A unique list of addresses that claimed the token\n   * @example\n   * ```javascript\n   * const tokenId = \"0\";\n   * const allClaimerAddresses = await contract.history.getAllClaimerAddresses(tokenId);\n   * ```\n   */\n  async getAllClaimerAddresses(tokenId) {\n    const a = (await this.events.getEvents(\"TokensClaimed\")).filter(e => e.data && BigNumber.isBigNumber(e.data.tokenId) ? e.data.tokenId.eq(tokenId) : false);\n    return Array.from(new Set(a.filter(b => typeof b.data?.claimer === \"string\").map(b => b.data.claimer)));\n  }\n}\n\nclass Erc20Burnable {\n  constructor(erc20, contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_TOKEN_BURNABLE.name);\n    _defineProperty(this, \"erc20\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.erc20 = erc20;\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the connected wallet\n   *\n   * @example\n   * ```javascript\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.token.burn.tokens(amount);\n   * ```\n   */\n  async tokens(amount) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burn\", [await this.erc20.normalizeAmount(amount)])\n    };\n  }\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the specified wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const holderAddress = \"{{wallet_address}}\";\n   *\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.token.burn.from(holderAddress, amount);\n   * ```\n   */\n  async from(holder, amount) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burnFrom\", [holder, await this.erc20.normalizeAmount(amount)])\n    };\n  }\n}\n\n/**\n * Configure and claim ERC20 tokens\n * @remarks Manage claim phases and claim ERC20 tokens that have been lazily minted.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.token.drop.claim.to(\"0x...\", quantity);\n * ```\n */\nclass Erc20ClaimableWithConditions {\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await contract.token.drop.claim.conditions.set(claimConditions);\n   * ```\n   */\n\n  constructor(erc20, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_TOKEN_CLAIM_CONDITIONS_V2.name);\n    _defineProperty(this, \"conditions\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc20\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.erc20 = erc20;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    const metadata = new ContractMetadata(this.contractWrapper, CustomContractSchema, this.storage);\n    this.conditions = new DropClaimConditions(this.contractWrapper, metadata, this.storage);\n  }\n\n  /**\n   * Claim a certain amount of tokens to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim Tokens.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 42.69; // how many tokens you want to claim\n   *\n   * const tx = await contract.token.drop.claim.to(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param amount - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   * @param claimData\n   * @returns - The transaction receipt\n   */\n  async to(destinationAddress, amount, options) {\n    const quantity = await this.erc20.normalizeAmount(amount);\n    const task = await this.conditions.getClaimTransaction(destinationAddress, quantity, options);\n    return await task.execute();\n  }\n}\n\n/**\n * Configure and claim ERC20 tokens\n * @remarks Manage claim phases and claim ERC20 tokens that have been lazily minted.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.token.drop.claim.to(\"0x...\", quantity);\n * ```\n */\nclass Erc20Droppable {\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await contract.nft.drop.claim.conditions.set(claimConditions);\n   * ```\n   */\n\n  constructor(erc20, contractWrapper, storage) {\n    _defineProperty(this, \"claim\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc20\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.erc20 = erc20;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.claim = new Erc20ClaimableWithConditions(this.erc20, this.contractWrapper, this.storage);\n  }\n}\n\n/**\n * Mint Many ERC20 Tokens at once\n * @remarks Token batch minting functionality that handles unit parsing for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.token.mint.batch.to(walletAddress, [nftMetadata1, nftMetadata2, ...]);\n * ```\n * @public\n */\nclass Erc20BatchMintable {\n  constructor(erc20, contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_TOKEN_BATCH_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc20\", void 0);\n    this.erc20 = erc20;\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Mint Tokens To Many Wallets\n   *\n   * @remarks Mint tokens to many wallets in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 0.2, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 1.4,\n   *  }\n   * ]\n   *\n   * await contract.token.mint.batch(data);\n   * ```\n   */\n  async to(args) {\n    const encoded = [];\n    for (const arg of args) {\n      encoded.push(this.contractWrapper.readContract.interface.encodeFunctionData(\"mintTo\", [arg.toAddress, await this.erc20.normalizeAmount(arg.amount)]));\n    }\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded)\n    };\n  }\n}\n\n/**\n * Mint ERC20 Tokens\n * @remarks Token minting functionality that handles unit parsing for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.mint.to(walletAddress, nftMetadata);\n * ```\n * @public\n */\nclass Erc20Mintable {\n  /**\n   * Batch mint Tokens to many addresses\n   */\n\n  constructor(erc20, contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_TOKEN_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc20\", void 0);\n    _defineProperty(this, \"batch\", void 0);\n    this.erc20 = erc20;\n    this.contractWrapper = contractWrapper;\n    this.batch = this.detectErc20BatchMintable();\n  }\n\n  /**\n   * Mint Tokens\n   *\n   * @remarks Mint tokens to a specified address.\n   *\n   * @example\n   * ```javascript\n   * const toAddress = \"{{wallet_address}}\"; // Address of the wallet you want to mint the tokens to\n   * const amount = \"1.5\"; // The amount of this token you want to mint\n   * await contract.token.mint.to(toAddress, amount);\n   * ```\n   */\n  async to(to, amount) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"mintTo\", [to, await this.erc20.normalizeAmount(amount)])\n    };\n  }\n  detectErc20BatchMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC20BatchMintable\")) {\n      return new Erc20BatchMintable(this.erc20, this.contractWrapper);\n    }\n    return undefined;\n  }\n}\n\n/**\n * Enables generating ERC20 Tokens with rules and an associated signature, which can then be minted by anyone securely\n * @public\n */\n// TODO consolidate into a single class\nclass Erc20SignatureMintable {\n  constructor(contractWrapper, roles) {\n    _defineProperty(this, \"featureName\", FEATURE_TOKEN_SIGNATURE_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"roles\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.roles = roles;\n  }\n\n  /**\n   * Mint tokens from a signature\n   *\n   * @remarks Mint a certain amount of tokens from a previously generated signature.\n   *\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `generate()` documentation\n   * const signedPayload = contract.erc20.signature.generate(payload);\n   *\n   * // Use the signed payload to mint the tokens\n   * const tx = contract.erc20.signature.mint(signedPayload);\n   * ```\n   * @param signedPayload - the previously generated payload and signature with {@link Erc20SignatureMintable.generate}\n   * @twfeature ERC20SignatureMintable\n   */\n  async mint(signedPayload) {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await setErc20Allowance(this.contractWrapper, BigNumber.from(message.price), mintRequest.currencyAddress, overrides);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"mintWithSignature\", [message, signature], overrides)\n    };\n  }\n\n  /**\n   * Mint any number of generated tokens signatures at once\n   * @remarks Mint multiple token signatures in one transaction. Note that this is only possible for free mints (cannot batch mints with a price attached to it for security reasons)\n   * @param signedPayloads - the array of signed payloads to mint\n   * @twfeature ERC20SignatureMintable\n   */\n  async mintBatch(signedPayloads) {\n    const contractPayloads = await Promise.all(signedPayloads.map(async s => {\n      const message = await this.mapPayloadToContractStruct(s.payload);\n      const signature = s.signature;\n      const price = s.payload.price;\n      if (BigNumber.from(price).gt(0)) {\n        throw new Error(\"Can only batch free mints. For mints with a price, use regular mint()\");\n      }\n      return {\n        message,\n        signature\n      };\n    }));\n    const encoded = contractPayloads.map(p => {\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\"mintWithSignature\", [p.message, p.signature]);\n    });\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded)\n    };\n  }\n\n  /**\n   * Verify that a payload is correctly signed\n   * @param signedPayload - the payload to verify\n   * @twfeature ERC20SignatureMintable\n   *\n   * ```javascript\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   quantity: 4.2, // The quantity of tokens to be minted\n   *   to: {{wallet_address}}, // Who will receive the tokens\n   *   price: 0.5, // the price to pay for minting those tokens\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: startTime, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now,\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this token mint\n   * };\n   *\n   * const signedPayload = await contract.erc20.signature.generate(payload);\n   * // Now you can verify if the signed payload is valid\n   * const isValid = await contract.erc20.signature.verify(signedPayload);\n   * ```\n   */\n  async verify(signedPayload) {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const verification = await this.contractWrapper.readContract.verify(message, signature);\n    return verification[0];\n  }\n\n  /**\n   * Generate a signature that can be used to mint a certain amount of tokens\n   *\n   * @remarks Takes in a quantity of tokens, some conditions for how it can be minted and signs it with your private key. The generated signature can then be used to mint those tokens using the exact payload and signature generated.\n   *\n   * @example\n   * ```javascript\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   quantity: 4.2, // The quantity of tokens to be minted\n   *   to: {{wallet_address}}, // Who will receive the tokens\n   *   price: 0.5, // the price to pay for minting those tokens\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: startTime, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now,\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this token mint\n   * };\n   *\n   * const signedPayload = await contract.erc20.signature.generate(payload);\n   * // now anyone can use these to mint the NFT using `contract.erc20.signature.mint(signedPayload)`\n   * ```\n   * @param mintRequest - the payload to sign\n   * @returns the signed payload and the corresponding signature\n   * @twfeature ERC20SignatureMintable\n   */\n  async generate(mintRequest) {\n    return (await this.generateBatch([mintRequest]))[0];\n  }\n\n  /**\n   * Generate a batch of signatures that can be used to mint many token signatures.\n   *\n   * @remarks See {@link Erc20SignatureMintable.generate}\n   *\n   * @param payloadsToSign - the payloads to sign\n   * @returns an array of payloads and signatures\n   * @twfeature ERC20SignatureMintable\n   */\n  async generateBatch(payloadsToSign) {\n    await this.roles?.verify([\"minter\"], await this.contractWrapper.getSignerAddress());\n    const parsedRequests = payloadsToSign.map(m => Signature20PayloadInput.parse(m));\n    const chainId = await this.contractWrapper.getChainID();\n    const signer = this.contractWrapper.getSigner();\n    invariant(signer, \"No signer available\");\n\n    // ERC20Permit (EIP-712) spec differs from signature mint 721, 1155.\n    const name = await this.contractWrapper.readContract.name();\n    return await Promise.all(parsedRequests.map(async m => {\n      const finalPayload = Signature20PayloadOutput.parse(m);\n      const signature = await this.contractWrapper.signTypedData(signer, {\n        name,\n        version: \"1\",\n        chainId,\n        verifyingContract: this.contractWrapper.readContract.address\n      }, {\n        MintRequest: MintRequest20\n      }, await this.mapPayloadToContractStruct(finalPayload));\n      return {\n        payload: finalPayload,\n        signature: signature.toString()\n      };\n    }));\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Maps a payload to the format expected by the contract\n   *\n   * @internal\n   *\n   * @param mintRequest - The payload to map.\n   * @returns - The mapped payload.\n   */\n  async mapPayloadToContractStruct(mintRequest) {\n    const normalizedPrice = await normalizePriceValue(this.contractWrapper.getProvider(), mintRequest.price, mintRequest.currencyAddress);\n    const amountWithDecimals = ethers.utils.parseUnits(mintRequest.quantity, await this.contractWrapper.readContract.decimals());\n    return {\n      to: mintRequest.to,\n      primarySaleRecipient: mintRequest.primarySaleRecipient,\n      quantity: amountWithDecimals,\n      price: normalizedPrice,\n      currency: mintRequest.currencyAddress,\n      validityEndTimestamp: mintRequest.mintEndTime,\n      validityStartTimestamp: mintRequest.mintStartTime,\n      uid: mintRequest.uid\n    };\n  }\n}\n\n/**\n * Standard ERC20 Token functions\n * @remarks Basic functionality for a ERC20 contract that handles all unit transformation for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.erc20.transfer(walletAddress, amount);\n * ```\n * @public\n */\nclass Erc20 {\n  /**\n   * Mint tokens\n   */\n\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    _defineProperty(this, \"featureName\", FEATURE_TOKEN.name);\n    _defineProperty(this, \"mintable\", void 0);\n    _defineProperty(this, \"burnable\", void 0);\n    _defineProperty(this, \"droppable\", void 0);\n    _defineProperty(this, \"signatureMintable\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_chainId\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.mintable = this.detectErc20Mintable();\n    this.burnable = this.detectErc20Burnable();\n    this.droppable = this.detectErc20Droppable();\n    this.signatureMintable = this.detectErc20SignatureMintable();\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  /**\n   * @internal\n   */\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  ////// Standard ERC20 Extension //////\n\n  /**\n   * Get the token Metadata (name, symbol, etc...)\n   *\n   * @example\n   * ```javascript\n   * const token = await contract.erc20.get();\n   * ```\n   * @returns The token metadata\n   * @twfeature ERC20\n   */\n  async get() {\n    return await fetchCurrencyMetadata(this.contractWrapper.getProvider(), this.getAddress());\n  }\n\n  /**\n   * Get Token Balance for the currently connected wallet\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.erc20.balance();\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   * @twfeature ERC20\n   */\n  async balance() {\n    return await this.balanceOf(await this.contractWrapper.getSignerAddress());\n  }\n\n  /**\n   * Get Token Balance\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.erc20.balanceOf(walletAddress);\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   * @twfeature ERC20\n   */\n  async balanceOf(address) {\n    return this.getValue(await this.contractWrapper.readContract.balanceOf(address));\n  }\n\n  /**\n   * The total supply for this Token\n   * @remarks Get how much supply has been minted\n   * @example\n   * ```javascript\n   * const balance = await contract.erc20.totalSupply();\n   * ```\n   * @twfeature ERC20\n   */\n  async totalSupply() {\n    return await this.getValue(await this.contractWrapper.readContract.totalSupply());\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of a 'spender' wallet over the connected wallet's funds - the allowance of a different address for a token is the amount of tokens that the `spender` wallet is allowed to spend on behalf of the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token allowance\n   * const spenderAddress = \"0x...\";\n   * const allowance = await contract.erc20.allowance(spenderAddress);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   * @twfeature ERC20\n   */\n  async allowance(spender) {\n    return await this.allowanceOf(await this.contractWrapper.getSignerAddress(), spender);\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of one wallet over another wallet's funds - the allowance of a different address for a token is the amount of tokens that the wallet is allowed to spend on behalf of the specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet who owns the funds\n   * const owner = \"{{wallet_address}}\";\n   * // Address of the wallet to check token allowance\n   * const spender = \"0x...\";\n   * const allowance = await contract.erc20.allowanceOf(owner, spender);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   * @twfeature ERC20\n   */\n  async allowanceOf(owner, spender) {\n    return await this.getValue(await this.contractWrapper.readContract.allowance(owner, spender));\n  }\n\n  /**\n   * Transfer Tokens\n   *\n   * @remarks Transfer tokens from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The amount of tokens you want to send\n   * const amount = 0.1;\n   * await contract.erc20.transfer(toAddress, amount);\n   * ```\n   * @twfeature ERC20\n   */\n  async transfer(to, amount) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"transfer\", [to, await this.normalizeAmount(amount)])\n    };\n  }\n\n  /**\n   * Transfer Tokens From Address\n   *\n   * @remarks Transfer tokens from one wallet to another\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const fromAddress = \"{{wallet_address}}\";\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The number of tokens you want to send\n   * const amount = 1.2\n   * // Note that the connected wallet must have approval to transfer the tokens of the fromAddress\n   * await contract.erc20.transferFrom(fromAddress, toAddress, amount);\n   * ```\n   * @twfeature ERC20\n   */\n  async transferFrom(from, to, amount) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"transferFrom\", [from, to, await this.normalizeAmount(amount)])\n    };\n  }\n\n  /**\n   * Allows the specified `spender` wallet to transfer the given `amount` of tokens to another wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to allow transfers from\n   * const spenderAddress = \"0x...\";\n   * // The number of tokens to give as allowance\n   * const amount = 100\n   * await contract.erc20.setAllowance(spenderAddress, amount);\n   * ```\n   * @twfeature ERC20\n   */\n  async setAllowance(spender, amount) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"approve\", [spender, await this.normalizeAmount(amount)])\n    };\n  }\n\n  /**\n   * Transfer Tokens To Many Wallets\n   *\n   * @remarks Mint tokens from the connected wallet to many wallets\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 100, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 100,\n   *  }\n   * ]\n   *\n   * await contract.erc20.transferBatch(data);\n   * ```\n   */\n  async transferBatch(args) {\n    const encoded = await Promise.all(args.map(async arg => {\n      const amountWithDecimals = await this.normalizeAmount(arg.amount);\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\"transfer\", [arg.toAddress, amountWithDecimals]);\n    }));\n    await this.contractWrapper.multiCall(encoded);\n  }\n\n  ////// ERC20 Mintable Extension //////\n\n  /**\n   * Mint Tokens\n   *\n   * @remarks Mint tokens to the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * const amount = \"1.5\"; // The amount of this token you want to mint\n   * await contract.erc20.mint(toAddress, amount);\n   * ```\n   * @twfeature ERC20Mintable\n   */\n  async mint(amount) {\n    return this.mintTo(await this.contractWrapper.getSignerAddress(), amount);\n  }\n\n  /**\n   * Mint Tokens\n   *\n   * @remarks Mint tokens to a specified address.\n   *\n   * @example\n   * ```javascript\n   * const toAddress = \"{{wallet_address}}\"; // Address of the wallet you want to mint the tokens to\n   * const amount = \"1.5\"; // The amount of this token you want to mint\n   * await contract.erc20.mintTo(toAddress, amount);\n   * ```\n   * @twfeature ERC20Mintable\n   */\n  async mintTo(receiver, amount) {\n    return assertEnabled(this.mintable, FEATURE_TOKEN_MINTABLE).to(receiver, amount);\n  }\n\n  ////// ERC20 BatchMintable Extension //////\n\n  /**\n   * Mint Tokens To Many Wallets\n   *\n   * @remarks Mint tokens to many wallets in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 0.2, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 1.4,\n   *  }\n   * ]\n   *\n   * await contract.mintBatchTo(data);\n   * ```\n   * @twfeature ERC20BatchMintable\n   */\n  async mintBatchTo(args) {\n    return assertEnabled(this.mintable?.batch, FEATURE_TOKEN_BATCH_MINTABLE).to(args);\n  }\n\n  ////// ERC20 Burnable Extension //////\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the connected wallet\n   *\n   * @example\n   * ```javascript\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.erc20.burn(amount);\n   * ```\n   * @twfeature ERC20Burnable\n   */\n  async burn(amount) {\n    return assertEnabled(this.burnable, FEATURE_TOKEN_BURNABLE).tokens(amount);\n  }\n\n  /**\n   * Burn Tokens\n   *\n   * @remarks Burn tokens held by the specified wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const holderAddress = \"{{wallet_address}}\";\n   *\n   * // The amount of this token you want to burn\n   * const amount = 1.2;\n   *\n   * await contract.erc20.burnFrom(holderAddress, amount);\n   * ```\n   * @twfeature ERC20Burnable\n   */\n  async burnFrom(holder, amount) {\n    return assertEnabled(this.burnable, FEATURE_TOKEN_BURNABLE).from(holder, amount);\n  }\n\n  ////// ERC20 Claimable Extension //////\n\n  /**\n   * Claim a certain amount of tokens to the connected Wallet\n   *\n   * @remarks Let the specified wallet claim Tokens.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 42.69; // how many tokens you want to claim\n   *\n   * const tx = await contract.erc20.claim(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param amount - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   * @param claimData\n   * @returns - The transaction receipt\n   * @twfeature ERC20ClaimableWithConditions\n   */\n  async claim(amount, options) {\n    return this.claimTo(await this.contractWrapper.getSignerAddress(), amount, options);\n  }\n\n  /**\n   * Claim a certain amount of tokens to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim Tokens.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 42.69; // how many tokens you want to claim\n   *\n   * const tx = await contract.erc20.claim(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param amount - Quantity of the tokens you want to claim\n   * @param checkERC20Allowance - Optional, check if the wallet has enough ERC20 allowance to claim the tokens, and if not, approve the transfer\n   * @param claimData\n   * @returns - The transaction receipt\n   * @twfeature ERC20ClaimableWithConditions\n   */\n  async claimTo(destinationAddress, amount, options) {\n    return assertEnabled(this.droppable?.claim, FEATURE_TOKEN_CLAIM_CONDITIONS_V2).to(destinationAddress, amount, options);\n  }\n\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await contract.erc20.claimConditions.set(claimConditions);\n   * ```\n   * @twfeature ERC20ClaimableWithConditions\n   */\n  get claimConditions() {\n    return assertEnabled(this.droppable?.claim, FEATURE_TOKEN_CLAIM_CONDITIONS_V2).conditions;\n  }\n\n  ////// ERC20 SignatureMint Extension //////\n\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic tokens with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.erc20.signature.generate()` documentation\n   * const signedPayload = contract.erc20.signature().generate(payload);\n   *\n   * // now the payload can be used to mint tokens\n   * const tx = contract.erc20.signature.mint(signedPayload);\n   * ```\n   * @twfeature ERC20SignatureMintable\n   */\n  get signature() {\n    return assertEnabled(this.signatureMintable, FEATURE_TOKEN_SIGNATURE_MINTABLE);\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * returns the wei amount from a token amount\n   * @internal\n   * @param amount\n   */\n  async normalizeAmount(amount) {\n    const decimals = await this.contractWrapper.readContract.decimals();\n    return ethers.utils.parseUnits(AmountSchema.parse(amount), decimals);\n  }\n\n  /**\n   * @internal\n   */\n  async getValue(value) {\n    return await fetchCurrencyValue(this.contractWrapper.getProvider(), this.getAddress(), BigNumber.from(value));\n  }\n  detectErc20Mintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC20\")) {\n      return new Erc20Mintable(this, this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc20Burnable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC20Burnable\")) {\n      return new Erc20Burnable(this, this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc20Droppable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC20ClaimConditionsV1\") || detectContractFeature(this.contractWrapper, \"ERC20ClaimConditionsV2\") || detectContractFeature(this.contractWrapper, \"ERC20ClaimPhasesV1\") || detectContractFeature(this.contractWrapper, \"ERC20ClaimPhasesV2\")) {\n      return new Erc20Droppable(this, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc20SignatureMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC20SignatureMintable\")) {\n      return new Erc20SignatureMintable(this.contractWrapper);\n    }\n    return undefined;\n  }\n}\n\n/**\n * Manages history for Token contracts\n * @public\n */\nclass TokenERC20History {\n  constructor(contractWrapper, events) {\n    _defineProperty(this, \"events\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.events = events;\n  }\n\n  /**\n   * Get all holder balances\n   *\n   * @remarks Lets you get all token holders and their corresponding balances\n   * @returns - A JSON object of all token holders and their corresponding balances\n   * @example\n   * ```javascript\n   * const allHolderBalances = await contract.history.getAllHolderBalances();\n   * ```\n   */\n  async getAllHolderBalances() {\n    const a = await this.events.getEvents(\"Transfer\");\n    const txns = a.map(b => b.data);\n    const balances = {};\n    txns.forEach(item => {\n      const from = item?.from;\n      const to = item?.to;\n      const amount = item?.value;\n      if (!(from === constants.AddressZero)) {\n        if (!(from in balances)) {\n          balances[from] = BigNumber.from(0);\n        }\n        balances[from] = balances[from].sub(amount);\n      }\n      if (!(to === constants.AddressZero)) {\n        if (!(to in balances)) {\n          balances[to] = BigNumber.from(0);\n        }\n        balances[to] = balances[to].add(amount);\n      }\n    });\n    return Promise.all(Object.keys(balances).map(async addr => ({\n      holder: addr,\n      balance: await fetchCurrencyValue(this.contractWrapper.getProvider(), this.contractWrapper.readContract.address, balances[addr])\n    })));\n  }\n}\n\n/**\n * Standard ERC20 Token functions\n * @remarks Basic functionality for a ERC20 contract that handles all unit transformation for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.token.transfer(walletAddress, amount);\n * ```\n * @public\n */\nclass StandardErc20 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"erc20\", void 0);\n    _defineProperty(this, \"_chainId\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc20 = new Erc20(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n\n  /**\n   * @internal\n   */\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get the token Metadata (name, symbol, etc...)\n   *\n   * @example\n   * ```javascript\n   * const token = await contract.get();\n   * ```\n   * @returns The token metadata\n   */\n  async get() {\n    return this.erc20.get();\n  }\n\n  /**\n   * Get Token Balance for the currently connected wallet\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * const balance = await contract.balance();\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */\n  async balance() {\n    return await this.erc20.balance();\n  }\n\n  /**\n   * Get Token Balance\n   *\n   * @remarks Get a wallets token balance.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * ```\n   *\n   * @returns The balance of a specific wallet.\n   */\n  async balanceOf(address) {\n    return this.erc20.balanceOf(address);\n  }\n\n  /**\n   * The total supply for this Token\n   * @remarks Get how much supply has been minted\n   * @example\n   * ```javascript\n   * const balance = await contract.totalSupply();\n   * ```\n   */\n  async totalSupply() {\n    return await this.erc20.totalSupply();\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of a 'spender' wallet over the connected wallet's funds - the allowance of a different address for a token is the amount of tokens that the `spender` wallet is allowed to spend on behalf of the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check token allowance\n   * const spenderAddress = \"0x...\";\n   * const allowance = await contract.allowance(spenderAddress);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */\n  async allowance(spender) {\n    return await this.erc20.allowance(spender);\n  }\n\n  /**\n   * Get Token Allowance\n   *\n   * @remarks Get the allowance of one wallet over another wallet's funds - the allowance of a different address for a token is the amount of tokens that the wallet is allowed to spend on behalf of the specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet who owns the funds\n   * const owner = \"{{wallet_address}}\";\n   * // Address of the wallet to check token allowance\n   * const spender = \"0x...\";\n   * const allowance = await contract.allowanceOf(owner, spender);\n   * ```\n   *\n   * @returns The allowance of one wallet over anothers funds.\n   */\n  async allowanceOf(owner, spender) {\n    return await this.erc20.allowanceOf(owner, spender);\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Transfer Tokens\n   *\n   * @remarks Transfer tokens from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The amount of tokens you want to send\n   * const amount = 0.1;\n   * await contract.transfer(toAddress, amount);\n   * ```\n   */\n  async transfer(to, amount) {\n    return this.erc20.transfer(to, amount);\n  }\n\n  /**\n   * Transfer Tokens From Address\n   *\n   * @remarks Transfer tokens from one wallet to another\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet sending the tokens\n   * const fromAddress = \"{{wallet_address}}\";\n   * // Address of the wallet you want to send the tokens to\n   * const toAddress = \"0x...\";\n   * // The number of tokens you want to send\n   * const amount = 1.2\n   * // Note that the connected wallet must have approval to transfer the tokens of the fromAddress\n   * await contract.transferFrom(fromAddress, toAddress, amount);\n   * ```\n   */\n  async transferFrom(from, to, amount) {\n    return this.erc20.transferFrom(from, to, amount);\n  }\n\n  /**\n   * Allows the specified `spender` wallet to transfer the given `amount` of tokens to another wallet\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to allow transfers from\n   * const spenderAddress = \"0x...\";\n   * // The number of tokens to give as allowance\n   * const amount = 100\n   * await contract.setAllowance(spenderAddress, amount);\n   * ```\n   */\n  async setAllowance(spender, amount) {\n    return this.erc20.setAllowance(spender, amount);\n  }\n\n  /**\n   * Transfer Tokens To Many Wallets\n   *\n   * @remarks Mint tokens from the connected wallet to many wallets\n   *\n   * @example\n   * ```javascript\n   * // Data of the tokens you want to mint\n   * const data = [\n   *   {\n   *     toAddress: \"{{wallet_address}}\", // Address to mint tokens to\n   *     amount: 100, // How many tokens to mint to specified address\n   *   },\n   *  {\n   *    toAddress: \"0x...\",\n   *    amount: 100,\n   *  }\n   * ]\n   *\n   * await contract.transferBatch(data);\n   * ```\n   */\n  async transferBatch(args) {\n    return this.erc20.transferBatch(args);\n  }\n}\n\nclass Erc721Burnable {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_BURNABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Burn NFTs\n   *\n   * @remarks Burn NFTs held by the connected wallet\n   *\n   * @example\n   * ```javascript\n   * // The token ID of the NFT you want to burn\n   * const tokenId = 0;\n   *\n   * await contract.nft.burn.token(tokenId);\n   * ```\n   */\n  async token(tokenId) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burn\", [tokenId])\n    };\n  }\n}\n\n/**\n * Configure and claim ERC721 NFTs\n * @remarks Manage claim phases and claim ERC721 NFTs that have been lazily minted.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.erc721.claim(tokenId, quantity);\n * ```\n */\nclass Erc721Claimable {\n  constructor(erc721, contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_CLAIM_CUSTOM.name);\n    _defineProperty(this, \"erc721\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options - Options for claiming the NFTs\n   */\n  async getClaimTransaction(destinationAddress, quantity, options) {\n    let overrides = {};\n    if (options && options.pricePerToken) {\n      overrides = await calculateClaimCost(this.contractWrapper, options.pricePerToken, quantity, options.currencyAddress, options.checkERC20Allowance);\n    }\n    return TransactionTask.make({\n      contractWrapper: this.contractWrapper,\n      functionName: \"claim\",\n      args: [destinationAddress, quantity],\n      overrides\n    });\n  }\n\n  /**\n   * Claim NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const tokenId = 0; // the id of the NFT you want to claim\n   * const quantity = 1; // how many NFTs you want to claim\n   *\n   * const tx = await contract.erc721.claimTo(address, tokenId, quantity);\n   * const receipt = tx[0].receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options - Options for claiming the NFTs\n   *\n   * @returns - Receipt for the transaction\n   */\n  async to(destinationAddress, quantity, options) {\n    const task = await this.getClaimTransaction(destinationAddress, quantity, options);\n    const {\n      receipt\n    } = await task.execute();\n    const event = this.contractWrapper.parseLogs(\"TokensClaimed\", receipt?.logs);\n    const startingIndex = event[0].args.startTokenId;\n    const endingIndex = startingIndex.add(quantity);\n    const results = [];\n    for (let id = startingIndex; id.lt(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.erc721.get(id)\n      });\n    }\n    return results;\n  }\n}\n\n/**\n * Configure and claim ERC721 NFTs\n * @remarks Manage claim phases and claim ERC721 NFTs that have been lazily minted.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.erc721.claim(quantity);\n * await contract.erc721.claimConditions.getActive();\n * ```\n */\nclass Erc721ClaimableWithConditions {\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await contract.erc721.claimConditions.set(claimConditions);\n   * ```\n   */\n\n  constructor(erc721, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_CLAIM_CONDITIONS_V2.name);\n    _defineProperty(this, \"conditions\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    const metadata = new ContractMetadata(this.contractWrapper, CustomContractSchema, this.storage);\n    this.conditions = new DropClaimConditions(this.contractWrapper, metadata, this.storage);\n  }\n\n  /**\n   * Claim unique NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 1; // how many unique NFTs you want to claim\n   *\n   * const tx = await contract.erc721.claimTo(address, quantity);\n   * const receipt = tx[0].receipt; // the transaction receipt\n   * const claimedTokenId = tx[0].id; // the id of the first NFT claimed\n   * const claimedNFT = await tx[0].data(); // (optional) get the first claimed NFT metadata\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options\n   * @returns - an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  async to(destinationAddress, quantity, options) {\n    const task = await this.conditions.getClaimTransaction(destinationAddress, quantity, options);\n    const {\n      receipt\n    } = await task.execute();\n    const event = this.contractWrapper.parseLogs(\"TokensClaimed\", receipt?.logs);\n    const startingIndex = event[0].args.startTokenId;\n    const endingIndex = startingIndex.add(quantity);\n    const results = [];\n    for (let id = startingIndex; id.lt(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.erc721.get(id)\n      });\n    }\n    return results;\n  }\n}\n\n/**\n * Lazily mint and claim ERC721 NFTs\n * @remarks Manage claim phases and claim ERC721 NFTs that have been lazily minted.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.drop.claim(quantity);\n * ```\n */\nclass Erc721LazyMintable {\n  /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.nft.drop.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.erc721.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   */\n\n  /**\n   * Claim tokens and configure claim conditions\n   * @remarks Let users claim NFTs. Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const quantity = 10;\n   * await contract.erc721.claim(quantity);\n   * ```\n   */\n\n  constructor(erc721, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_LAZY_MINTABLE.name);\n    _defineProperty(this, \"revealer\", void 0);\n    _defineProperty(this, \"claimWithConditions\", void 0);\n    _defineProperty(this, \"claim\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.revealer = this.detectErc721Revealable();\n    this.claimWithConditions = this.detectErc721ClaimableWithConditions();\n    this.claim = this.detectErc721Claimable();\n  }\n\n  /**\n   * Create a batch of unique NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many unique NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.erc721.lazyMint(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   */\n  async lazyMint(metadatas, options) {\n    const startFileNumber = await this.erc721.nextTokenIdToMint();\n    const batch = await uploadOrExtractURIs(metadatas, this.storage, startFileNumber.toNumber(), options);\n    // ensure baseUri is the same for the entire batch\n    const baseUri = getBaseUriFromBatch(batch);\n    const receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [batch.length, baseUri.endsWith(\"/\") ? baseUri : `${baseUri}/`, ethers.utils.toUtf8Bytes(\"\")]);\n    const event = this.contractWrapper.parseLogs(\"TokensLazyMinted\", receipt?.logs);\n    const startingIndex = event[0].args.startTokenId;\n    const endingIndex = event[0].args.endTokenId;\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.erc721.getTokenMetadata(id)\n      });\n    }\n    return results;\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  detectErc721Revealable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721Revealable\")) {\n      return new DelayedReveal(this.contractWrapper, this.storage, FEATURE_NFT_REVEALABLE.name, () => this.erc721.nextTokenIdToMint());\n    }\n    return undefined;\n  }\n  detectErc721ClaimableWithConditions() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721ClaimConditionsV1\") || detectContractFeature(this.contractWrapper, \"ERC721ClaimConditionsV2\") || detectContractFeature(this.contractWrapper, \"ERC721ClaimPhasesV1\") || detectContractFeature(this.contractWrapper, \"ERC721ClaimPhasesV2\")) {\n      return new Erc721ClaimableWithConditions(this.erc721, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc721Claimable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721ClaimCustom\")) {\n      return new Erc721Claimable(this.erc721, this.contractWrapper);\n    }\n    return undefined;\n  }\n}\n\n/**\n * Mint Many ERC721 NFTs at once\n * @remarks NFT batch minting functionality that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.mint.batch.to(walletAddress, [nftMetadata1, nftMetadata2, ...]);\n * ```\n * @public\n */\nclass Erc721BatchMintable {\n  constructor(erc721, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_BATCH_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  /**\n   * Mint Many unique NFTs\n   *\n   * @remarks Mint many unique NFTs at once to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const walletAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFTs you want to mint.\n   * const metadatas = [{\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT #2\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/other/image.png\"),\n   * }];\n   *\n   * const tx = await contract.mint.batch.to(walletAddress, metadatas);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   */\n  async to(to, metadatas) {\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n    const encoded = uris.map(uri => this.contractWrapper.readContract.interface.encodeFunctionData(\"mintTo\", [to, uri]));\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events = this.contractWrapper.parseLogs(\"TokensMinted\", receipt.logs);\n    if (events.length === 0 || events.length < metadatas.length) {\n      throw new Error(\"TokenMinted event not found, minting failed\");\n    }\n    return events.map(e => {\n      const id = e.args.tokenIdMinted;\n      return {\n        id,\n        receipt,\n        data: () => this.erc721.get(id)\n      };\n    });\n  }\n}\n\n/**\n * Mint ERC721 NFTs\n * @remarks NFT minting functionality that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.mint.to(walletAddress, nftMetadata);\n * ```\n * @public\n */\nclass Erc721Mintable {\n  constructor(erc721, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    _defineProperty(this, \"batch\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.batch = this.detectErc721BatchMintable();\n  }\n\n  /**\n   * Mint a unique NFT\n   *\n   * @remarks Mint a unique NFT to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const walletAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const tx = await contract.nft.mint.to(walletAddress, metadata);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   */\n  async to(to, metadata) {\n    const uri = await uploadOrExtractURI(metadata, this.storage);\n    const receipt = await this.contractWrapper.sendTransaction(\"mintTo\", [to, uri]);\n    const event = this.contractWrapper.parseLogs(\"Transfer\", receipt?.logs);\n    if (event.length === 0) {\n      throw new Error(\"TransferEvent event not found\");\n    }\n    const id = event[0].args.tokenId;\n    return {\n      id,\n      receipt,\n      data: () => this.erc721.get(id)\n    };\n  }\n  detectErc721BatchMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721BatchMintable\")) {\n      return new Erc721BatchMintable(this.erc721, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n}\n\n/**\n * List owned ERC721 NFTs\n * @remarks Easily list all the NFTs from a ERC721 contract, owned by a certain wallet.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const walletAddress = \"0x...\";\n * const ownedNFTs = await contract.nft.query.owned.all(walletAddress);\n * ```\n * @public\n */\nclass Erc721Enumerable {\n  constructor(erc721, contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_ENUMERABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Get Owned NFTs\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.nft.query.owned.all(address);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async all(walletAddress) {\n    const tokenIds = await this.tokenIds(walletAddress);\n    return await Promise.all(tokenIds.map(tokenId => this.erc721.get(tokenId.toString())));\n  }\n\n  /**\n   * Get all token ids of NFTs owned by a specific wallet.\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   */\n  async tokenIds(walletAddress) {\n    const address = walletAddress || (await this.contractWrapper.getSignerAddress());\n    const balance = await this.contractWrapper.readContract.balanceOf(address);\n    const indices = Array.from(Array(balance.toNumber()).keys());\n    return await Promise.all(indices.map(i => this.contractWrapper.readContract.tokenOfOwnerByIndex(address, i)));\n  }\n}\n\n/**\n * List ERC721 NFTs\n * @remarks Easily list all the NFTs in a ERC721 contract.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const nfts = await contract.nft.query.all();\n * ```\n * @public\n */\nclass Erc721Supply {\n  constructor(erc721, contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_SUPPLY.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    _defineProperty(this, \"owned\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n    this.owned = this.detectErc721Owned();\n  }\n\n  /**\n   * Get All Minted NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.nft.query.all();\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async all(queryParams) {\n    const start = BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = BigNumber.from(queryParams?.count || DEFAULT_QUERY_ALL_COUNT).toNumber();\n    const maxSupply = await this.erc721.nextTokenIdToMint();\n    const maxId = Math.min(maxSupply.toNumber(), start + count);\n    return await Promise.all([...Array(maxId - start).keys()].map(i => this.erc721.get((start + i).toString())));\n  }\n\n  /**\n   * Return all the owners of each token id in this contract\n   * @returns\n   */\n  async allOwners() {\n    return Promise.all([...new Array((await this.totalCount()).toNumber()).keys()].map(async i => ({\n      tokenId: i,\n      owner: await this.erc721.ownerOf(i).catch(() => constants.AddressZero)\n    })));\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @remarks This returns the total number of NFTs minted in this contract, **not** the total supply of a given token.\n   *\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  async totalCount() {\n    return await this.erc721.nextTokenIdToMint();\n  }\n\n  /**\n   * Get the number of NFTs of this contract currently owned by end users\n   * @returns the total number of NFTs of this contract in circulation (minted & not burned)\n   * @public\n   */\n  async totalCirculatingSupply() {\n    return await this.contractWrapper.readContract.totalSupply();\n  }\n  detectErc721Owned() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721Enumerable\")) {\n      return new Erc721Enumerable(this.erc721, this.contractWrapper);\n    }\n    return undefined;\n  }\n}\n\n/**\n * @internal\n */\nconst TieredDropPayloadSchema = BaseSignaturePayloadInput.extend({\n  tierPriority: z.array(z.string()),\n  royaltyRecipient: z.string().default(constants.AddressZero),\n  royaltyBps: BasisPointsSchema.default(0),\n  quantity: BigNumberSchema.default(1)\n});\n\nclass Erc721TieredDrop {\n  constructor(erc721, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_TIERED_DROP.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.erc721 = erc721;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n  async getMetadataInTier(tier) {\n    const tiers = await this.contractWrapper.readContract.getMetadataForAllTiers();\n    const batches = tiers.find(t => t.tier === tier);\n    if (!batches) {\n      throw new Error(\"Tier not found in contract.\");\n    }\n    const nfts = await Promise.all(batches.ranges.map((range, i) => {\n      const nftsInRange = [];\n      const baseUri = batches.baseURIs[i];\n      for (let j = range.startIdInclusive.toNumber(); j < range.endIdNonInclusive.toNumber(); j++) {\n        const uri = `${baseUri}/${j}`;\n        const metadata = this.storage.downloadJSON(uri);\n        nftsInRange.push(metadata);\n      }\n      return nftsInRange;\n    }).flat());\n    return nfts;\n  }\n  async getTokensInTier(tier) {\n    const endIndex = await this.contractWrapper.readContract.getTokensInTierLen();\n    if (endIndex.eq(0)) {\n      return [];\n    }\n    const ranges = await this.contractWrapper.readContract.getTokensInTier(tier, 0, endIndex);\n    const nfts = await Promise.all(ranges.map(range => {\n      const nftsInRange = [];\n      for (let i = range.startIdInclusive.toNumber(); i < range.endIdNonInclusive.toNumber(); i++) {\n        nftsInRange.push(this.erc721.get(i));\n      }\n      return nftsInRange;\n    }).flat());\n    return nfts;\n  }\n  async createBatchWithTier(metadatas, tier, options) {\n    // TODO: Change this to on extension\n    const startFileNumber = await this.erc721.nextTokenIdToMint();\n    const batch = await uploadOrExtractURIs(metadatas, this.storage, startFileNumber.toNumber(), options);\n    const baseUri = getBaseUriFromBatch(batch);\n    const receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [batch.length, baseUri.endsWith(\"/\") ? baseUri : `${baseUri}/`, tier, ethers.utils.toUtf8Bytes(\"\")]);\n    const event = this.contractWrapper.parseLogs(\"TokensLazyMinted\", receipt?.logs);\n    const startingIndex = event[0].args[1];\n    const endingIndex = event[0].args[2];\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.erc721.getTokenMetadata(id)\n      });\n    }\n    return results;\n  }\n  async createDelayedRevealBatchWithTier(placeholder, metadatas, password, tier, options) {\n    if (!password) {\n      throw new Error(\"Password is required\");\n    }\n    const placeholderUris = await this.storage.uploadBatch([CommonNFTInput.parse(placeholder)], {\n      rewriteFileNames: {\n        fileStartNumber: 0\n      }\n    });\n    const placeholderUri = getBaseUriFromBatch(placeholderUris);\n    const startFileNumber = await this.erc721.nextTokenIdToMint();\n    const uris = await this.storage.uploadBatch(metadatas.map(m => CommonNFTInput.parse(m)), {\n      onProgress: options?.onProgress,\n      rewriteFileNames: {\n        fileStartNumber: startFileNumber.toNumber()\n      }\n    });\n    const baseUri = getBaseUriFromBatch(uris);\n    const baseUriId = await this.contractWrapper.readContract.getBaseURICount();\n    const chainId = await this.contractWrapper.getChainID();\n    const hashedPassword = ethers.utils.solidityKeccak256([\"string\", \"uint256\", \"uint256\", \"address\"], [password, chainId, baseUriId, this.contractWrapper.readContract.address]);\n    const encryptedBaseUri = await this.contractWrapper.readContract.encryptDecrypt(ethers.utils.toUtf8Bytes(baseUri), hashedPassword);\n    let data;\n    const provenanceHash = ethers.utils.solidityKeccak256([\"bytes\", \"bytes\", \"uint256\"], [ethers.utils.toUtf8Bytes(baseUri), hashedPassword, chainId]);\n    data = ethers.utils.defaultAbiCoder.encode([\"bytes\", \"bytes32\"], [encryptedBaseUri, provenanceHash]);\n    const receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [uris.length, placeholderUri.endsWith(\"/\") ? placeholderUri : `${placeholderUri}/`, tier, data]);\n    const event = this.contractWrapper.parseLogs(\"TokensLazyMinted\", receipt?.logs);\n    const startingIndex = event[0].args[1];\n    const endingIndex = event[0].args[2];\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.erc721.getTokenMetadata(id)\n      });\n    }\n    return results;\n  }\n  async reveal(batchId, password) {\n    if (!password) {\n      throw new Error(\"Password is required\");\n    }\n    const chainId = await this.contractWrapper.getChainID();\n    const key = ethers.utils.solidityKeccak256([\"string\", \"uint256\", \"uint256\", \"address\"], [password, chainId, batchId, this.contractWrapper.readContract.address]);\n    // performing the reveal locally to make sure it'd succeed before sending the transaction\n    try {\n      const decryptedUri = await this.contractWrapper.callStatic().reveal(batchId, key);\n      // basic sanity check for making sure decryptedUri is valid\n      // this is optional because invalid decryption key would result in non-utf8 bytes and\n      // ethers would throw when trying to decode it\n      if (!decryptedUri.includes(\"://\") || !decryptedUri.endsWith(\"/\")) {\n        throw new Error(\"invalid password\");\n      }\n    } catch (e) {\n      throw new Error(\"invalid password\");\n    }\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"reveal\", [batchId, key])\n    };\n  }\n  async generate(payloadToSign) {\n    const [payload] = await this.generateBatch([payloadToSign]);\n    return payload;\n  }\n  async generateBatch(payloadsToSign) {\n    const parsedPayloads = payloadsToSign.map(payload => TieredDropPayloadSchema.parse(payload));\n    const chainId = await this.contractWrapper.getChainID();\n    const signer = this.contractWrapper.getSigner();\n    invariant(signer, \"No signer available\");\n    return await Promise.all(parsedPayloads.map(async payload => {\n      const signature = await this.contractWrapper.signTypedData(signer, {\n        name: \"SignatureAction\",\n        version: \"1\",\n        chainId,\n        verifyingContract: this.contractWrapper.readContract.address\n      }, {\n        GenericRequest: GenericRequest\n      }, await this.mapPayloadToContractStruct(payload));\n      return {\n        payload,\n        signature: signature.toString()\n      };\n    }));\n  }\n  async verify(signedPayload) {\n    const message = await this.mapPayloadToContractStruct(signedPayload.payload);\n    const verification = await this.contractWrapper.readContract.verify(message, signedPayload.signature);\n    return verification[0];\n  }\n  async claimWithSignature(signedPayload) {\n    const message = await this.mapPayloadToContractStruct(signedPayload.payload);\n    const pricePerToken = await normalizePriceValue(this.contractWrapper.getProvider(), signedPayload.payload.price, signedPayload.payload.currencyAddress);\n    const price = pricePerToken.mul(signedPayload.payload.quantity);\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await setErc20Allowance(this.contractWrapper, price, signedPayload.payload.currencyAddress, overrides);\n    const receipt = await this.contractWrapper.sendTransaction(\"claimWithSignature\", [message, signedPayload.signature], overrides);\n    const event = this.contractWrapper.parseLogs(\"TokensClaimed\", receipt?.logs);\n    const startingIndex = event[0].args.startTokenId;\n    const endingIndex = startingIndex.add(event[0].args.quantityClaimed);\n    const results = [];\n    for (let id = startingIndex; id.lt(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.erc721.get(id)\n      });\n    }\n    return results;\n  }\n  async mapPayloadToContractStruct(payload) {\n    const normalizedPricePerToken = await normalizePriceValue(this.contractWrapper.getProvider(), payload.price, payload.currencyAddress);\n    const data = ethers.utils.defaultAbiCoder.encode([\"string[]\", \"address\", \"address\", \"uint256\", \"address\", \"uint256\", \"uint256\", \"address\"], [payload.tierPriority, payload.to, payload.royaltyRecipient, payload.royaltyBps, payload.primarySaleRecipient, payload.quantity, normalizedPricePerToken, payload.currencyAddress]);\n    return {\n      uid: payload.uid,\n      validityStartTimestamp: payload.mintStartTime,\n      validityEndTimestamp: payload.mintEndTime,\n      data\n    };\n  }\n}\n\n/**\n * Enables generating dynamic ERC721 NFTs with rules and an associated signature, which can then be minted by anyone securely\n * @public\n */\nclass Erc721WithQuantitySignatureMintable {\n  constructor(contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT_SIGNATURE_MINTABLE_V2.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  /**\n   * Mint a dynamically generated NFT\n   *\n   * @remarks Mint a dynamic NFT with a previously generated signature.\n   *\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `generate()` documentation\n   * const signedPayload = contract.erc721.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.erc721.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   * @param signedPayload - the previously generated payload and signature with {@link Erc721WithQuantitySignatureMintable.generate}\n   * @twfeature ERC721SignatureMint\n   */\n  async mint(signedPayload) {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const isLegacyNFTContract = await this.isLegacyNFTContract();\n    let message;\n    let price;\n    if (isLegacyNFTContract) {\n      message = await this.mapLegacyPayloadToContractStruct(mintRequest);\n      price = message.price;\n    } else {\n      message = await this.mapPayloadToContractStruct(mintRequest);\n      price = message.pricePerToken.mul(message.quantity);\n    }\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await setErc20Allowance(this.contractWrapper, price, mintRequest.currencyAddress, overrides);\n    const receipt = await this.contractWrapper.sendTransaction(\"mintWithSignature\", [message, signature], overrides);\n    const t = this.contractWrapper.parseLogs(\"TokensMintedWithSignature\", receipt.logs);\n    if (t.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    const id = t[0].args.tokenIdMinted;\n    return {\n      id,\n      receipt\n    };\n  }\n\n  /**\n   * Mint any number of dynamically generated NFT at once\n   * @remarks Mint multiple dynamic NFTs in one transaction. Note that this is only possible for free mints (cannot batch mints with a price attached to it for security reasons)\n   * @param signedPayloads - the array of signed payloads to mint\n   * @twfeature ERC721SignatureMint\n   */\n  async mintBatch(signedPayloads) {\n    const isLegacyNFTContract = await this.isLegacyNFTContract();\n    const contractPayloads = await Promise.all(signedPayloads.map(async s => {\n      let message;\n      if (isLegacyNFTContract) {\n        message = await this.mapLegacyPayloadToContractStruct(s.payload);\n      } else {\n        message = await this.mapPayloadToContractStruct(s.payload);\n      }\n      const signature = s.signature;\n      const price = s.payload.price;\n      if (BigNumber.from(price).gt(0)) {\n        throw new Error(\"Can only batch free mints. For mints with a price, use regular mint()\");\n      }\n      return {\n        message,\n        signature\n      };\n    }));\n    const encoded = contractPayloads.map(p => {\n      if (isLegacyNFTContract) {\n        const contract = this.contractWrapper.readContract;\n        return contract.interface.encodeFunctionData(\"mintWithSignature\", [p.message, p.signature]);\n      } else {\n        const contract = this.contractWrapper.readContract;\n        return contract.interface.encodeFunctionData(\"mintWithSignature\", [p.message, p.signature]);\n      }\n    });\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events = this.contractWrapper.parseLogs(\"TokensMintedWithSignature\", receipt.logs);\n    if (events.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    return events.map(log => ({\n      id: log.args.tokenIdMinted,\n      receipt\n    }));\n  }\n\n  /**\n   * Verify that a payload is correctly signed\n   * @param signedPayload - the payload to verify\n   * @twfeature ERC721SignatureMint\n   *\n   * @example\n   * ```javascript\n   * const nftMetadata = {\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   metadata: nftMetadata, // The NFT to mint\n   *   to: {{wallet_address}}, // Who will receive the NFT\n   *   quantity: 2, // the quantity of NFTs to mint\n   *   price: 0.5, // the price per NFT\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: startTime, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now\n   *   royaltyRecipient: \"0x...\", // custom royalty recipient for this NFT\n   *   royaltyBps: 100, // custom royalty fees for this NFT (in bps)\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this NFT\n   * };\n   *\n   * const signedPayload = await contract.erc721.signature.generate(payload);\n   * // Now you can verify if the signed payload is valid\n   * const isValid = await contract.erc721.signature.verify(signedPayload);\n   * ```\n   */\n  async verify(signedPayload) {\n    const isLegacyNFTContract = await this.isLegacyNFTContract();\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    let message;\n    let verification;\n    if (isLegacyNFTContract) {\n      const contract = this.contractWrapper.readContract;\n      message = await this.mapLegacyPayloadToContractStruct(mintRequest);\n      verification = await contract.verify(message, signature);\n    } else {\n      const contract = this.contractWrapper.readContract;\n      message = await this.mapPayloadToContractStruct(mintRequest);\n      verification = await contract.verify(message, signature);\n    }\n    return verification[0];\n  }\n\n  /**\n   * Generate a signature that can be used to mint a dynamic NFT\n   *\n   * @remarks Takes in an NFT and some information about how it can be minted, uploads the metadata and signs it with your private key. The generated signature can then be used to mint an NFT using the exact payload and signature generated.\n   *\n   * @example\n   * ```javascript\n   * const nftMetadata = {\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   metadata: nftMetadata, // The NFT to mint\n   *   to: {{wallet_address}}, // Who will receive the NFT\n   *   quantity: 2, // the quantity of NFTs to mint\n   *   price: 0.5, // the price per NFT\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: startTime, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now\n   *   royaltyRecipient: \"0x...\", // custom royalty recipient for this NFT\n   *   royaltyBps: 100, // custom royalty fees for this NFT (in bps)\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this NFT\n   * };\n   *\n   * const signedPayload = await contract.erc721.signature.generate(payload);\n   * // now anyone can use these to mint the NFT using `contract.erc721.signature.mint(signedPayload)`\n   * ```\n   * @param mintRequest - the payload to sign\n   * @returns the signed payload and the corresponding signature\n   * @twfeature ERC721SignatureMint\n   */\n  async generate(mintRequest) {\n    return (await this.generateBatch([mintRequest]))[0];\n  }\n\n  /**\n   * Genrate a batch of signatures that can be used to mint many dynamic NFTs.\n   *\n   * @remarks See {@link Erc721WithQuantitySignatureMintable.generate}\n   *\n   * @param payloadsToSign - the payloads to sign\n   * @returns an array of payloads and signatures\n   * @twfeature ERC721SignatureMint\n   */\n  async generateBatch(payloadsToSign) {\n    const isLegacyNFTContract = await this.isLegacyNFTContract();\n    const parsedRequests = payloadsToSign.map(m => Signature721WithQuantityInput.parse(m));\n    const metadatas = parsedRequests.map(r => r.metadata);\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n    const chainId = await this.contractWrapper.getChainID();\n    const signer = this.contractWrapper.getSigner();\n    invariant(signer, \"No signer available\");\n    return await Promise.all(parsedRequests.map(async (m, i) => {\n      const uri = uris[i];\n      const finalPayload = Signature721WithQuantityOutput.parse({\n        ...m,\n        uri\n      });\n      let signature;\n      if (isLegacyNFTContract) {\n        signature = await this.contractWrapper.signTypedData(signer, {\n          name: \"TokenERC721\",\n          version: \"1\",\n          chainId,\n          verifyingContract: this.contractWrapper.readContract.address\n        }, {\n          MintRequest: MintRequest721\n        }, await this.mapLegacyPayloadToContractStruct(finalPayload));\n      } else {\n        signature = await this.contractWrapper.signTypedData(signer, {\n          name: \"SignatureMintERC721\",\n          version: \"1\",\n          chainId,\n          verifyingContract: await this.contractWrapper.readContract.address\n        }, {\n          MintRequest: MintRequest721withQuantity\n        },\n        // TYPEHASH\n        await this.mapPayloadToContractStruct(finalPayload));\n      }\n      return {\n        payload: finalPayload,\n        signature: signature.toString()\n      };\n    }));\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Maps a payload to the format expected by the contract\n   *\n   * @internal\n   *\n   * @param mintRequest - The payload to map.\n   * @returns - The mapped payload.\n   */\n  async mapPayloadToContractStruct(mintRequest) {\n    const normalizedPricePerToken = await normalizePriceValue(this.contractWrapper.getProvider(), mintRequest.price, mintRequest.currencyAddress);\n    return {\n      to: mintRequest.to,\n      royaltyRecipient: mintRequest.royaltyRecipient,\n      royaltyBps: mintRequest.royaltyBps,\n      primarySaleRecipient: mintRequest.primarySaleRecipient,\n      uri: mintRequest.uri,\n      quantity: mintRequest.quantity,\n      pricePerToken: normalizedPricePerToken,\n      currency: mintRequest.currencyAddress,\n      validityStartTimestamp: mintRequest.mintStartTime,\n      validityEndTimestamp: mintRequest.mintEndTime,\n      uid: mintRequest.uid\n    };\n  }\n  async mapLegacyPayloadToContractStruct(mintRequest) {\n    const normalizedPricePerToken = await normalizePriceValue(this.contractWrapper.getProvider(), mintRequest.price, mintRequest.currencyAddress);\n    return {\n      to: mintRequest.to,\n      price: normalizedPricePerToken,\n      uri: mintRequest.uri,\n      currency: mintRequest.currencyAddress,\n      validityEndTimestamp: mintRequest.mintEndTime,\n      validityStartTimestamp: mintRequest.mintStartTime,\n      uid: mintRequest.uid,\n      royaltyRecipient: mintRequest.royaltyRecipient,\n      royaltyBps: mintRequest.royaltyBps,\n      primarySaleRecipient: mintRequest.primarySaleRecipient\n    };\n  }\n  async isLegacyNFTContract() {\n    return detectContractFeature(this.contractWrapper, \"ERC721SignatureMintV1\");\n  }\n}\n\n/**\n * Standard ERC721 NFT functions\n * @remarks Basic functionality for a ERC721 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.erc721.transfer(walletAddress, tokenId);\n * ```\n * @public\n */\nclass Erc721 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    _defineProperty(this, \"featureName\", FEATURE_NFT.name);\n    _defineProperty(this, \"query\", void 0);\n    _defineProperty(this, \"mintable\", void 0);\n    _defineProperty(this, \"burnable\", void 0);\n    _defineProperty(this, \"lazyMintable\", void 0);\n    _defineProperty(this, \"tieredDropable\", void 0);\n    _defineProperty(this, \"signatureMintable\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_chainId\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.query = this.detectErc721Enumerable();\n    this.mintable = this.detectErc721Mintable();\n    this.burnable = this.detectErc721Burnable();\n    this.lazyMintable = this.detectErc721LazyMintable();\n    this.tieredDropable = this.detectErc721TieredDrop();\n    this.signatureMintable = this.detectErc721SignatureMintable();\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  ////// Standard ERC721 Extension //////\n\n  /**\n   * Get a single NFT Metadata\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.erc721.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   * @twfeature ERC721\n   */\n  async get(tokenId) {\n    const [owner, metadata] = await Promise.all([this.ownerOf(tokenId).catch(() => constants.AddressZero), this.getTokenMetadata(tokenId).catch(() => ({\n      id: tokenId.toString(),\n      uri: \"\",\n      ...FALLBACK_METADATA\n    }))]);\n    return {\n      owner,\n      metadata,\n      type: \"ERC721\",\n      supply: 1\n    };\n  }\n\n  /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns the address of the owner\n   * @twfeature ERC721\n   */\n  async ownerOf(tokenId) {\n    return await this.contractWrapper.readContract.ownerOf(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.erc721.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   * @twfeature ERC721\n   */\n  async balanceOf(address) {\n    return await this.contractWrapper.readContract.balanceOf(address);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance() {\n    return await this.balanceOf(await this.contractWrapper.getSignerAddress());\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return await this.contractWrapper.readContract.isApprovedForAll(address, operator);\n  }\n\n  /**\n   * Transfer a single NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.erc721.transfer(walletAddress, tokenId);\n   * ```\n   * @twfeature ERC721\n   */\n  async transfer(to, tokenId) {\n    const from = await this.contractWrapper.getSignerAddress();\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"safeTransferFrom(address,address,uint256)\", [from, to, tokenId])\n    };\n  }\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  async setApprovalForAll(operator, approved) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setApprovalForAll\", [operator, approved])\n    };\n  }\n\n  /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */\n  async setApprovalForToken(operator, tokenId) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"approve\", [operator, tokenId])\n    };\n  }\n\n  ////// ERC721 Supply Extension //////\n\n  /**\n   * Get All Minted NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.erc721.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   * @twfeature ERC721Supply\n   */\n  async getAll(queryParams) {\n    return assertEnabled(this.query, FEATURE_NFT_SUPPLY).all(queryParams);\n  }\n\n  /**\n   * Get All owners of minted NFTs on this contract\n   * @returns an array of token ids and owners\n   * @twfeature ERC721Supply\n   */\n  async getAllOwners() {\n    return assertEnabled(this.query, FEATURE_NFT_SUPPLY).allOwners();\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @remarks This returns the total number of NFTs minted in this contract, **not** the total supply of a given token.\n   *\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  async totalCount() {\n    return this.nextTokenIdToMint();\n  }\n\n  /**\n   * Get the total count NFTs minted in this contract\n   */\n  async totalCirculatingSupply() {\n    return assertEnabled(this.query, FEATURE_NFT_SUPPLY).totalCirculatingSupply();\n  }\n\n  ////// ERC721 Enumerable Extension //////\n\n  /**\n   * Get Owned NFTs\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.erc721.getOwned(address);\n   * console.log(nfts);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @returns The NFT metadata for all NFTs in the contract.\n   * @twfeature ERC721Enumerable\n   */\n  async getOwned(walletAddress) {\n    if (this.query?.owned) {\n      return this.query.owned.all(walletAddress);\n    } else {\n      const address = walletAddress || (await this.contractWrapper.getSignerAddress());\n      const allOwners = await this.getAllOwners();\n      return Promise.all((allOwners || []).filter(i => address?.toLowerCase() === i.owner?.toLowerCase()).map(async i => await this.get(i.tokenId)));\n    }\n  }\n\n  /**\n   * Get all token ids of NFTs owned by a specific wallet.\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   */\n  async getOwnedTokenIds(walletAddress) {\n    if (this.query?.owned) {\n      return this.query.owned.tokenIds(walletAddress);\n    } else {\n      const address = walletAddress || (await this.contractWrapper.getSignerAddress());\n      const allOwners = await this.getAllOwners();\n      return (allOwners || []).filter(i => address?.toLowerCase() === i.owner?.toLowerCase()).map(i => BigNumber.from(i.tokenId));\n    }\n  }\n\n  ////// ERC721 Mintable Extension //////\n\n  /**\n   * Mint a unique NFT\n   *\n   * @remarks Mint a unique NFT to the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const tx = await contract.erc721.mint(metadata);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   * @twfeature ERC721Mintable\n   */\n  async mint(metadata) {\n    return this.mintTo(await this.contractWrapper.getSignerAddress(), metadata);\n  }\n\n  /**\n   * Mint a unique NFT\n   *\n   * @remarks Mint a unique NFT to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const walletAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const tx = await contract.erc721.mintTo(walletAddress, metadata);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   * @twfeature ERC721Mintable\n   */\n  async mintTo(receiver, metadata) {\n    return assertEnabled(this.mintable, FEATURE_NFT_MINTABLE).to(receiver, metadata);\n  }\n\n  ////// ERC721 Batch Mintable Extension //////\n\n  /**\n   * Mint Many unique NFTs\n   *\n   * @remarks Mint many unique NFTs at once to the connected wallet\n   *\n   * @example\n   * ```javascript*\n   * // Custom metadata of the NFTs you want to mint.\n   * const metadatas = [{\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT #2\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/other/image.png\"),\n   * }];\n   *\n   * const tx = await contract.erc721.mintBatch(metadatas);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   * @twfeature ERC721BatchMintable\n   */\n  async mintBatch(metadatas) {\n    return this.mintBatchTo(await this.contractWrapper.getSignerAddress(), metadatas);\n  }\n\n  /**\n   * Mint Many unique NFTs\n   *\n   * @remarks Mint many unique NFTs at once to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const walletAddress = \"{{wallet_address}}\";\n   *\n   * // Custom metadata of the NFTs you want to mint.\n   * const metadatas = [{\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT #2\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/other/image.png\"),\n   * }];\n   *\n   * const tx = await contract.erc721.mintBatchTo(walletAddress, metadatas);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   * @twfeature ERC721BatchMintable\n   */\n  async mintBatchTo(receiver, metadatas) {\n    return assertEnabled(this.mintable?.batch, FEATURE_NFT_BATCH_MINTABLE).to(receiver, metadatas);\n  }\n\n  ////// ERC721 Burnable Extension //////\n\n  /**\n   * Burn a single NFT\n   * @param tokenId - the token Id to burn\n   *\n   * @example\n   * ```javascript\n   * const result = await contract.erc721.burn(tokenId);\n   * ```\n   * @twfeature ERC721Burnable\n   */\n  async burn(tokenId) {\n    return assertEnabled(this.burnable, FEATURE_NFT_BURNABLE).token(tokenId);\n  }\n\n  ////// ERC721 LazyMint Extension //////\n\n  /**\n   * Create a batch of unique NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many unique NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.erc721.lazyMint(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   * @twfeature ERC721LazyMintable\n   */\n  async lazyMint(metadatas, options) {\n    return assertEnabled(this.lazyMintable, FEATURE_NFT_LAZY_MINTABLE).lazyMint(metadatas, options);\n  }\n\n  ////// ERC721 Claimable Extension //////\n\n  /**\n   * Claim unique NFTs to the connected wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const quantity = 1; // how many unique NFTs you want to claim\n   *\n   * const tx = await contract.erc721.claim(quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const claimedTokenId = tx.id; // the id of the NFT claimed\n   * const claimedNFT = await tx.data(); // (optional) get the claimed NFT metadata\n   * ```\n   *\n   * @param quantity - Quantity of the tokens you want to claim\n   *\n   * @returns - an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   * @twfeature ERC721Claimable\n   */\n  async claim(quantity, options) {\n    return this.claimTo(await this.contractWrapper.getSignerAddress(), quantity, options);\n  }\n\n  /**\n   * Claim unique NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const quantity = 1; // how many unique NFTs you want to claim\n   *\n   * const tx = await contract.erc721.claimTo(address, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const claimedTokenId = tx.id; // the id of the NFT claimed\n   * const claimedNFT = await tx.data(); // (optional) get the claimed NFT metadata\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options\n   * @twfeature ERC721Claimable\n   * @returns - an array of results containing the id of the token claimed, the transaction receipt and a promise to optionally fetch the nft metadata\n   */\n  async claimTo(destinationAddress, quantity, options) {\n    const claimWithConditions = this.lazyMintable?.claimWithConditions;\n    const claim = this.lazyMintable?.claim;\n    if (claimWithConditions) {\n      return claimWithConditions.to(destinationAddress, quantity, options);\n    }\n    if (claim) {\n      return claim.to(destinationAddress, quantity, options);\n    }\n    throw new ExtensionNotImplementedError(FEATURE_NFT_CLAIM_CUSTOM);\n  }\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress\n   * @param quantity\n   * @param options\n   */\n  async getClaimTransaction(destinationAddress, quantity, options) {\n    const claimWithConditions = this.lazyMintable?.claimWithConditions;\n    const claim = this.lazyMintable?.claim;\n    if (claimWithConditions) {\n      return claimWithConditions.conditions.getClaimTransaction(destinationAddress, quantity, options);\n    }\n    if (claim) {\n      return claim.getClaimTransaction(destinationAddress, quantity, options);\n    }\n    throw new ExtensionNotImplementedError(FEATURE_NFT_CLAIM_CUSTOM);\n  }\n  async totalClaimedSupply() {\n    const contract = this.contractWrapper;\n    if (hasFunction(\"nextTokenIdToClaim\", contract)) {\n      return contract.readContract.nextTokenIdToClaim();\n    }\n    if (hasFunction(\"totalMinted\", contract)) {\n      return contract.readContract.totalMinted();\n    }\n    throw new Error(\"No function found on contract to get total claimed supply\");\n  }\n\n  /**\n   * Get the unclaimed supply\n   *\n   * @remarks Get the number of unclaimed NFTs in this Drop.\n   *\n   * * @example\n   * ```javascript\n   * const unclaimedNFTCount = await contract.totalUnclaimedSupply();\n   * console.log(`NFTs left to claim: ${unclaimedNFTCount}`);\n   * ```\n   * @returns the unclaimed supply\n   */\n  async totalUnclaimedSupply() {\n    return (await this.nextTokenIdToMint()).sub(await this.totalClaimedSupply());\n  }\n\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await contract.erc721.claimConditions.set(claimConditions);\n   * ```\n   * @twfeature ERC721ClaimableWithConditions\n   */\n  get claimConditions() {\n    return assertEnabled(this.lazyMintable?.claimWithConditions, FEATURE_NFT_CLAIM_CONDITIONS_V2).conditions;\n  }\n\n  ////// ERC721 Tiered Drop Extension //////\n\n  /**\n   * Tiered Drop\n   * @remarks Drop lazy minted NFTs using a tiered drop mechanism.\n   */\n  get tieredDrop() {\n    return assertEnabled(this.tieredDropable, FEATURE_NFT_TIERED_DROP);\n  }\n\n  ////// ERC721 SignatureMint Extension //////\n\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.erc721.signature.generate()` documentation\n   * const signedPayload = contract.erc721.signature().generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.erc721.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   * @twfeature ERC721SignatureMint\n   */\n  get signature() {\n    return assertEnabled(this.signatureMintable, FEATURE_NFT_SIGNATURE_MINTABLE_V2);\n  }\n\n  ////// ERC721 DelayedReveal Extension //////\n\n  /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.erc721.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.erc721.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   * @twfeature ERC721Revealable\n   */\n  get revealer() {\n    return assertEnabled(this.lazyMintable?.revealer, FEATURE_NFT_REVEALABLE);\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * @internal\n   */\n  async getTokenMetadata(tokenId) {\n    const tokenUri = await this.contractWrapper.readContract.tokenURI(tokenId);\n    if (!tokenUri) {\n      throw new NotFoundError();\n    }\n    return fetchTokenMetadata(tokenId, tokenUri, this.storage);\n  }\n\n  /**\n   * Return the next available token ID to mint\n   * @internal\n   */\n  async nextTokenIdToMint() {\n    if (hasFunction(\"nextTokenIdToMint\", this.contractWrapper)) {\n      return await this.contractWrapper.readContract.nextTokenIdToMint();\n    } else if (hasFunction(\"totalSupply\", this.contractWrapper)) {\n      return await this.contractWrapper.readContract.totalSupply();\n    } else {\n      throw new Error(\"Contract requires either `nextTokenIdToMint` or `totalSupply` function available to determine the next token ID to mint\");\n    }\n  }\n  detectErc721Enumerable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721Supply\") || hasFunction(\"nextTokenIdToMint\", this.contractWrapper)) {\n      return new Erc721Supply(this, this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc721Mintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721Mintable\")) {\n      return new Erc721Mintable(this, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc721Burnable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721Burnable\")) {\n      return new Erc721Burnable(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc721LazyMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721LazyMintable\")) {\n      return new Erc721LazyMintable(this, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc721TieredDrop() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721TieredDrop\")) {\n      return new Erc721TieredDrop(this, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc721SignatureMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721SignatureMintV1\") || detectContractFeature(this.contractWrapper, \"ERC721SignatureMintV2\")) {\n      return new Erc721WithQuantitySignatureMintable(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n}\n\n/**\n * Standard ERC721 NFT functions\n * @remarks Basic functionality for a ERC721 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.nft.transfer(walletAddress, tokenId);\n * ```\n * @public\n */\nclass StandardErc721 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"erc721\", void 0);\n    _defineProperty(this, \"_chainId\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc721 = new Erc721(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /**\n   * Get All Minted NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.getAll();\n   * console.log(nfts);\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async getAll(queryParams) {\n    return this.erc721.getAll(queryParams);\n  }\n\n  /**\n   * Get Owned NFTs\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.getOwned(address);\n   * console.log(nfts);\n   * ```\n   * @param walletAddress - the wallet address to query, defaults to the connected wallet\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async getOwned(walletAddress) {\n    return this.erc721.getOwned(walletAddress);\n  }\n\n  /**\n   * Get Owned Token Ids\n   * @remarks Get all the token ids of NFTs owned by a specific wallet (no metadata)\n   */\n  async getOwnedTokenIds(walletAddress) {\n    return this.erc721.getOwnedTokenIds(walletAddress);\n  }\n\n  /**\n   * Get the total count NFTs minted in this contract\n   */\n  async totalSupply() {\n    return this.erc721.totalCirculatingSupply();\n  }\n\n  /**\n   * Get a single NFT Metadata\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const nft = await contract.get(tokenId);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc721.get(tokenId);\n  }\n\n  /**\n   * Get the current owner of a given NFT within this Contract\n   *\n   * @param tokenId - the tokenId of the NFT\n   * @returns the address of the owner\n   */\n  async ownerOf(tokenId) {\n    return this.erc721.ownerOf(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const balance = await contract.balanceOf(walletAddress);\n   * console.log(balance);\n   * ```\n   */\n  async balanceOf(address) {\n    return this.erc721.balanceOf(address);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance() {\n    return this.erc721.balance();\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc721.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer a single NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0;\n   * await contract.transfer(walletAddress, tokenId);\n   * ```\n   */\n  async transfer(to, tokenId) {\n    return this.erc721.transfer(to, tokenId);\n  }\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  async setApprovalForAll(operator, approved) {\n    return this.erc721.setApprovalForAll(operator, approved);\n  }\n\n  /**\n   * Approve an operator for the NFT owner. Operators can call transferFrom or safeTransferFrom for the specified token.\n   * @param operator - the operator's address\n   * @param tokenId - the tokenId to give approval for\n   *\n   * @internal\n   */\n  async setApprovalForToken(operator, tokenId) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"approve\", [operator, tokenId])\n    };\n  }\n}\n\n/**\n * @internal\n */\nconst AirdropAddressInput = z.object({\n  address: AddressSchema,\n  quantity: AmountSchema.default(1)\n});\n\n/**\n * @internal\n */\nconst AirdropInputSchema = z.union([z.array(z.string()).transform(strings => strings.map(address => AirdropAddressInput.parse({\n  address\n}))), z.array(AirdropAddressInput)]);\n\nclass Erc1155Burnable {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_BURNABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Burn a specified amount of a NFTs\n   *\n   * @remarks Burn the specified NFTs from the connected wallet\n   *\n   * @param tokenId - the token Id to burn\n   * @param amount - amount to burn\n   *\n   * @example\n   * ```javascript\n   * // The token ID to burn NFTs of\n   * const tokenId = 0;\n   * // The amount of the NFT you want to burn\n   * const amount = 2;\n   *\n   * const result = await contract.edition.burn.tokens(tokenId, amount);\n   * ```\n   */\n  async tokens(tokenId, amount) {\n    const account = await this.contractWrapper.getSignerAddress();\n    return this.from(account, tokenId, amount);\n  }\n\n  /**\n   * Burn a specified amount of a NFTs\n   *\n   * @remarks Burn the specified NFTs from a specified wallet\n   *\n   * @param account - the address to burn NFTs from\n   * @param tokenId - the tokenId to burn\n   * @param amount - amount to burn\n   *\n   * @example\n   * ```javascript\n   * // The address of the wallet to burn NFTS from\n   * const account = \"0x...\";\n   * // The token ID to burn NFTs of\n   * const tokenId = 0;\n   * // The amount of this NFT you want to burn\n   * const amount = 2;\n   *\n   * const result = await contract.edition.burn.from(account, tokenId, amount);\n   * ```\n   */\n  async from(account, tokenId, amount) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burn\", [account, tokenId, amount])\n    };\n  }\n\n  /**\n   * Burn a batch of NFTs\n   *\n   * @remarks Burn the batch NFTs from the connected wallet\n   *\n   * @param tokenIds - the tokenIds to burn\n   * @param amounts - amount of each token to burn\n   *\n   * @example\n   * ```javascript\n   * // The token IDs to burn NFTs of\n   * const tokenIds = [0, 1];\n   * // The amounts of each NFT you want to burn\n   * const amounts = [2, 2];\n   *\n   * const result = await contract.edition.burn.batch(tokenIds, amounts);\n   * ```\n   */\n  async batch(tokenIds, amounts) {\n    const account = await this.contractWrapper.getSignerAddress();\n    return this.batchFrom(account, tokenIds, amounts);\n  }\n\n  /**\n   * Burn a batch of NFTs\n   *\n   * @remarks Burn the batch NFTs from the specified wallet\n   *\n   * @param account - the address to burn NFTs from\n   * @param tokenIds - the tokenIds to burn\n   * @param amounts - amount of each token to burn\n   *\n   * @example\n   * ```javascript\n   * // The address of the wallet to burn NFTS from\n   * const account = \"0x...\";\n   * // The token IDs to burn NFTs of\n   * const tokenIds = [0, 1];\n   * // The amounts of each NFT you want to burn\n   * const amounts = [2, 2];\n   *\n   * const result = await contract.edition.burn.batchFrom(account, tokenIds, amounts);\n   * ```\n   */\n  async batchFrom(account, tokenIds, amounts) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"burnBatch\", [account, tokenIds, amounts])\n    };\n  }\n}\n\n/**\n * List ERC1155 NFTs\n * @remarks Easily list all the NFTs in a ERC1155 contract.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const nfts = await contract.edition.query.all();\n * ```\n * @public\n */\nclass Erc1155Enumerable {\n  constructor(erc1155, contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_ENUMERABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc1155\", void 0);\n    this.erc1155 = erc1155;\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Get All NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.edition.query.all();\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   */\n  async all(queryParams) {\n    const start = BigNumber.from(queryParams?.start || 0).toNumber();\n    const count = BigNumber.from(queryParams?.count || DEFAULT_QUERY_ALL_COUNT).toNumber();\n    const maxId = Math.min((await this.totalCount()).toNumber(), start + count);\n    return await Promise.all([...Array(maxId - start).keys()].map(i => this.erc1155.get((start + i).toString())));\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @remarks This returns the total number of NFTs minted in this contract, **not** the total supply of a given token.\n   *\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  async totalCount() {\n    return await this.contractWrapper.readContract.nextTokenIdToMint();\n  }\n\n  /**\n   * Get the supply of token for a given tokenId.\n   * @remarks This is **not** the sum of supply of all NFTs in the contract.\n   *\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  async totalCirculatingSupply(tokenId) {\n    return await this.contractWrapper.readContract.totalSupply(tokenId);\n  }\n\n  /**\n   * Get Owned NFTs\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.edition.query.owned(address);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   */\n  async owned(walletAddress) {\n    const address = walletAddress || (await this.contractWrapper.getSignerAddress());\n    const maxId = await this.contractWrapper.readContract.nextTokenIdToMint();\n    const balances = await this.contractWrapper.readContract.balanceOfBatch(Array(maxId.toNumber()).fill(address), Array.from(Array(maxId.toNumber()).keys()));\n    const ownedBalances = balances.map((b, i) => {\n      return {\n        tokenId: i,\n        balance: b\n      };\n    }).filter(b => b.balance.gt(0));\n    return await Promise.all(ownedBalances.map(async b => {\n      const editionMetadata = await this.erc1155.get(b.tokenId.toString());\n      return {\n        ...editionMetadata,\n        owner: address,\n        quantityOwned: b.balance.toNumber()\n      };\n    }));\n  }\n}\n\nasync function getPrebuiltInfo(address, provider) {\n  try {\n    const contract = new ethers.Contract(address, IThirdwebContractABI, provider);\n    const [type, version] = await Promise.all([ethers.utils.toUtf8String(await contract.contractType()) // eslint-disable-next-line no-control-regex\n    .replace(/\\x00/g, \"\"), await contract.contractVersion()]);\n    return {\n      type,\n      version\n    };\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * Configure and claim ERC1155 NFTs\n * @remarks Manage claim phases and claim ERC1155 NFTs that have been lazily minted.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.edition.drop.claim.to(\"0x...\", tokenId, quantity);\n * ```\n */\nclass ERC1155Claimable {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_CLAIM_CUSTOM.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options - Options for claiming the NFTs\n   */\n  async getClaimTransaction(destinationAddress, tokenId, quantity, options) {\n    let overrides = {};\n    if (options && options.pricePerToken) {\n      overrides = await calculateClaimCost(this.contractWrapper, options.pricePerToken, quantity, options.currencyAddress, options.checkERC20Allowance);\n    }\n    return TransactionTask.make({\n      contractWrapper: this.contractWrapper,\n      functionName: \"claim\",\n      args: [destinationAddress, tokenId, quantity],\n      overrides\n    });\n  }\n\n  /**\n   * Claim NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const tokenId = 0; // the id of the NFT you want to claim\n   * const quantity = 1; // how many NFTs you want to claim\n   *\n   * const tx = await contract.erc1155.claimTo(address, tokenId, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options - Options for claiming the NFTs\n   *\n   * @returns - Receipt for the transaction\n   */\n  async to(destinationAddress, tokenId, quantity, options) {\n    const tx = await this.getClaimTransaction(destinationAddress, tokenId, quantity, options);\n    return await tx.execute();\n  }\n}\n\n/**\n * Configure and claim ERC1155 NFTs\n * @remarks Manage claim phases and claim ERC1155 NFTs that have been lazily minted.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.erc1155.claim(tokenId, quantity);\n * await contract.erc1155.claimConditions.getActive(tokenId);\n * ```\n */\nclass Erc1155ClaimableWithConditions {\n  constructor(contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_CLAIM_CONDITIONS_V2.name);\n    _defineProperty(this, \"conditions\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    const metadata = new ContractMetadata(this.contractWrapper, CustomContractSchema, this.storage);\n    this.conditions = new DropErc1155ClaimConditions(contractWrapper, metadata, this.storage);\n  }\n\n  /**\n   * Claim NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const tokenId = 0; // the id of the NFT you want to claim\n   * const quantity = 1; // how many NFTs you want to claim\n   *\n   * const tx = await contract.erc1155.claimTo(address, tokenId, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   *\n   * @returns - Receipt for the transaction\n   */\n  async to(destinationAddress, tokenId, quantity, options) {\n    const tx = await this.conditions.getClaimTransaction(destinationAddress, tokenId, quantity, options);\n    return await tx.execute();\n  }\n}\n\nclass Erc1155LazyMintable {\n  /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.edition.drop.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.edition.drop.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   */\n\n  /**\n   * Claim tokens and configure claim conditions\n   * @remarks Let users claim NFTs. Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const quantity = 10;\n   * const tokenId = 0;\n   * await contract.erc1155.claimTo(\"0x...\", 0, quantity);\n   * ```\n   */\n\n  constructor(erc1155, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_LAZY_MINTABLE_V2.name);\n    _defineProperty(this, \"revealer\", void 0);\n    _defineProperty(this, \"claimWithConditions\", void 0);\n    _defineProperty(this, \"claim\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc1155\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.erc1155 = erc1155;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.claim = this.detectErc1155Claimable();\n    this.claimWithConditions = this.detectErc1155ClaimableWithConditions();\n    this.revealer = this.detectErc1155Revealable();\n  }\n\n  /**\n   * Create a batch of NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.erc1155.lazyMint(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   */\n  async lazyMint(metadatas, options) {\n    const startFileNumber = await this.erc1155.nextTokenIdToMint();\n    const batch = await uploadOrExtractURIs(metadatas, this.storage, startFileNumber.toNumber(), options);\n    // ensure baseUri is the same for the entire batch\n    const baseUri = batch[0].substring(0, batch[0].lastIndexOf(\"/\"));\n    for (let i = 0; i < batch.length; i++) {\n      const uri = batch[i].substring(0, batch[i].lastIndexOf(\"/\"));\n      if (baseUri !== uri) {\n        throw new Error(`Can only create batches with the same base URI for every entry in the batch. Expected '${baseUri}' but got '${uri}'`);\n      }\n    }\n    const isLegacyEditionDropContract = await this.isLegacyEditionDropContract();\n    let receipt;\n    if (isLegacyEditionDropContract) {\n      receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [batch.length, `${baseUri.endsWith(\"/\") ? baseUri : `${baseUri}/`}`]);\n    } else {\n      // new contracts/extensions have support for delayed reveal that adds an extra parameter to lazyMint\n      receipt = await this.contractWrapper.sendTransaction(\"lazyMint\", [batch.length, `${baseUri.endsWith(\"/\") ? baseUri : `${baseUri}/`}`, ethers.utils.toUtf8Bytes(\"\")]);\n    }\n    const event = this.contractWrapper.parseLogs(\"TokensLazyMinted\", receipt?.logs);\n    const startingIndex = event[0].args.startTokenId;\n    const endingIndex = event[0].args.endTokenId;\n    const results = [];\n    for (let id = startingIndex; id.lte(endingIndex); id = id.add(1)) {\n      results.push({\n        id,\n        receipt,\n        data: () => this.erc1155.getTokenMetadata(id)\n      });\n    }\n    return results;\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  detectErc1155Claimable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155ClaimCustom\")) {\n      return new ERC1155Claimable(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc1155ClaimableWithConditions() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155ClaimConditionsV1\") || detectContractFeature(this.contractWrapper, \"ERC1155ClaimConditionsV2\") || detectContractFeature(this.contractWrapper, \"ERC1155ClaimPhasesV1\") || detectContractFeature(this.contractWrapper, \"ERC1155ClaimPhasesV2\")) {\n      return new Erc1155ClaimableWithConditions(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc1155Revealable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155Revealable\")) {\n      return new DelayedReveal(this.contractWrapper, this.storage, FEATURE_EDITION_REVEALABLE.name, () => this.erc1155.nextTokenIdToMint());\n    }\n    return undefined;\n  }\n  async isLegacyEditionDropContract() {\n    const info = await getPrebuiltInfo(this.contractWrapper.readContract.address, this.contractWrapper.getProvider());\n    return info && info.type === \"DropERC1155\" && info.version < 3;\n  }\n}\n\n/**\n * Mint Many ERC1155 NFTs at once\n * @remarks NFT batch minting functionality that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.edition.mint.batch.to(walletAddress, [nftMetadataWithSupply1, nftMetadataWithSupply2, ...]);\n * ```\n * @public\n */\nclass Erc1155BatchMintable {\n  constructor(erc1155, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_BATCH_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc1155\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.erc1155 = erc1155;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  /**\n   * Mint Many NFTs with limited supplies\n   *\n   * @remarks Mint many different NFTs with limited supplies to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata and supplies of your NFTs\n   * const metadataWithSupply = [{\n   *   supply: 50, // The number of this NFT you want to mint\n   *   metadata: {\n   *     name: \"Cool NFT #1\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }, {\n   *   supply: 100,\n   *   metadata: {\n   *     name: \"Cool NFT #2\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }];\n   *\n   * const tx = await contract.edition.mint.batch.to(toAddress, metadataWithSupply);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   */\n  async to(to, metadataWithSupply) {\n    const metadatas = metadataWithSupply.map(a => a.metadata);\n    const supplies = metadataWithSupply.map(a => a.supply);\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n    const encoded = uris.map((uri, index) => this.contractWrapper.readContract.interface.encodeFunctionData(\"mintTo\", [to, ethers.constants.MaxUint256, uri, supplies[index]]));\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events = this.contractWrapper.parseLogs(\"TokensMinted\", receipt.logs);\n    if (events.length === 0 || events.length < metadatas.length) {\n      throw new Error(\"TokenMinted event not found, minting failed\");\n    }\n    return events.map(e => {\n      const id = e.args.tokenIdMinted;\n      return {\n        id,\n        receipt,\n        data: () => this.erc1155.get(id)\n      };\n    });\n  }\n}\n\n/**\n * Mint ERC1155 NFTs\n * @remarks NFT minting functionality that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.edition.mint.to(walletAddress, nftMetadata);\n * ```\n * @public\n */\nclass Erc1155Mintable {\n  /**\n   * Batch mint Tokens to many addresses\n   */\n\n  constructor(erc1155, contractWrapper, storage) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"erc1155\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"batch\", void 0);\n    this.erc1155 = erc1155;\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.batch = this.detectErc1155BatchMintable();\n  }\n\n  /**\n   * Mint an NFT with a limited supply\n   *\n   * @remarks Mint an NFT with a limited supply to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }\n   *\n   * const metadataWithSupply = {\n   *   metadata,\n   *   supply: 1000, // The number of this NFT you want to mint\n   * }\n   *\n   * const tx = await contract.edition.mint.to(toAddress, metadataWithSupply);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   */\n  async to(to, metadataWithSupply) {\n    const uri = await uploadOrExtractURI(metadataWithSupply.metadata, this.storage);\n    const receipt = await this.contractWrapper.sendTransaction(\"mintTo\", [to, ethers.constants.MaxUint256, uri, metadataWithSupply.supply]);\n    const event = this.contractWrapper.parseLogs(\"TransferSingle\", receipt?.logs);\n    if (event.length === 0) {\n      throw new Error(\"TransferSingleEvent event not found\");\n    }\n    const id = event[0].args.id;\n    return {\n      id,\n      receipt,\n      data: () => this.erc1155.get(id.toString())\n    };\n  }\n\n  /**\n   * Increase the supply of an existing NFT and mint it to a given wallet address\n   *\n   * @param to - the address to mint to\n   * @param tokenId - the token id of the NFT to increase supply of\n   * @param additionalSupply - the additional amount to mint\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   * const tokenId = 0;\n   * const additionalSupply = 1000;\n   *\n   * const tx = await contract.edition.mint.additionalSupplyTo(toAddress, tokenId, additionalSupply);\n   * ```\n   */\n  async additionalSupplyTo(to, tokenId, additionalSupply) {\n    const metadata = await this.erc1155.getTokenMetadata(tokenId);\n    const receipt = await this.contractWrapper.sendTransaction(\"mintTo\", [to, tokenId, metadata.uri, additionalSupply]);\n    return {\n      id: BigNumber.from(tokenId),\n      receipt,\n      data: () => this.erc1155.get(tokenId)\n    };\n  }\n  detectErc1155BatchMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155BatchMintable\")) {\n      return new Erc1155BatchMintable(this.erc1155, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n}\n\n/**\n * Enables generating dynamic ERC1155 NFTs with rules and an associated signature, which can then be minted by anyone securely\n * @public\n */\nclass Erc1155SignatureMintable {\n  constructor(contractWrapper, storage, roles) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION_SIGNATURE_MINTABLE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"roles\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.roles = roles;\n  }\n\n  /**\n   * Mint a dynamically generated NFT\n   *\n   * @remarks Mint a dynamic NFT with a previously generated signature.\n   *\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `generate()` documentation\n   * const signedPayload = contract.erc1155.signature.generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.erc1155.signature.mint(signedPayload);\n   * ```\n   * @param signedPayload - the previously generated payload and signature with {@link Erc1155SignatureMintable.generate}\n   * @twfeature ERC1155SignatureMintable\n   */\n  async mint(signedPayload) {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const overrides = await this.contractWrapper.getCallOverrides();\n    await setErc20Allowance(this.contractWrapper, message.pricePerToken.mul(message.quantity), mintRequest.currencyAddress, overrides);\n    const receipt = await this.contractWrapper.sendTransaction(\"mintWithSignature\", [message, signature], overrides);\n    const t = this.contractWrapper.parseLogs(\"TokensMintedWithSignature\", receipt.logs);\n    if (t.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    const id = t[0].args.tokenIdMinted;\n    return {\n      id,\n      receipt\n    };\n  }\n\n  /**\n   * Mint any number of dynamically generated NFT at once\n   * @remarks Mint multiple dynamic NFTs in one transaction. Note that this is only possible for free mints (cannot batch mints with a price attached to it for security reasons)\n   *\n   * @example\n   * ```javascript\n   * // see how to craft a batch of payloads to sign in the `generateBatch()` documentation\n   * const signedPayloads = contract.erc1155.signature.generateBatch(payloads);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.erc1155.signature.mintBatch(signedPayloads);\n   * ```\n   *\n   * @param signedPayloads - the array of signed payloads to mint\n   * @twfeature ERC1155SignatureMintable\n   */\n  async mintBatch(signedPayloads) {\n    const contractPayloads = await Promise.all(signedPayloads.map(async s => {\n      const message = await this.mapPayloadToContractStruct(s.payload);\n      const signature = s.signature;\n      const price = s.payload.price;\n      if (BigNumber.from(price).gt(0)) {\n        throw new Error(\"Can only batch free mints. For mints with a price, use regular mint()\");\n      }\n      return {\n        message,\n        signature\n      };\n    }));\n    const encoded = contractPayloads.map(p => {\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\"mintWithSignature\", [p.message, p.signature]);\n    });\n    const receipt = await this.contractWrapper.multiCall(encoded);\n    const events = this.contractWrapper.parseLogs(\"TokensMintedWithSignature\", receipt.logs);\n    if (events.length === 0) {\n      throw new Error(\"No MintWithSignature event found\");\n    }\n    return events.map(log => ({\n      id: log.args.tokenIdMinted,\n      receipt\n    }));\n  }\n\n  /**\n   * Verify that a payload is correctly signed\n   * @param signedPayload - the payload to verify\n   * @twfeature ERC1155SignatureMintable\n   *\n   * @example\n   * ```javascript\n   * const nftMetadata = {\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   metadata: nftMetadata, // The NFT to mint\n   *   to: {{wallet_address}}, // Who will receive the NFT\n   *   quantity: 2, // the quantity of NFTs to mint\n   *   price: 0.5, // the price per NFT\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: startTime, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now\n   *   royaltyRecipient: \"0x...\", // custom royalty recipient for this NFT\n   *   royaltyBps: 100, // custom royalty fees for this NFT (in bps)\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this NFT\n   * };\n   *\n   * const signedPayload = contract.erc1155.signature.generate(payload);\n   * // Now you can verify that the payload is valid\n   * const isValid = await contract.erc1155.signature.verify(signedPayload);\n   * ```\n   */\n  async verify(signedPayload) {\n    const mintRequest = signedPayload.payload;\n    const signature = signedPayload.signature;\n    const message = await this.mapPayloadToContractStruct(mintRequest);\n    const verification = await this.contractWrapper.readContract.verify(message, signature);\n    return verification[0];\n  }\n\n  /**\n   * Generate a signature that can be used to mint an NFT dynamically.\n   *\n   * @remarks Takes in an NFT and some information about how it can be minted, uploads the metadata and signs it with your private key. The generated signature can then be used to mint an NFT using the exact payload and signature generated.\n   *\n   * @example\n   * ```javascript\n   * const nftMetadata = {\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   metadata: nftMetadata, // The NFT to mint\n   *   to: {{wallet_address}}, // Who will receive the NFT\n   *   quantity: 2, // the quantity of NFTs to mint\n   *   price: 0.5, // the price per NFT\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: startTime, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now\n   *   royaltyRecipient: \"0x...\", // custom royalty recipient for this NFT\n   *   royaltyBps: 100, // custom royalty fees for this NFT (in bps)\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this NFT\n   * };\n   *\n   * const signedPayload = await contract.erc1155.signature.generate(payload);\n   * // now anyone can use these to mint the NFT using `contract.erc1155.signature.mint(signedPayload)`\n   * ```\n   * @param payloadToSign - the payload to sign\n   * @returns the signed payload and the corresponding signature\n   * @twfeature ERC1155SignatureMintable\n   */\n  async generate(payloadToSign) {\n    const payload = {\n      ...payloadToSign,\n      tokenId: ethers.constants.MaxUint256\n    };\n    return this.generateFromTokenId(payload);\n  }\n\n  /**\n   * Generate a signature that can be used to mint additionaly supply to an existing NFT.\n   *\n   * @remarks Takes in a payload with the token ID of an existing NFT, and signs it with your private key. The generated signature can then be used to mint additional supply to the NFT using the exact payload and signature generated.\n   *\n   * @example\n   * ```javascript\n   * const nftMetadata = {\n   *   name: \"Cool NFT #1\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * };\n   *\n   * const startTime = new Date();\n   * const endTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const payload = {\n   *   tokenId: 0, // Instead of metadata, we specificy the token ID of the NFT to mint supply to\n   *   to: {{wallet_address}}, // Who will receive the NFT (or AddressZero for anyone)\n   *   quantity: 2, // the quantity of NFTs to mint\n   *   price: 0.5, // the price per NFT\n   *   currencyAddress: NATIVE_TOKEN_ADDRESS, // the currency to pay with\n   *   mintStartTime: startTime, // can mint anytime from now\n   *   mintEndTime: endTime, // to 24h from now\n   *   royaltyRecipient: \"0x...\", // custom royalty recipient for this NFT\n   *   royaltyBps: 100, // custom royalty fees for this NFT (in bps)\n   *   primarySaleRecipient: \"0x...\", // custom sale recipient for this NFT\n   * };\n   *\n   * const signedPayload = await contract.erc1155.signature.generateFromTokenId(payload);\n   * // now anyone can use these to mint the NFT using `contract.erc1155.signature.mint(signedPayload)`\n   * ```\n   * @param payloadToSign - the payload to sign\n   * @returns the signed payload and the corresponding signature\n   * @twfeature ERC1155SignatureMintable\n   */\n  async generateFromTokenId(payloadToSign) {\n    const payloads = await this.generateBatchFromTokenIds([payloadToSign]);\n    return payloads[0];\n  }\n\n  /**\n   * Generate a batch of signatures that can be used to mint many new NFTs dynamically.\n   *\n   * @remarks See {@link Erc1155SignatureMintable.generate}\n   *\n   * @param payloadsToSign - the payloads to sign\n   * @returns an array of payloads and signatures\n   * @twfeature ERC1155SignatureMintable\n   */\n  async generateBatch(payloadsToSign) {\n    const payloads = payloadsToSign.map(payload => ({\n      ...payload,\n      tokenId: ethers.constants.MaxUint256\n    }));\n    return this.generateBatchFromTokenIds(payloads);\n  }\n\n  /**\n   * Genrate a batch of signatures that can be used to mint new NFTs or additionaly supply to existing NFTs dynamically.\n   *\n   * @remarks See {@link Erc1155SignatureMintable.generateFromTokenId}\n   *\n   * @param payloadsToSign - the payloads to sign with tokenIds specified\n   * @returns an array of payloads and signatures\n   * @twfeature ERC1155SignatureMintable\n   */\n  async generateBatchFromTokenIds(payloadsToSign) {\n    await this.roles?.verify([\"minter\"], await this.contractWrapper.getSignerAddress());\n    const parsedRequests = payloadsToSign.map(m => Signature1155PayloadInputWithTokenId.parse(m));\n    const metadatas = parsedRequests.map(r => r.metadata);\n    const uris = await uploadOrExtractURIs(metadatas, this.storage);\n    const chainId = await this.contractWrapper.getChainID();\n    const signer = this.contractWrapper.getSigner();\n    invariant(signer, \"No signer available\");\n    const contractInfo = await getPrebuiltInfo(this.contractWrapper.readContract.address, this.contractWrapper.getProvider());\n    const isLegacyContract = contractInfo?.type === \"TokenERC1155\";\n    return await Promise.all(parsedRequests.map(async (m, i) => {\n      const uri = uris[i];\n      const finalPayload = Signature1155PayloadOutput.parse({\n        ...m,\n        uri\n      });\n      const signature = await this.contractWrapper.signTypedData(signer, {\n        name: isLegacyContract ? \"TokenERC1155\" : \"SignatureMintERC1155\",\n        version: \"1\",\n        chainId,\n        verifyingContract: this.contractWrapper.readContract.address\n      }, {\n        MintRequest: MintRequest1155\n      },\n      // TYPEHASH\n      await this.mapPayloadToContractStruct(finalPayload));\n      return {\n        payload: finalPayload,\n        signature: signature.toString()\n      };\n    }));\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Maps a payload to the format expected by the contract\n   *\n   * @internal\n   *\n   * @param mintRequest - The payload to map.\n   * @returns - The mapped payload.\n   */\n  async mapPayloadToContractStruct(mintRequest) {\n    const normalizedPricePerToken = await normalizePriceValue(this.contractWrapper.getProvider(), mintRequest.price, mintRequest.currencyAddress);\n    return {\n      to: mintRequest.to,\n      tokenId: mintRequest.tokenId,\n      uri: mintRequest.uri,\n      quantity: mintRequest.quantity,\n      pricePerToken: normalizedPricePerToken,\n      currency: mintRequest.currencyAddress,\n      validityStartTimestamp: mintRequest.mintStartTime,\n      validityEndTimestamp: mintRequest.mintEndTime,\n      uid: mintRequest.uid,\n      royaltyRecipient: mintRequest.royaltyRecipient,\n      royaltyBps: mintRequest.royaltyBps,\n      primarySaleRecipient: mintRequest.primarySaleRecipient\n    };\n  }\n}\n\n/**\n * Standard ERC1155 NFT functions\n * @remarks Basic functionality for a ERC1155 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.erc1155.transfer(walletAddress, tokenId, quantity);\n * ```\n * @public\n */\nclass Erc1155 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    _defineProperty(this, \"featureName\", FEATURE_EDITION.name);\n    _defineProperty(this, \"query\", void 0);\n    _defineProperty(this, \"mintable\", void 0);\n    _defineProperty(this, \"burnable\", void 0);\n    _defineProperty(this, \"lazyMintable\", void 0);\n    _defineProperty(this, \"signatureMintable\", void 0);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_chainId\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.query = this.detectErc1155Enumerable();\n    this.mintable = this.detectErc1155Mintable();\n    this.burnable = this.detectErc1155Burnable();\n    this.lazyMintable = this.detectErc1155LazyMintable();\n    this.signatureMintable = this.detectErc1155SignatureMintable();\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  ////// Standard ERC1155 functions //////\n\n  /**\n   * Get a single NFT Metadata\n   *\n   * @example\n   * ```javascript\n   * const nft = await contract.erc1155.get(0);\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   * @twfeature ERC1155\n   */\n  async get(tokenId) {\n    const [supply, metadata] = await Promise.all([this.contractWrapper.readContract.totalSupply(tokenId).catch(() => BigNumber.from(0)), this.getTokenMetadata(tokenId).catch(() => ({\n      id: tokenId.toString(),\n      uri: \"\",\n      ...FALLBACK_METADATA\n    }))]);\n    return {\n      owner: ethers.constants.AddressZero,\n      metadata,\n      type: \"ERC1155\",\n      supply: supply.toNumber()\n    };\n  }\n\n  /**\n   * Returns the total supply of a specific token\n   * @param tokenId - The token ID to get the total supply of\n   * @returns the total supply\n   */\n  async totalSupply(tokenId) {\n    return await this.contractWrapper.readContract.totalSupply(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check NFT balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0; // Id of the NFT to check\n   * const balance = await contract.erc1155.balanceOf(walletAddress, tokenId);\n   * ```\n   * @twfeature ERC1155\n   */\n  async balanceOf(address, tokenId) {\n    return await this.contractWrapper.readContract.balanceOf(address, tokenId);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance(tokenId) {\n    return await this.balanceOf(await this.contractWrapper.getSignerAddress(), tokenId);\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return await this.contractWrapper.readContract.isApprovedForAll(address, operator);\n  }\n\n  /**\n   * Transfer a single NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   * const tokenId = \"0\"; // The token ID of the NFT you want to send\n   * const amount = 3; // How many copies of the NFTs to transfer\n   * await contract.erc1155.transfer(toAddress, tokenId, amount);\n   * ```\n   * @twfeature ERC1155\n   */\n  async transfer(to, tokenId, amount) {\n    let data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0];\n    const from = await this.contractWrapper.getSignerAddress();\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"safeTransferFrom\", [from, to, tokenId, amount, data])\n    };\n  }\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  async setApprovalForAll(operator, approved) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setApprovalForAll\", [operator, approved])\n    };\n  }\n\n  /**\n   * Airdrop multiple NFTs\n   *\n   * @remarks Airdrop one or multiple NFTs to the provided wallet addresses.\n   *\n   * @example\n   * ```javascript\n   * // The token ID of the NFT you want to airdrop\n   * const tokenId = \"0\";\n   * // Array of objects of addresses and quantities to airdrop NFTs to\n   * const addresses = [\n   *  {\n   *    address: \"0x...\",\n   *    quantity: 2,\n   *  },\n   *  {\n   *   address: \"0x...\",\n   *    quantity: 3,\n   *  },\n   * ];\n   * await contract.airdrop(tokenId, addresses);\n   *\n   * // You can also pass an array of addresses, it will airdrop 1 NFT per address\n   * const tokenId = \"0\";\n   * const addresses = [\n   *  \"0x...\", \"0x...\", \"0x...\",\n   * ]\n   * await contract.erc1155.airdrop(tokenId, addresses);\n   * ```\n   */\n  async airdrop(tokenId, addresses) {\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0];\n    const from = await this.contractWrapper.getSignerAddress();\n    const balanceOf = await this.balanceOf(from, tokenId);\n    const input = AirdropInputSchema.parse(addresses);\n    const totalToAirdrop = input.reduce((prev, curr) => {\n      return prev + Number(curr?.quantity || 1);\n    }, 0);\n    if (balanceOf.toNumber() < totalToAirdrop) {\n      throw new Error(`The caller owns ${balanceOf.toNumber()} NFTs, but wants to airdrop ${totalToAirdrop} NFTs.`);\n    }\n    const encoded = input.map(_ref => {\n      let {\n        address: to,\n        quantity\n      } = _ref;\n      return this.contractWrapper.readContract.interface.encodeFunctionData(\"safeTransferFrom\", [from, to, tokenId, quantity, data]);\n    });\n    return {\n      receipt: await this.contractWrapper.multiCall(encoded)\n    };\n  }\n\n  /**\n   * Return the next available token ID to mint\n   * @internal\n   */\n  async nextTokenIdToMint() {\n    if (hasFunction(\"nextTokenIdToMint\", this.contractWrapper)) {\n      return await this.contractWrapper.readContract.nextTokenIdToMint();\n    } else {\n      throw new Error(\"Contract requires the `nextTokenIdToMint` function available to determine the next token ID to mint\");\n    }\n  }\n\n  ////// ERC1155 Enumerable Extension //////\n\n  /**\n   * Get All NFTs\n   *\n   * @remarks Get all the data associated with every NFT in this contract.\n   *\n   * By default, returns the first 100 NFTs, use queryParams to fetch more.\n   *\n   * @example\n   * ```javascript\n   * const nfts = await contract.erc1155.getAll();\n   * ```\n   * @param queryParams - optional filtering to only fetch a subset of results.\n   * @returns The NFT metadata for all NFTs queried.\n   * @twfeature ERC1155Enumerable\n   */\n  async getAll(queryParams) {\n    return assertEnabled(this.query, FEATURE_EDITION_ENUMERABLE).all(queryParams);\n  }\n\n  /**\n   * Get the number of NFTs minted\n   * @remarks This returns the total number of NFTs minted in this contract, **not** the total supply of a given token.\n   *\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  async totalCount() {\n    return assertEnabled(this.query, FEATURE_EDITION_ENUMERABLE).totalCount();\n  }\n\n  /**\n   * Get the supply of token for a given tokenId.\n   * @remarks This is **not** the sum of supply of all NFTs in the contract.\n   *\n   * @returns the total number of NFTs minted in this contract\n   * @public\n   */\n  async totalCirculatingSupply(tokenId) {\n    return assertEnabled(this.query, FEATURE_EDITION_ENUMERABLE).totalCirculatingSupply(tokenId);\n  }\n\n  /**\n   * Get Owned NFTs\n   *\n   * @remarks Get all the data associated with the NFTs owned by a specific wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to get the NFTs of\n   * const address = \"{{wallet_address}}\";\n   * const nfts = await contract.erc1155.getOwned(address);\n   * ```\n   *\n   * @returns The NFT metadata for all NFTs in the contract.\n   * @twfeature ERC1155Enumerable\n   */\n  async getOwned(walletAddress) {\n    return assertEnabled(this.query, FEATURE_EDITION_ENUMERABLE).owned(walletAddress);\n  }\n\n  ////// ERC1155 Mintable Extension //////\n\n  /**\n   * Mint an NFT with a limited supply\n   *\n   * @remarks Mint an NFT with a limited supply to the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }\n   *\n   * const metadataWithSupply = {\n   *   metadata,\n   *   supply: 1000, // The number of this NFT you want to mint\n   * }\n   *\n   * const tx = await contract.erc1155.mint(toAddress, metadataWithSupply);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   * @twfeature ERC1155Mintable\n   */\n  async mint(metadataWithSupply) {\n    return this.mintTo(await this.contractWrapper.getSignerAddress(), metadataWithSupply);\n  }\n\n  /**\n   * Mint an NFT with a limited supply\n   *\n   * @remarks Mint an NFT with a limited supply to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata of the NFT, note that you can fully customize this metadata with other properties.\n   * const metadata = {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }\n   *\n   * const metadataWithSupply = {\n   *   metadata,\n   *   supply: 1000, // The number of this NFT you want to mint\n   * }\n   *\n   * const tx = await contract.erc1155.mintTo(toAddress, metadataWithSupply);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const tokenId = tx.id; // the id of the NFT minted\n   * const nft = await tx.data(); // (optional) fetch details of minted NFT\n   * ```\n   * @twfeature ERC1155Mintable\n   */\n  async mintTo(receiver, metadataWithSupply) {\n    return assertEnabled(this.mintable, FEATURE_EDITION_MINTABLE).to(receiver, metadataWithSupply);\n  }\n\n  /**\n   * Increase the supply of an existing NFT\n   * @remarks Increase the supply of an existing NFT and mint it to the connected wallet address\n   * @example\n   * ```javascript\n   * const tokenId = 0;\n   * const additionalSupply = 1000;\n   * await contract.erc1155.mintAdditionalSupply(tokenId, additionalSupply);\n   * ```\n   *\n   * @param tokenId - the token id of the NFT to increase supply of\n   * @param additionalSupply - the additional amount to mint\n   * @twfeature ERC1155Mintable\n   */\n  async mintAdditionalSupply(tokenId, additionalSupply) {\n    return assertEnabled(this.mintable, FEATURE_EDITION_MINTABLE).additionalSupplyTo(await this.contractWrapper.getSignerAddress(), tokenId, additionalSupply);\n  }\n\n  /**\n   * Increase the supply of an existing NFT and mint it to a given wallet address\n   *\n   * @param to - the address to mint to\n   * @param tokenId - the token id of the NFT to increase supply of\n   * @param additionalSupply - the additional amount to mint\n   */\n  async mintAdditionalSupplyTo(receiver, tokenId, additionalSupply) {\n    return assertEnabled(this.mintable, FEATURE_EDITION_MINTABLE).additionalSupplyTo(receiver, tokenId, additionalSupply);\n  }\n\n  ////// ERC1155 BatchMintable Extension //////\n\n  /**\n   * Mint Many NFTs with limited supplies\n   *\n   * @remarks Mint many different NFTs with limited supplies to the connected wallet.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata and supplies of your NFTs\n   * const metadataWithSupply = [{\n   *   supply: 50, // The number of this NFT you want to mint\n   *   metadata: {\n   *     name: \"Cool NFT #1\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }, {\n   *   supply: 100,\n   *   metadata: {\n   *     name: \"Cool NFT #2\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }];\n   *\n   * const tx = await contract.erc1155.mintBatch(metadataWithSupply);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   * @twfeature ERC1155BatchMintable\n   */\n  async mintBatch(metadataWithSupply) {\n    return this.mintBatchTo(await this.contractWrapper.getSignerAddress(), metadataWithSupply);\n  }\n\n  /**\n   * Mint Many NFTs with limited supplies\n   *\n   * @remarks Mint many different NFTs with limited supplies to a specified wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to mint the NFT to\n   * const toAddress = \"{{wallet_address}}\"\n   *\n   * // Custom metadata and supplies of your NFTs\n   * const metadataWithSupply = [{\n   *   supply: 50, // The number of this NFT you want to mint\n   *   metadata: {\n   *     name: \"Cool NFT #1\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }, {\n   *   supply: 100,\n   *   metadata: {\n   *     name: \"Cool NFT #2\",\n   *     description: \"This is a cool NFT\",\n   *     image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   *   },\n   * }];\n   *\n   * const tx = await contract.erc1155.mintBatchTo(toAddress, metadataWithSupply);\n   * const receipt = tx[0].receipt; // same transaction receipt for all minted NFTs\n   * const firstTokenId = tx[0].id; // token id of the first minted NFT\n   * const firstNFT = await tx[0].data(); // (optional) fetch details of the first minted NFT\n   * ```\n   * @twfeature ERC1155BatchMintable\n   */\n  async mintBatchTo(receiver, metadataWithSupply) {\n    return assertEnabled(this.mintable?.batch, FEATURE_EDITION_BATCH_MINTABLE).to(receiver, metadataWithSupply);\n  }\n\n  ////// ERC1155 Burnable Extension //////\n\n  /**\n   * Burn a specified amount of a NFTs\n   *\n   * @remarks Burn the specified NFTs from the connected wallet\n   *\n   * @param tokenId - the token Id to burn\n   * @param amount - amount to burn\n   *\n   * @example\n   * ```javascript\n   * // The token ID to burn NFTs of\n   * const tokenId = 0;\n   * // The amount of the NFT you want to burn\n   * const amount = 2;\n   *\n   * const result = await contract.erc1155.burn(tokenId, amount);\n   * ```\n   * @twfeature ERC1155Burnable\n   */\n  async burn(tokenId, amount) {\n    return assertEnabled(this.burnable, FEATURE_EDITION_BURNABLE).tokens(tokenId, amount);\n  }\n\n  /**\n   * Burn a specified amount of a NFTs\n   *\n   * @remarks Burn the specified NFTs from a specified wallet\n   *\n   * @param account - the address to burn NFTs from\n   * @param tokenId - the tokenId to burn\n   * @param amount - amount to burn\n   *\n   * @example\n   * ```javascript\n   * // The address of the wallet to burn NFTS from\n   * const account = \"0x...\";\n   * // The token ID to burn NFTs of\n   * const tokenId = 0;\n   * // The amount of this NFT you want to burn\n   * const amount = 2;\n   *\n   * const result = await contract.erc1155.burnFrom(account, tokenId, amount);\n   * ```\n   * @twfeature ERC1155Burnable\n   */\n  async burnFrom(account, tokenId, amount) {\n    return assertEnabled(this.burnable, FEATURE_EDITION_BURNABLE).from(account, tokenId, amount);\n  }\n\n  /**\n   * Burn a batch of NFTs\n   *\n   * @remarks Burn the batch NFTs from the connected wallet\n   *\n   * @param tokenIds - the tokenIds to burn\n   * @param amounts - amount of each token to burn\n   *\n   * @example\n   * ```javascript\n   * // The token IDs to burn NFTs of\n   * const tokenIds = [0, 1];\n   * // The amounts of each NFT you want to burn\n   * const amounts = [2, 2];\n   *\n   * const result = await contract.erc1155.burnBatch(tokenIds, amounts);\n   * ```\n   * @twfeature ERC1155Burnable\n   */\n  async burnBatch(tokenIds, amounts) {\n    return assertEnabled(this.burnable, FEATURE_EDITION_BURNABLE).batch(tokenIds, amounts);\n  }\n\n  /**\n   * Burn a batch of NFTs\n   *\n   * @remarks Burn the batch NFTs from the specified wallet\n   *\n   * @param account - the address to burn NFTs from\n   * @param tokenIds - the tokenIds to burn\n   * @param amounts - amount of each token to burn\n   *\n   * @example\n   * ```javascript\n   * // The address of the wallet to burn NFTS from\n   * const account = \"0x...\";\n   * // The token IDs to burn NFTs of\n   * const tokenIds = [0, 1];\n   * // The amounts of each NFT you want to burn\n   * const amounts = [2, 2];\n   *\n   * const result = await contract.erc1155.burnBatchFrom(account, tokenIds, amounts);\n   * ```\n   * @twfeature ERC1155Burnable\n   */\n  async burnBatchFrom(account, tokenIds, amounts) {\n    return assertEnabled(this.burnable, FEATURE_EDITION_BURNABLE).batchFrom(account, tokenIds, amounts);\n  }\n\n  ////// ERC721 LazyMint Extension //////\n\n  /**\n   * Create a batch of NFTs to be claimed in the future\n   *\n   * @remarks Create batch allows you to create a batch of many NFTs in one transaction.\n   *\n   * @example\n   * ```javascript\n   * // Custom metadata of the NFTs to create\n   * const metadatas = [{\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"), // This can be an image url or file\n   * }, {\n   *   name: \"Cool NFT\",\n   *   description: \"This is a cool NFT\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   *\n   * const results = await contract.erc1155.lazyMint(metadatas); // uploads and creates the NFTs on chain\n   * const firstTokenId = results[0].id; // token id of the first created NFT\n   * const firstNFT = await results[0].data(); // (optional) fetch details of the first created NFT\n   * ```\n   *\n   * @param metadatas - The metadata to include in the batch.\n   * @param options - optional upload progress callback\n   * @twfeature ERC1155LazyMintable\n   */\n  async lazyMint(metadatas, options) {\n    return assertEnabled(this.lazyMintable, FEATURE_EDITION_LAZY_MINTABLE_V2).lazyMint(metadatas, options);\n  }\n\n  ////// ERC1155 Claimable Extension //////\n\n  /**\n   * Construct a claim transaction without executing it.\n   * This is useful for estimating the gas cost of a claim transaction, overriding transaction options and having fine grained control over the transaction execution.\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options - Optional claim verification data (e.g. price, currency, etc...)\n   */\n  async getClaimTransaction(destinationAddress, tokenId, quantity, options) {\n    const claimWithConditions = this.lazyMintable?.claimWithConditions;\n    const claim = this.lazyMintable?.claim;\n    if (claimWithConditions) {\n      return claimWithConditions.conditions.getClaimTransaction(destinationAddress, tokenId, quantity, options);\n    }\n    if (claim) {\n      return claim.getClaimTransaction(destinationAddress, tokenId, quantity, options);\n    }\n    throw new ExtensionNotImplementedError(FEATURE_EDITION_CLAIM_CUSTOM);\n  }\n\n  /**\n   * Claim NFTs\n   *\n   * @remarks Let the connected wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const tokenId = 0; // the id of the NFT you want to claim\n   * const quantity = 1; // how many NFTs you want to claim\n   *\n   * const tx = await contract.erc1155.claim(tokenId, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options - Optional claim verification data (e.g. price, currency, etc...)\n   *\n   * @returns - Receipt for the transaction\n   * @twfeature ERC1155Claimable\n   */\n  async claim(tokenId, quantity, options) {\n    return this.claimTo(await this.contractWrapper.getSignerAddress(), tokenId, quantity, options);\n  }\n\n  /**\n   * Claim NFTs to a specific Wallet\n   *\n   * @remarks Let the specified wallet claim NFTs.\n   *\n   * @example\n   * ```javascript\n   * const address = \"{{wallet_address}}\"; // address of the wallet you want to claim the NFTs\n   * const tokenId = 0; // the id of the NFT you want to claim\n   * const quantity = 1; // how many NFTs you want to claim\n   *\n   * const tx = await contract.erc1155.claimTo(address, tokenId, quantity);\n   * const receipt = tx.receipt; // the transaction receipt\n   * ```\n   *\n   * @param destinationAddress - Address you want to send the token to\n   * @param tokenId - Id of the token you want to claim\n   * @param quantity - Quantity of the tokens you want to claim\n   * @param options - Optional claim verification data (e.g. price, currency, etc...)\n   *\n   * @returns - Receipt for the transaction\n   * @twfeature ERC1155Claimable\n   */\n  async claimTo(destinationAddress, tokenId, quantity, options) {\n    const claimWithConditions = this.lazyMintable?.claimWithConditions;\n    const claim = this.lazyMintable?.claim;\n    if (claimWithConditions) {\n      return claimWithConditions.to(destinationAddress, tokenId, quantity, options);\n    }\n    if (claim) {\n      return claim.to(destinationAddress, tokenId, quantity, options);\n    }\n    throw new ExtensionNotImplementedError(FEATURE_EDITION_CLAIM_CUSTOM);\n  }\n\n  /**\n   * Configure claim conditions\n   * @remarks Define who can claim NFTs in the collection, when and how many.\n   * @example\n   * ```javascript\n   * const presaleStartTime = new Date();\n   * const publicSaleStartTime = new Date(Date.now() + 60 * 60 * 24 * 1000);\n   * const claimConditions = [\n   *   {\n   *     startTime: presaleStartTime, // start the presale now\n   *     maxQuantity: 2, // limit how many mints for this presale\n   *     price: 0.01, // presale price\n   *     snapshot: ['0x...', '0x...'], // limit minting to only certain addresses\n   *   },\n   *   {\n   *     startTime: publicSaleStartTime, // 24h after presale, start public sale\n   *     price: 0.08, // public sale price\n   *   }\n   * ]);\n   * await contract.erc1155.claimConditions.set(tokenId, claimConditions);\n   * ```\n   * @twfeature ERC1155ClaimableWithConditions\n   */\n  get claimConditions() {\n    return assertEnabled(this.lazyMintable?.claimWithConditions, FEATURE_EDITION_CLAIM_CONDITIONS_V2).conditions;\n  }\n\n  ////// ERC1155 SignatureMintable Extension //////\n\n  /**\n   * Signature Minting\n   * @remarks Generate dynamic NFTs with your own signature, and let others mint them using that signature.\n   * @example\n   * ```javascript\n   * // see how to craft a payload to sign in the `contract.erc1155.signature.generate()` documentation\n   * const signedPayload = contract.erc1155.signature().generate(payload);\n   *\n   * // now anyone can mint the NFT\n   * const tx = contract.erc1155.signature.mint(signedPayload);\n   * const receipt = tx.receipt; // the mint transaction receipt\n   * const mintedId = tx.id; // the id of the NFT minted\n   * ```\n   * @twfeature ERC1155SignatureMintable\n   */\n  get signature() {\n    return assertEnabled(this.signatureMintable, FEATURE_EDITION_SIGNATURE_MINTABLE);\n  }\n\n  ////// ERC1155 DelayedReveal Extension //////\n\n  /**\n   * Delayed reveal\n   * @remarks Create a batch of encrypted NFTs that can be revealed at a later time.\n   * @example\n   * ```javascript\n   * // the real NFTs, these will be encrypted until you reveal them\n   * const realNFTs = [{\n   *   name: \"Common NFT #1\",\n   *   description: \"Common NFT, one of many.\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }, {\n   *   name: \"Super Rare NFT #2\",\n   *   description: \"You got a Super Rare NFT!\",\n   *   image: fs.readFileSync(\"path/to/image.png\"),\n   * }];\n   * // A placeholder NFT that people will get immediately in their wallet, and will be converted to the real NFT at reveal time\n   * const placeholderNFT = {\n   *   name: \"Hidden NFT\",\n   *   description: \"Will be revealed next week!\"\n   * };\n   * // Create and encrypt the NFTs\n   * await contract.erc1155.drop.revealer.createDelayedRevealBatch(\n   *   placeholderNFT,\n   *   realNFTs,\n   *   \"my secret password\",\n   * );\n   * // Whenever you're ready, reveal your NFTs at any time\n   * const batchId = 0; // the batch to reveal\n   * await contract.erc1155.revealer.reveal(batchId, \"my secret password\");\n   * ```\n   * @twfeature ERC1155Revealable\n   */\n  get revealer() {\n    return assertEnabled(this.lazyMintable?.revealer, FEATURE_EDITION_REVEALABLE);\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * @internal\n   * @param tokenId - the token Id to fetch\n   */\n  async getTokenMetadata(tokenId) {\n    const tokenUri = await this.contractWrapper.readContract.uri(tokenId);\n    if (!tokenUri) {\n      throw new NotFoundError();\n    }\n    return fetchTokenMetadata(tokenId, tokenUri, this.storage);\n  }\n  detectErc1155Enumerable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155Enumerable\")) {\n      return new Erc1155Enumerable(this, this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc1155Mintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155Mintable\")) {\n      return new Erc1155Mintable(this, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc1155Burnable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155Burnable\")) {\n      return new Erc1155Burnable(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc1155LazyMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155LazyMintableV1\") || detectContractFeature(this.contractWrapper, \"ERC1155LazyMintableV2\")) {\n      return new Erc1155LazyMintable(this, this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n  detectErc1155SignatureMintable() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155SignatureMintable\")) {\n      return new Erc1155SignatureMintable(this.contractWrapper, this.storage);\n    }\n    return undefined;\n  }\n}\n\n/**\n * Standard ERC1155 NFT functions\n * @remarks Basic functionality for a ERC1155 contract that handles IPFS storage for you.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * await contract.edition.transfer(walletAddress, tokenId, quantity);\n * ```\n * @public\n */\nclass StandardErc1155 {\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(contractWrapper, storage, chainId) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"erc1155\", void 0);\n    _defineProperty(this, \"_chainId\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.erc1155 = new Erc1155(this.contractWrapper, this.storage, chainId);\n    this._chainId = chainId;\n  }\n\n  /**\n   * @internal\n   */\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  ////// Standard ERC1155 functions //////\n\n  /**\n   * Get a single NFT Metadata\n   *\n   * @example\n   * ```javascript\n   * const nft = await contract.get(\"0\");\n   * ```\n   * @param tokenId - the tokenId of the NFT to retrieve\n   * @returns The NFT metadata\n   */\n  async get(tokenId) {\n    return this.erc1155.get(tokenId);\n  }\n\n  /**\n   * Returns the total supply of a specific token\n   * @param tokenId - The token ID to get the total supply of\n   * @returns the total supply\n   */\n  async totalSupply(tokenId) {\n    return this.erc1155.totalSupply(tokenId);\n  }\n\n  /**\n   * Get NFT Balance\n   *\n   * @remarks Get a wallets NFT balance (number of NFTs in this contract owned by the wallet).\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet to check NFT balance\n   * const walletAddress = \"{{wallet_address}}\";\n   * const tokenId = 0; // Id of the NFT to check\n   * const balance = await contract.balanceOf(walletAddress, tokenId);\n   * ```\n   */\n  async balanceOf(address, tokenId) {\n    return this.erc1155.balanceOf(address, tokenId);\n  }\n\n  /**\n   * Get NFT Balance for the currently connected wallet\n   */\n  async balance(tokenId) {\n    return this.erc1155.balance(tokenId);\n  }\n\n  /**\n   * Get whether this wallet has approved transfers from the given operator\n   * @param address - the wallet address\n   * @param operator - the operator address\n   */\n  async isApproved(address, operator) {\n    return this.erc1155.isApproved(address, operator);\n  }\n\n  /**\n   * Transfer a single NFT\n   *\n   * @remarks Transfer an NFT from the connected wallet to another wallet.\n   *\n   * @example\n   * ```javascript\n   * // Address of the wallet you want to send the NFT to\n   * const toAddress = \"{{wallet_address}}\";\n   * const tokenId = \"0\"; // The token ID of the NFT you want to send\n   * const amount = 3; // How many copies of the NFTs to transfer\n   * await contract.transfer(toAddress, tokenId, amount);\n   * ```\n   */\n  async transfer(to, tokenId, amount) {\n    let data = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [0];\n    return this.erc1155.transfer(to, tokenId, amount, data);\n  }\n\n  /**\n   * Approve or remove operator as an operator for the caller. Operators can call transferFrom or safeTransferFrom for any token owned by the caller.\n   * @param operator - the operator's address\n   * @param approved - whether to approve or remove\n   *\n   * @internal\n   */\n  async setApprovalForAll(operator, approved) {\n    return this.erc1155.setApprovalForAll(operator, approved);\n  }\n\n  /**\n   * Airdrop multiple NFTs\n   *\n   * @remarks Airdrop one or multiple NFTs to the provided wallet addresses.\n   * @twfeature ERC1155\n   * @example\n   * ```javascript\n   * // The token ID of the NFT you want to airdrop\n   * const tokenId = \"0\";\n   * // Array of objects of addresses and quantities to airdrop NFTs to\n   * const addresses = [\n   *  {\n   *    address: \"0x...\",\n   *    quantity: 2,\n   *  },\n   *  {\n   *   address: \"0x...\",\n   *    quantity: 3,\n   *  },\n   * ];\n   * await contract.airdrop(tokenId, addresses);\n   *\n   * // You can also pass an array of addresses, it will airdrop 1 NFT per address\n   * const tokenId = \"0\";\n   * const addresses = [\n   *  \"0x...\", \"0x...\", \"0x...\",\n   * ]\n   * await contract.airdrop(tokenId, addresses);\n   * ```\n   */\n  async airdrop(tokenId, addresses) {\n    let data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [0];\n    return this.erc1155.airdrop(tokenId, addresses, data);\n  }\n}\n\n/**\n * This method checks if the given token is approved for the transferrerContractAddress contract.\n * This is particularly useful for contracts that need to transfer NFTs on the users' behalf\n *\n * @internal\n * @param provider - The connected provider\n * @param transferrerContractAddress - The address of the marketplace contract\n * @param assetContract - The address of the asset contract.\n * @param tokenId - The token id of the token.\n * @param owner - The address of the account that owns the token.\n * @returns - True if the transferrerContractAddress is approved on the token, false otherwise.\n */\nasync function isTokenApprovedForTransfer(provider, transferrerContractAddress, assetContract, tokenId, owner) {\n  try {\n    const erc165 = new Contract(assetContract, ERC165Abi, provider);\n    const isERC721 = await erc165.supportsInterface(InterfaceId_IERC721);\n    const isERC1155 = await erc165.supportsInterface(InterfaceId_IERC1155);\n    if (isERC721) {\n      const asset = new Contract(assetContract, Erc721Abi, provider);\n      const approved = await asset.isApprovedForAll(owner, transferrerContractAddress);\n      if (approved) {\n        return true;\n      }\n      return (await asset.getApproved(tokenId)).toLowerCase() === transferrerContractAddress.toLowerCase();\n    } else if (isERC1155) {\n      const asset = new Contract(assetContract, Erc1155Abi, provider);\n      return await asset.isApprovedForAll(owner, transferrerContractAddress);\n    } else {\n      console.error(\"Contract does not implement ERC 1155 or ERC 721.\");\n      return false;\n    }\n  } catch (err) {\n    console.error(\"Failed to check if token is approved\", err);\n    return false;\n  }\n}\n\n/**\n * Checks if the marketplace is approved to make transfers on the assetContract\n * If not, it tries to set the approval.\n * @param contractWrapper\n * @param marketplaceAddress\n * @param assetContract\n * @param tokenId\n * @param from\n */\nasync function handleTokenApproval(contractWrapper, marketplaceAddress, assetContract, tokenId, from) {\n  const erc165 = new ContractWrapper(contractWrapper.getSignerOrProvider(), assetContract, ERC165Abi, contractWrapper.options);\n  const isERC721 = await erc165.readContract.supportsInterface(InterfaceId_IERC721);\n  const isERC1155 = await erc165.readContract.supportsInterface(InterfaceId_IERC1155);\n  // check for token approval\n  if (isERC721) {\n    const asset = new ContractWrapper(contractWrapper.getSignerOrProvider(), assetContract, Erc721Abi, contractWrapper.options);\n    const approved = await asset.readContract.isApprovedForAll(from, marketplaceAddress);\n    if (!approved) {\n      const isTokenApproved = (await asset.readContract.getApproved(tokenId)).toLowerCase() === marketplaceAddress.toLowerCase();\n      if (!isTokenApproved) {\n        await asset.sendTransaction(\"setApprovalForAll\", [marketplaceAddress, true]);\n      }\n    }\n  } else if (isERC1155) {\n    const asset = new ContractWrapper(contractWrapper.getSignerOrProvider(), assetContract, Erc1155Abi, contractWrapper.options);\n    const approved = await asset.readContract.isApprovedForAll(from, marketplaceAddress);\n    if (!approved) {\n      await asset.sendTransaction(\"setApprovalForAll\", [marketplaceAddress, true]);\n    }\n  } else {\n    throw Error(\"Contract must implement ERC 1155 or ERC 721.\");\n  }\n}\n\n/**\n * Used to verify fields in new listing.\n * @internal\n */\n// TODO this should be done in zod\nfunction validateNewListingParam(param) {\n  invariant(param.assetContractAddress !== undefined && param.assetContractAddress !== null, \"Asset contract address is required\");\n  invariant(param.buyoutPricePerToken !== undefined && param.buyoutPricePerToken !== null, \"Buyout price is required\");\n  invariant(param.listingDurationInSeconds !== undefined && param.listingDurationInSeconds !== null, \"Listing duration is required\");\n  invariant(param.startTimestamp !== undefined && param.startTimestamp !== null, \"Start time is required\");\n  invariant(param.tokenId !== undefined && param.tokenId !== null, \"Token ID is required\");\n  invariant(param.quantity !== undefined && param.quantity !== null, \"Quantity is required\");\n  switch (param.type) {\n    case \"NewAuctionListing\":\n      {\n        invariant(param.reservePricePerToken !== undefined && param.reservePricePerToken !== null, \"Reserve price is required\");\n      }\n  }\n}\n\n/**\n * Maps a contract offer to the strict interface\n *\n * @internal\n * @param offer\n * @returns - An `Offer` object\n */\nasync function mapOffer(provider, listingId, offer) {\n  return {\n    quantity: offer.quantityDesired,\n    pricePerToken: offer.pricePerToken,\n    currencyContractAddress: offer.currency,\n    buyerAddress: offer.offeror,\n    quantityDesired: offer.quantityWanted,\n    currencyValue: await fetchCurrencyValue(provider, offer.currency, offer.quantityWanted.mul(offer.pricePerToken)),\n    listingId\n  };\n}\nfunction isWinningBid(winningPrice, newBidPrice, bidBuffer) {\n  bidBuffer = BigNumber.from(bidBuffer);\n  winningPrice = BigNumber.from(winningPrice);\n  newBidPrice = BigNumber.from(newBidPrice);\n  if (winningPrice.eq(BigNumber.from(0))) {\n    return false;\n  }\n  const buffer = newBidPrice.sub(winningPrice).mul(MAX_BPS).div(winningPrice);\n  return buffer.gte(bidBuffer);\n}\n\n/**\n * Handles direct listings\n * @public\n */\nclass MarketplaceDirect {\n  constructor(contractWrapper, storage) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get a direct listing by id\n   *\n   * @param listingId - the listing id\n   * @returns the Direct listing object\n   */\n  async getListing(listingId) {\n    const listing = await this.contractWrapper.readContract.listings(listingId);\n    if (listing.assetContract === constants.AddressZero) {\n      throw new ListingNotFoundError(this.getAddress(), listingId.toString());\n    }\n    if (listing.listingType !== ListingType.Direct) {\n      throw new WrongListingTypeError(this.getAddress(), listingId.toString(), \"Auction\", \"Direct\");\n    }\n    return await this.mapListing(listing);\n  }\n\n  /**\n   * Get the active offer on a listing\n   * @param listingId - the listing id\n   * @param address - the address that made the offer\n   */\n  async getActiveOffer(listingId, address) {\n    await this.validateListing(BigNumber.from(listingId));\n    invariant(utils.isAddress(address), \"Address must be a valid address\");\n    const offers = await this.contractWrapper.readContract.offers(listingId, address);\n    if (offers.offeror === constants.AddressZero) {\n      return undefined;\n    }\n    return await mapOffer(this.contractWrapper.getProvider(), BigNumber.from(listingId), offers);\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Direct Listing\n   *\n   * @remarks Create a new listing on the marketplace where people can buy an asset directly.\n   *\n   * @example\n   * ```javascript\n   * // Data of the listing you want to create\n   * const listing = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *   // when should the listing open up for offers\n   *   startTimestamp: new Date(),\n   *   // how long the listing will be open for\n   *   listingDurationInSeconds: 86400,\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // how much the asset will be sold for\n   *   buyoutPricePerToken: \"1.5\",\n   * }\n   *\n   * const tx = await contract.direct.createListing(listing);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   * ```\n   */\n  async createListing(listing) {\n    validateNewListingParam(listing);\n    await handleTokenApproval(this.contractWrapper, this.getAddress(), listing.assetContractAddress, listing.tokenId, await this.contractWrapper.getSignerAddress());\n    const normalizedPricePerToken = await normalizePriceValue(this.contractWrapper.getProvider(), listing.buyoutPricePerToken, listing.currencyContractAddress);\n    let listingStartTime = Math.floor(listing.startTimestamp.getTime() / 1000);\n    const block = await this.contractWrapper.getProvider().getBlock(\"latest\");\n    const blockTime = block.timestamp;\n    if (listingStartTime < blockTime) {\n      listingStartTime = blockTime;\n    }\n    const receipt = await this.contractWrapper.sendTransaction(\"createListing\", [{\n      assetContract: listing.assetContractAddress,\n      tokenId: listing.tokenId,\n      buyoutPricePerToken: normalizedPricePerToken,\n      currencyToAccept: cleanCurrencyAddress(listing.currencyContractAddress),\n      listingType: ListingType.Direct,\n      quantityToList: listing.quantity,\n      reservePricePerToken: normalizedPricePerToken,\n      secondsUntilEndTime: listing.listingDurationInSeconds,\n      startTime: BigNumber.from(listingStartTime)\n    }], {\n      // Higher gas limit for create listing\n      gasLimit: 500000\n    });\n    const event = this.contractWrapper.parseLogs(\"ListingAdded\", receipt?.logs);\n    return {\n      id: event[0].args.listingId,\n      receipt\n    };\n  }\n\n  /**\n   * Make an offer for a Direct Listing\n   *\n   * @remarks Make an offer on a direct listing\n   *\n   * @example\n   * ```javascript\n   * import { ChainId, NATIVE_TOKENS } from \"@thirdweb-dev/sdk\";\n   *\n   * // The listing ID of the asset you want to offer on\n   * const listingId = 0;\n   * // The price you are willing to offer per token\n   * const pricePerToken = 1;\n   * // The quantity of tokens you want to receive for this offer\n   * const quantity = 1;\n   * // The address of the currency you are making the offer in (must be ERC-20)\n   * const currencyContractAddress = NATIVE_TOKENS[ChainId.Rinkeby].wrapped.address\n   *\n   * await contract.direct.makeOffer(\n   *   listingId,\n   *   quantity,\n   *   currencyContractAddress,\n   *   pricePerToken\n   * );\n   * ```\n   */\n  async makeOffer(listingId, quantityDesired, currencyContractAddress, pricePerToken, expirationDate) {\n    if (isNativeToken(currencyContractAddress)) {\n      throw new Error(\"You must use the wrapped native token address when making an offer with a native token\");\n    }\n    const normalizedPrice = await normalizePriceValue(this.contractWrapper.getProvider(), pricePerToken, currencyContractAddress);\n    try {\n      await this.getListing(listingId);\n    } catch (err) {\n      console.error(\"Failed to get listing, err =\", err);\n      throw new Error(`Error getting the listing with id ${listingId}`);\n    }\n    const quantity = BigNumber.from(quantityDesired);\n    const value = BigNumber.from(normalizedPrice).mul(quantity);\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await setErc20Allowance(this.contractWrapper, value, currencyContractAddress, overrides);\n    let expirationTimestamp = ethers.constants.MaxUint256;\n    if (expirationDate) {\n      expirationTimestamp = BigNumber.from(Math.floor(expirationDate.getTime() / 1000));\n    }\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"offer\", [listingId, quantityDesired, currencyContractAddress, normalizedPrice, expirationTimestamp], overrides)\n    };\n  }\n\n  /**\n   * Accept an offer on a direct listing\n   *\n   * @remarks Accept an offer on a direct listing\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to bid on\n   * const listingId = 0;\n   * // The price you are willing to bid for a single token of the listing\n   * const offeror = \"0x...\";\n   *\n   * await contract.direct.acceptOffer(listingId, offeror);\n   * ```\n   */\n  async acceptOffer(listingId, addressOfOfferor) {\n    /**\n     * TODO:\n     * - Provide better error handling if offer is too low.\n     */\n    await this.validateListing(BigNumber.from(listingId));\n    const offer = await this.contractWrapper.readContract.offers(listingId, addressOfOfferor);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"acceptOffer\", [listingId, addressOfOfferor, offer.currency, offer.pricePerToken])\n    };\n  }\n\n  /**\n   * Buy a Listing\n   *\n   * @remarks Buy a specific direct listing from the marketplace.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to buy\n   * const listingId = 0;\n   * // Quantity of the asset you want to buy\n   * const quantityDesired = 1;\n   *\n   * await contract.direct.buyoutListing(listingId, quantityDesired);\n   * ```\n   *\n   * @param listingId - The listing id to buy\n   * @param quantityDesired - the quantity to buy\n   * @param receiver - optional receiver of the bought listing if different from the connected wallet\n   */\n  async buyoutListing(listingId, quantityDesired, receiver) {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    const {\n      valid,\n      error\n    } = await this.isStillValidListing(listing, quantityDesired);\n    if (!valid) {\n      throw new Error(`Listing ${listingId} is no longer valid. ${error}`);\n    }\n    const buyFor = receiver ? receiver : await this.contractWrapper.getSignerAddress();\n    const quantity = BigNumber.from(quantityDesired);\n    const value = BigNumber.from(listing.buyoutPrice).mul(quantity);\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await setErc20Allowance(this.contractWrapper, value, listing.currencyContractAddress, overrides);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"buy\", [listingId, buyFor, quantity, listing.currencyContractAddress, value], overrides)\n    };\n  }\n\n  /**\n   * Update a Direct listing with new metadata.\n   *\n   * Note: cannot update a listing with a new quantity of 0. Use `cancelDirectListing` to remove a listing instead.\n   *\n   * @param listing - the new listing information\n   */\n  async updateListing(listing) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"updateListing\", [listing.id, listing.quantity, listing.buyoutPrice,\n      // reserve price, doesn't matter for direct listing\n      listing.buyoutPrice, listing.currencyContractAddress, listing.startTimeInSeconds, listing.secondsUntilEnd])\n    };\n  }\n\n  /**\n   * Cancel Direct Listing\n   *\n   * @remarks Cancel a direct listing on the marketplace\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the direct listing you want to cancel\n   * const listingId = \"0\";\n   *\n   * await contract.direct.cancelListing(listingId);\n   * ```\n   */\n  async cancelListing(listingId) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"cancelDirectListing\", [listingId])\n    };\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Throws error if listing could not be found\n   *\n   * @param listingId - Listing to check for\n   */\n  async validateListing(listingId) {\n    try {\n      return await this.getListing(listingId);\n    } catch (err) {\n      console.error(`Error getting the listing with id ${listingId}`);\n      throw err;\n    }\n  }\n\n  /**\n   * Helper method maps the auction listing to the direct listing interface.\n   *\n   * @internal\n   * @param listing - The listing to map, as returned from the contract.\n   * @returns - The mapped interface.\n   */\n  async mapListing(listing) {\n    return {\n      assetContractAddress: listing.assetContract,\n      buyoutPrice: BigNumber.from(listing.buyoutPricePerToken),\n      currencyContractAddress: listing.currency,\n      buyoutCurrencyValuePerToken: await fetchCurrencyValue(this.contractWrapper.getProvider(), listing.currency, listing.buyoutPricePerToken),\n      id: listing.listingId.toString(),\n      tokenId: listing.tokenId,\n      quantity: listing.quantity,\n      startTimeInSeconds: listing.startTime,\n      asset: await fetchTokenMetadataForContract(listing.assetContract, this.contractWrapper.getProvider(), listing.tokenId, this.storage),\n      secondsUntilEnd: listing.endTime,\n      sellerAddress: listing.tokenOwner,\n      type: ListingType.Direct\n    };\n  }\n\n  /**\n   * Use this method to check if a direct listing is still valid.\n   *\n   * Ways a direct listing can become invalid:\n   * 1. The asset holder transferred the asset to another wallet\n   * 2. The asset holder burned the asset\n   * 3. The asset holder removed the approval on the marketplace\n   *\n   * @internal\n   * @param listing - The listing to check.\n   * @returns - True if the listing is valid, false otherwise.\n   */\n  async isStillValidListing(listing, quantity) {\n    const approved = await isTokenApprovedForTransfer(this.contractWrapper.getProvider(), this.getAddress(), listing.assetContractAddress, listing.tokenId, listing.sellerAddress);\n    if (!approved) {\n      return {\n        valid: false,\n        error: `Token '${listing.tokenId}' from contract '${listing.assetContractAddress}' is not approved for transfer`\n      };\n    }\n    const provider = this.contractWrapper.getProvider();\n    const erc165 = new Contract(listing.assetContractAddress, ERC165Abi, provider);\n    const isERC721 = await erc165.supportsInterface(InterfaceId_IERC721);\n    const isERC1155 = await erc165.supportsInterface(InterfaceId_IERC1155);\n    if (isERC721) {\n      const asset = new Contract(listing.assetContractAddress, Erc721Abi, provider);\n      const valid = (await asset.ownerOf(listing.tokenId)).toLowerCase() === listing.sellerAddress.toLowerCase();\n      return {\n        valid,\n        error: valid ? undefined : `Seller is not the owner of Token '${listing.tokenId}' from contract '${listing.assetContractAddress} anymore'`\n      };\n    } else if (isERC1155) {\n      const asset = new Contract(listing.assetContractAddress, Erc1155Abi, provider);\n      const balance = await asset.balanceOf(listing.sellerAddress, listing.tokenId);\n      const valid = balance.gte(quantity || listing.quantity);\n      return {\n        valid,\n        error: valid ? undefined : `Seller does not have enough balance of Token '${listing.tokenId}' from contract '${listing.assetContractAddress} to fulfill the listing`\n      };\n    } else {\n      return {\n        valid: false,\n        error: \"Contract does not implement ERC 1155 or ERC 721.\"\n      };\n    }\n  }\n}\n\n/**\n * Handles auction listings\n * @public\n */\nclass MarketplaceAuction {\n  constructor(contractWrapper, storage) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"encoder\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n    this.encoder = new ContractEncoder(contractWrapper);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /** ******************************\n   * READ FUNCTIONS\n   *******************************/\n\n  /**\n   * Get an Auction listing by id\n   *\n   * @param listingId - the listing Id\n   * @returns the Auction listing object\n   */\n  async getListing(listingId) {\n    const listing = await this.contractWrapper.readContract.listings(listingId);\n    if (listing.listingId.toString() !== listingId.toString()) {\n      throw new ListingNotFoundError(this.getAddress(), listingId.toString());\n    }\n    if (listing.listingType !== ListingType.Auction) {\n      throw new WrongListingTypeError(this.getAddress(), listingId.toString(), \"Direct\", \"Auction\");\n    }\n    return await this.mapListing(listing);\n  }\n\n  /**\n   * Get Highest Bid\n   *\n   * @remarks Get the current highest bid of an active auction.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction that closed\n   * const listingId = 0;\n   *\n   * contract.auction.\n   *   .getWinningBid(listingId)\n   *   .then((offer) => console.log(offer))\n   *   .catch((err) => console.error(err));\n   * ```\n   */\n  async getWinningBid(listingId) {\n    await this.validateListing(BigNumber.from(listingId));\n    const offers = await this.contractWrapper.readContract.winningBid(listingId);\n    if (offers.offeror === constants.AddressZero) {\n      return undefined;\n    }\n    return await mapOffer(this.contractWrapper.getProvider(), BigNumber.from(listingId), offers);\n  }\n\n  /**\n   * Get Auction Winner\n   *\n   * @remarks Get the winner of the auction after an auction ends.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction that closed\n   * const listingId = 0;\n   *\n   * contract.auction.\n   *   .getWinner(listingId)\n   *   .then((auctionWinner) => console.log(auctionWinner))\n   *   .catch((err) => console.error(err));\n   * ```\n   */\n  async getWinner(listingId) {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    const offers = await this.contractWrapper.readContract.winningBid(listingId);\n    const now = BigNumber.from(Math.floor(Date.now() / 1000));\n    const endTime = BigNumber.from(listing.endTimeInEpochSeconds);\n\n    // if we have a winner in the map and the current time is past the endtime of the auction return the address of the winner\n    if (now.gt(endTime) && offers.offeror !== constants.AddressZero) {\n      return offers.offeror;\n    }\n    // otherwise fall back to query filter things\n\n    // TODO this should be via indexer or direct contract call\n    const closedAuctions = await this.contractWrapper.readContract.queryFilter(this.contractWrapper.readContract.filters.AuctionClosed());\n    const auction = closedAuctions.find(a => a.args.listingId.eq(BigNumber.from(listingId)));\n    if (!auction) {\n      throw new Error(`Could not find auction with listingId ${listingId} in closed auctions`);\n    }\n    return auction.args.winningBidder;\n  }\n\n  /** ******************************\n   * WRITE FUNCTIONS\n   *******************************/\n\n  /**\n   * Create Auction\n   *\n   * @remarks Create a new auction where people can bid on an asset.\n   *\n   * @example\n   * ```javascript\n   * // Data of the auction you want to create\n   * const auction = {\n   *   // address of the contract the asset you want to list is on\n   *   assetContractAddress: \"0x...\",\n   *   // token ID of the asset you want to list\n   *   tokenId: \"0\",\n   *  // when should the listing open up for offers\n   *   startTimestamp: new Date(),\n   *   // how long the listing will be open for\n   *   listingDurationInSeconds: 86400,\n   *   // how many of the asset you want to list\n   *   quantity: 1,\n   *   // address of the currency contract that will be used to pay for the listing\n   *   currencyContractAddress: NATIVE_TOKEN_ADDRESS,\n   *   // how much people would have to bid to instantly buy the asset\n   *   buyoutPricePerToken: \"10\",\n   *   // the minimum bid that will be accepted for the token\n   *   reservePricePerToken: \"1.5\",\n   * }\n   *\n   * const tx = await contract.auction.createListing(auction);\n   * const receipt = tx.receipt; // the transaction receipt\n   * const id = tx.id; // the id of the newly created listing\n   * ```\n   */\n  async createListing(listing) {\n    validateNewListingParam(listing);\n    await handleTokenApproval(this.contractWrapper, this.getAddress(), listing.assetContractAddress, listing.tokenId, await this.contractWrapper.getSignerAddress());\n    const normalizedPricePerToken = await normalizePriceValue(this.contractWrapper.getProvider(), listing.buyoutPricePerToken, listing.currencyContractAddress);\n    const normalizedReservePrice = await normalizePriceValue(this.contractWrapper.getProvider(), listing.reservePricePerToken, listing.currencyContractAddress);\n    let listingStartTime = Math.floor(listing.startTimestamp.getTime() / 1000);\n    const block = await this.contractWrapper.getProvider().getBlock(\"latest\");\n    const blockTime = block.timestamp;\n    if (listingStartTime < blockTime) {\n      listingStartTime = blockTime;\n    }\n    const receipt = await this.contractWrapper.sendTransaction(\"createListing\", [{\n      assetContract: listing.assetContractAddress,\n      tokenId: listing.tokenId,\n      buyoutPricePerToken: normalizedPricePerToken,\n      currencyToAccept: cleanCurrencyAddress(listing.currencyContractAddress),\n      listingType: ListingType.Auction,\n      quantityToList: listing.quantity,\n      reservePricePerToken: normalizedReservePrice,\n      secondsUntilEndTime: listing.listingDurationInSeconds,\n      startTime: BigNumber.from(listingStartTime)\n    }], {\n      // Higher gas limit for create listing\n      gasLimit: 500000\n    });\n    const event = this.contractWrapper.parseLogs(\"ListingAdded\", receipt?.logs);\n    return {\n      id: event[0].args.listingId,\n      receipt\n    };\n  }\n\n  /**\n   * Buyout Auction\n   *\n   * @remarks Buy a specific direct listing from the marketplace.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to buy\n   * const listingId = 0;\n   *\n   * await contract.auction.buyoutListing(listingId);\n   * ```\n   */\n  async buyoutListing(listingId) {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    const currencyMetadata = await fetchCurrencyMetadata(this.contractWrapper.getProvider(), listing.currencyContractAddress);\n    return this.makeBid(listingId, ethers.utils.formatUnits(listing.buyoutPrice, currencyMetadata.decimals));\n  }\n\n  /**\n   * Bid On Auction\n   *\n   * @remarks Make a bid on an auction listing\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the asset you want to bid on\n   * const listingId = 0;\n   * // The price you are willing to bid for a single token of the listing\n   * const pricePerToken = 1;\n   *\n   * await contract.auction.makeBid(listingId, pricePerToken);\n   * ```\n   */\n  async makeBid(listingId, pricePerToken) {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    const normalizedPrice = await normalizePriceValue(this.contractWrapper.getProvider(), pricePerToken, listing.currencyContractAddress);\n    if (normalizedPrice.eq(BigNumber.from(0))) {\n      throw new Error(\"Cannot make a bid with 0 value\");\n    }\n    const bidBuffer = await this.contractWrapper.readContract.bidBufferBps();\n    const winningBid = await this.getWinningBid(listingId);\n    if (winningBid) {\n      const isWinnner = isWinningBid(winningBid.pricePerToken, normalizedPrice, bidBuffer);\n      invariant(isWinnner, \"Bid price is too low based on the current winning bid and the bid buffer\");\n    } else {\n      const tokenPrice = normalizedPrice;\n      const reservePrice = BigNumber.from(listing.reservePrice);\n      invariant(tokenPrice.gte(reservePrice), \"Bid price is too low based on reserve price\");\n    }\n    const quantity = BigNumber.from(listing.quantity);\n    const value = normalizedPrice.mul(quantity);\n    const overrides = (await this.contractWrapper.getCallOverrides()) || {};\n    await setErc20Allowance(this.contractWrapper, value, listing.currencyContractAddress, overrides);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"offer\", [listingId, listing.quantity, listing.currencyContractAddress, normalizedPrice, ethers.constants.MaxUint256], overrides)\n    };\n  }\n\n  /**\n   * Cancel Auction Listing\n   *\n   * @remarks Cancel an auction listing on the marketplace\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction listing you want to cancel\n   * const listingId = \"0\";\n   *\n   * await contract.auction.cancelListing(listingId);\n   * ```\n   */\n  async cancelListing(listingId) {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    const now = BigNumber.from(Math.floor(Date.now() / 1000));\n    const startTime = BigNumber.from(listing.startTimeInEpochSeconds);\n    const offers = await this.contractWrapper.readContract.winningBid(listingId);\n    if (now.gt(startTime) && offers.offeror !== constants.AddressZero) {\n      throw new AuctionAlreadyStartedError(listingId.toString());\n    }\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"closeAuction\", [BigNumber.from(listingId), await this.contractWrapper.getSignerAddress()])\n    };\n  }\n\n  /**\n   * Close the Auction for the buyer or the seller\n   *\n   * @remarks Closes the Auction and executes the sale for the buyer or the seller.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction listing you want to close\n   * const listingId = \"0\";\n   * await contract.auction.closeListing(listingId);\n   * ```\n   *\n   * @param listingId - the auction  listing ud to close\n   * @param closeFor - optionally pass the auction creator address or winning bid offeror address to close the auction on their behalf\n   */\n  async closeListing(listingId, closeFor) {\n    if (!closeFor) {\n      closeFor = await this.contractWrapper.getSignerAddress();\n    }\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    try {\n      return {\n        receipt: await this.contractWrapper.sendTransaction(\"closeAuction\", [BigNumber.from(listingId), closeFor])\n      };\n    } catch (err) {\n      if (err.message.includes(\"cannot close auction before it has ended\")) {\n        throw new AuctionHasNotEndedError(listingId.toString(), listing.endTimeInEpochSeconds.toString());\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Execute the Auction Sale\n   *\n   * @remarks Closes the Auction and executes the sale for both parties.\n   *\n   * @example\n   * ```javascript\n   * // The listing ID of the auction listing you want to close\n   * const listingId = \"0\";\n   * await contract.auction.executeSale(listingId);\n   * ```\n   *\n   * @param listingId - the auction  listing ud to close\n   */\n  async executeSale(listingId) {\n    const listing = await this.validateListing(BigNumber.from(listingId));\n    try {\n      const winningBid = await this.getWinningBid(listingId);\n      invariant(winningBid, \"No winning bid found\");\n      const closeForSeller = this.encoder.encode(\"closeAuction\", [listingId, listing.sellerAddress]);\n      const closeForBuyer = this.encoder.encode(\"closeAuction\", [listingId, winningBid.buyerAddress]);\n      return await this.contractWrapper.multiCall([closeForSeller, closeForBuyer]);\n    } catch (err) {\n      if (err.message.includes(\"cannot close auction before it has ended\")) {\n        throw new AuctionHasNotEndedError(listingId.toString(), listing.endTimeInEpochSeconds.toString());\n      } else {\n        throw err;\n      }\n    }\n  }\n\n  /**\n   * Update an Auction listing with new metadata\n   * @param listing - the listing id to update\n   */\n  async updateListing(listing) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"updateListing\", [listing.id, listing.quantity, listing.reservePrice, listing.buyoutPrice, listing.currencyContractAddress, listing.startTimeInEpochSeconds, listing.endTimeInEpochSeconds])\n    };\n  }\n\n  /**\n   * Get the buffer in basis points between offers\n   */\n  async getBidBufferBps() {\n    return this.contractWrapper.readContract.bidBufferBps();\n  }\n\n  /**\n   * returns the minimum bid a user can place to outbid the previous highest bid\n   * @param listingId - the listing id of the auction\n   */\n  async getMinimumNextBid(listingId) {\n    // we can fetch all of these at the same time using promise.all\n    const [currentBidBufferBps, winningBid, listing] = await Promise.all([this.getBidBufferBps(), this.getWinningBid(listingId), await this.validateListing(BigNumber.from(listingId))]);\n    const currentBidOrReservePrice = winningBid ?\n    // if there is a winning bid use the value of it\n    winningBid.currencyValue.value :\n    // if there is no winning bid use the reserve price\n    listing.reservePrice;\n    const minimumNextBid = currentBidOrReservePrice.add(\n    // the addition of the current bid and the buffer\n    // (have to divide by 10000 to get the fraction of the buffer (since it's in basis points))\n    currentBidOrReservePrice.mul(currentBidBufferBps).div(10000));\n\n    // it's more useful to return a currency value here\n    return fetchCurrencyValue(this.contractWrapper.getProvider(), listing.currencyContractAddress, minimumNextBid);\n  }\n\n  /** ******************************\n   * PRIVATE FUNCTIONS\n   *******************************/\n\n  /**\n   * Throws error if listing could not be found\n   *\n   * @param listingId - Listing to check for\n   */\n  async validateListing(listingId) {\n    try {\n      return await this.getListing(listingId);\n    } catch (err) {\n      console.error(`Error getting the listing with id ${listingId}`);\n      throw err;\n    }\n  }\n\n  /**\n   * Helper method maps the auction listing to the auction listing interface.\n   *\n   * @internal\n   * @param listing - The listing to map, as returned from the contract.\n   * @returns - The mapped interface.\n   */\n  async mapListing(listing) {\n    return {\n      assetContractAddress: listing.assetContract,\n      buyoutPrice: BigNumber.from(listing.buyoutPricePerToken),\n      currencyContractAddress: listing.currency,\n      buyoutCurrencyValuePerToken: await fetchCurrencyValue(this.contractWrapper.getProvider(), listing.currency, listing.buyoutPricePerToken),\n      id: listing.listingId.toString(),\n      tokenId: listing.tokenId,\n      quantity: listing.quantity,\n      startTimeInEpochSeconds: listing.startTime,\n      asset: await fetchTokenMetadataForContract(listing.assetContract, this.contractWrapper.getProvider(), listing.tokenId, this.storage),\n      reservePriceCurrencyValuePerToken: await fetchCurrencyValue(this.contractWrapper.getProvider(), listing.currency, listing.reservePricePerToken),\n      reservePrice: BigNumber.from(listing.reservePricePerToken),\n      endTimeInEpochSeconds: listing.endTime,\n      sellerAddress: listing.tokenOwner,\n      type: ListingType.Auction\n    };\n  }\n}\n\nconst DropErc20ContractInput = CommonContractSchema.merge(MerkleSchema).merge(CommonSymbolSchema);\nconst DropErc20ContractOutput = CommonContractOutputSchema.merge(MerkleSchema).merge(CommonSymbolSchema);\nconst DropErc20ContractDeploy = DropErc20ContractInput.merge(CommonPlatformFeeSchema).merge(CommonPrimarySaleSchema).merge(CommonTrustedForwarderSchema);\nconst DropErc20ContractSchema = {\n  deploy: DropErc20ContractDeploy,\n  output: DropErc20ContractOutput,\n  input: DropErc20ContractInput\n};\n\nconst MultiwrapContractInput = CommonContractSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst MultiwrapContractOutput = CommonContractOutputSchema.merge(CommonRoyaltySchema).merge(CommonSymbolSchema);\nconst MultiwrapContractDeploy = MultiwrapContractInput.merge(CommonTrustedForwarderSchema);\nconst MultiwrapContractSchema = {\n  deploy: MultiwrapContractDeploy,\n  output: MultiwrapContractOutput,\n  input: MultiwrapContractInput\n};\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\nconst EditionDropInitializer = {\n  name: \"DropERC1155\",\n  contractType: \"edition-drop\",\n  schema: DropErc1155ContractSchema,\n  roles: [\"admin\", \"minter\", \"transfer\"],\n  initialize: async function () {\n    for (var _len = arguments.length, _ref = new Array(_len), _key = 0; _key < _len; _key++) {\n      _ref[_key] = arguments[_key];\n    }\n    let [network, address, storage, options] = _ref;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([await EditionDropInitializer.getAbi(address, provider), import('./edition-drop-f16cbe1e.esm.js'), provider.getNetwork()]);\n    return new contract.EditionDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 2 ? (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC1155.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC1155_V2.json')).default;\n  }\n};\nconst EditionInitializer = {\n  name: \"TokenERC1155\",\n  contractType: \"edition\",\n  schema: TokenErc1155ContractSchema,\n  roles: [\"admin\", \"minter\", \"transfer\"],\n  initialize: async function () {\n    for (var _len2 = arguments.length, _ref2 = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      _ref2[_key2] = arguments[_key2];\n    }\n    let [network, address, storage, options] = _ref2;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([EditionInitializer.getAbi(address, provider), import('./edition-63e45020.esm.js'), provider.getNetwork()]);\n    return new contract.Edition(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/TokenERC1155.json')).default;\n  }\n};\nconst MarketplaceInitializer = {\n  name: \"Marketplace\",\n  contractType: \"marketplace\",\n  schema: MarketplaceContractSchema,\n  roles: [\"admin\", \"lister\", \"asset\"],\n  initialize: async function () {\n    for (var _len3 = arguments.length, _ref3 = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      _ref3[_key3] = arguments[_key3];\n    }\n    let [network, address, storage, options] = _ref3;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([MarketplaceInitializer.getAbi(address, provider), import('./marketplace-2a793a9e.esm.js'), provider.getNetwork()]);\n    return new contract.Marketplace(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/Marketplace.json')).default;\n  }\n};\nconst MultiwrapInitializer = {\n  name: \"Multiwrap\",\n  contractType: \"multiwrap\",\n  schema: MultiwrapContractSchema,\n  roles: [\"admin\", \"transfer\", \"minter\", \"unwrap\", \"asset\"],\n  initialize: async function () {\n    for (var _len4 = arguments.length, _ref4 = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      _ref4[_key4] = arguments[_key4];\n    }\n    let [network, address, storage, options] = _ref4;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([MultiwrapInitializer.getAbi(address, provider), import('./multiwrap-51bc6646.esm.js'), provider.getNetwork()]);\n    return new contract.Multiwrap(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/Multiwrap.json')).default;\n  }\n};\nconst NFTCollectionInitializer = {\n  name: \"TokenERC721\",\n  contractType: \"nft-collection\",\n  schema: TokenErc721ContractSchema,\n  roles: [\"admin\", \"minter\", \"transfer\"],\n  initialize: async function () {\n    for (var _len5 = arguments.length, _ref5 = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n      _ref5[_key5] = arguments[_key5];\n    }\n    let [network, address, storage, options] = _ref5;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([NFTCollectionInitializer.getAbi(address, provider), import('./nft-collection-239c6356.esm.js'), provider.getNetwork()]);\n    return new contract.NFTCollection(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/TokenERC721.json')).default;\n  }\n};\nconst NFTDropInitializer = {\n  name: \"DropERC721\",\n  contractType: \"nft-drop\",\n  schema: DropErc721ContractSchema,\n  roles: [\"admin\", \"minter\", \"transfer\"],\n  initialize: async function () {\n    for (var _len6 = arguments.length, _ref6 = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n      _ref6[_key6] = arguments[_key6];\n    }\n    let [network, address, storage, options] = _ref6;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([NFTDropInitializer.getAbi(address, provider), import('./nft-drop-cbb0ae6c.esm.js'), provider.getNetwork()]);\n    return new contract.NFTDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 3 ? (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC721.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC721_V3.json')).default;\n  }\n};\nconst PackInitializer = {\n  name: \"Pack\",\n  contractType: \"pack\",\n  schema: PackContractSchema,\n  roles: [\"admin\", \"minter\", \"asset\", \"transfer\"],\n  initialize: async function () {\n    for (var _len7 = arguments.length, _ref7 = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n      _ref7[_key7] = arguments[_key7];\n    }\n    let [network, address, storage, options] = _ref7;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([PackInitializer.getAbi(address, provider), import('./pack-2f8c55e9.esm.js'), provider.getNetwork()]);\n    return new contract.Pack(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/Pack.json')).default;\n  }\n};\nconst SignatureDropInitializer = {\n  name: \"SignatureDrop\",\n  contractType: \"signature-drop\",\n  schema: DropErc721ContractSchema,\n  roles: [\"admin\", \"minter\", \"transfer\"],\n  initialize: async function () {\n    for (var _len8 = arguments.length, _ref8 = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n      _ref8[_key8] = arguments[_key8];\n    }\n    let [network, address, storage, options] = _ref8;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([SignatureDropInitializer.getAbi(address, provider), import('./signature-drop-add9266e.esm.js'), provider.getNetwork()]);\n    return new contract.SignatureDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 4 ? (await import('@thirdweb-dev/contracts-js/dist/abis/SignatureDrop.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/SignatureDrop_V4.json')).default;\n  }\n};\nconst SplitInitializer = {\n  name: \"Split\",\n  contractType: \"split\",\n  schema: SplitsContractSchema,\n  roles: [\"admin\"],\n  initialize: async function () {\n    for (var _len9 = arguments.length, _ref9 = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n      _ref9[_key9] = arguments[_key9];\n    }\n    let [network, address, storage, options] = _ref9;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([SplitInitializer.getAbi(address, provider), import('./split-19d2d8dc.esm.js'), provider.getNetwork()]);\n    return new contract.Split(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/Split.json')).default;\n  }\n};\nconst TokenDropInitializer = {\n  name: \"DropERC20\",\n  contractType: \"token-drop\",\n  schema: DropErc20ContractSchema,\n  roles: [\"admin\", \"transfer\"],\n  initialize: async function () {\n    for (var _len10 = arguments.length, _ref10 = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n      _ref10[_key10] = arguments[_key10];\n    }\n    let [network, address, storage, options] = _ref10;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([TokenDropInitializer.getAbi(address, provider), import('./token-drop-06cca1c8.esm.js'), provider.getNetwork()]);\n    return new contract.TokenDrop(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    const contractInfo = await getContractInfo(address, provider);\n    return !contractInfo || contractInfo.version > 2 ? (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC20.json')).default : (await import('@thirdweb-dev/contracts-js/dist/abis/DropERC20_V2.json')).default;\n  }\n};\nconst TokenInitializer = {\n  name: \"TokenERC20\",\n  contractType: \"token\",\n  schema: TokenErc20ContractSchema,\n  roles: [\"admin\", \"minter\", \"transfer\"],\n  initialize: async function () {\n    for (var _len11 = arguments.length, _ref11 = new Array(_len11), _key11 = 0; _key11 < _len11; _key11++) {\n      _ref11[_key11] = arguments[_key11];\n    }\n    let [network, address, storage, options] = _ref11;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([TokenInitializer.getAbi(address, provider), import('./token-76d06ae4.esm.js'), provider.getNetwork()]);\n    return new contract.Token(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/TokenERC20.json')).default;\n  }\n};\nconst VoteInitializer = {\n  name: \"VoteERC20\",\n  contractType: \"vote\",\n  schema: VoteContractSchema,\n  roles: [],\n  initialize: async function () {\n    for (var _len12 = arguments.length, _ref12 = new Array(_len12), _key12 = 0; _key12 < _len12; _key12++) {\n      _ref12[_key12] = arguments[_key12];\n    }\n    let [network, address, storage, options] = _ref12;\n    const [, provider] = getSignerAndProvider(network, options);\n    const [abi, contract, _network] = await Promise.all([VoteInitializer.getAbi(address, provider), import('./vote-f85a81aa.esm.js'), provider.getNetwork()]);\n    return new contract.Vote(network, address, storage, options, abi, _network.chainId);\n  },\n  getAbi: async (address, provider) => {\n    return (await import('@thirdweb-dev/contracts-js/dist/abis/VoteERC20.json')).default;\n  }\n};\nasync function getContractInfo(address, provider) {\n  try {\n    return await getPrebuiltInfo(address, provider);\n  } catch (e) {\n    return undefined;\n  }\n}\n\n/**\n * a map from contractType -> contract metadata\n * @internal\n */\nconst PREBUILT_CONTRACTS_MAP = {\n  [EditionDropInitializer.contractType]: EditionDropInitializer,\n  [EditionInitializer.contractType]: EditionInitializer,\n  [MarketplaceInitializer.contractType]: MarketplaceInitializer,\n  [MultiwrapInitializer.contractType]: MultiwrapInitializer,\n  [NFTCollectionInitializer.contractType]: NFTCollectionInitializer,\n  [NFTDropInitializer.contractType]: NFTDropInitializer,\n  [PackInitializer.contractType]: PackInitializer,\n  [SignatureDropInitializer.contractType]: SignatureDropInitializer,\n  [SplitInitializer.contractType]: SplitInitializer,\n  [TokenDropInitializer.contractType]: TokenDropInitializer,\n  [TokenInitializer.contractType]: TokenInitializer,\n  [VoteInitializer.contractType]: VoteInitializer\n};\nconst SmartContract$1 = {\n  name: \"SmartContract\",\n  contractType: \"custom\",\n  schema: CustomContractSchema,\n  roles: ALL_ROLES\n};\nconst CONTRACTS_MAP = {\n  ...PREBUILT_CONTRACTS_MAP,\n  [SmartContract$1.contractType]: SmartContract$1\n};\n\n/**\n * @internal\n */\nfunction getContractTypeForRemoteName(name) {\n  return Object.values(CONTRACTS_MAP).find(contract => contract.name === name)?.contractType || \"custom\";\n}\nfunction getContractName(type) {\n  return Object.values(CONTRACTS_MAP).find(contract => contract.contractType === type)?.name;\n}\n\n/**\n * Have an official Application URI for this contract.\n * @remarks Configure an official Application URI for this contract.\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const appURI = await contract.appuri.get();\n * appURI = \"ipfs://some_ipfs_hash\";\n *\n * await contract.appuri.set(appURI)\n * ```\n * @public\n */\nclass ContractAppURI {\n  constructor(contractWrapper, metadata) {\n    _defineProperty(this, \"featureName\", FEATURE_APPURI.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"metadata\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.metadata = metadata;\n  }\n\n  /**\n   * Get the appURI for the contract\n   * @returns the appURI object\n   */\n  async get() {\n    if (detectContractFeature(this.contractWrapper, \"AppURI\")) {\n      return await this.contractWrapper.readContract.appURI();\n    }\n    return (await this.metadata.get()).appURI || \"\";\n  }\n\n  /**\n   * Set the appURI for the contract\n   * @param appURI - the uri to set (typically an IPFS hash)\n   */\n  async set(appURI) {\n    if (detectContractFeature(this.contractWrapper, \"AppURI\")) {\n      return {\n        receipt: await this.contractWrapper.sendTransaction(\"setAppURI\", [appURI])\n      };\n    }\n    return await this.metadata.update({\n      appURI\n    });\n  }\n}\n\n/**\n * Listen to Contract events in real time\n * @public\n */\nclass ContractEvents {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Subscribe to transactions in this contract.\n   * @remarks Will emit an \"event\" object containing the transaction status ('submitted' and 'completed') and hash\n   * @example\n   * ```javascript\n   * contract.events.addTransactionListener((event) => {\n   *   console.log(event);\n   * }\n   * ```\n   * @param listener - the callback function that will be called on every transaction\n   * @public\n   */\n  addTransactionListener(listener) {\n    this.contractWrapper.addListener(EventType.Transaction, listener);\n  }\n\n  /**\n   * Remove a transaction listener\n   * @remarks Remove a listener that was added with addTransactionListener\n   * @example\n   * ```javascript\n   * contract.events.removeTransactionListener((event) => {\n   *  console.log(event);\n   * }\n   * ```\n   * @param listener - the callback function to remove\n   * @public\n   */\n  removeTransactionListener(listener) {\n    this.contractWrapper.off(EventType.Transaction, listener);\n  }\n\n  /**\n   * Subscribe to contract events\n   * @remarks You can add a listener for any contract event to run a function when\n   * the event is emitted. For example, if you wanted to listen for a \"TokensMinted\" event,\n   * you could do the following:\n   * @example\n   * ```javascript\n   * contract.events.addEventListener(\"TokensMinted\", (event) => {\n   *   console.log(event);\n   * });\n   * ```\n   * @public\n   * @param eventName - the event name as defined in the contract\n   * @param listener - the callback function that will be called on every new event\n   * @returns a function to un-subscribe from the event\n   */\n  addEventListener(eventName, listener) {\n    // validates event, throws error if not found\n    const event = this.contractWrapper.readContract.interface.getEvent(eventName);\n    const address = this.contractWrapper.readContract.address;\n    const filter = {\n      address,\n      topics: [this.contractWrapper.readContract.interface.getEventTopic(event)]\n    };\n    const wrappedListener = log => {\n      const parsedLog = this.contractWrapper.readContract.interface.parseLog(log);\n      listener(this.toContractEvent(parsedLog.eventFragment, parsedLog.args, log));\n    };\n    this.contractWrapper.getProvider().on(filter, wrappedListener);\n    return () => {\n      this.contractWrapper.getProvider().off(filter, wrappedListener);\n    };\n  }\n\n  /**\n   * Listen to all events emitted from this contract\n   *\n   * @example\n   * ```javascript\n   * contract.events.listenToAllEvents((event) => {\n   *   console.log(event.eventName) // the name of the emitted event\n   *   console.log(event.data) // event payload\n   * }\n   * ```\n   * @public\n   * @param listener - the callback function that will be called on every new event\n   * @returns A function that can be called to stop listening to events\n   */\n  listenToAllEvents(listener) {\n    const address = this.contractWrapper.readContract.address;\n    const filter = {\n      address\n    };\n    const wrappedListener = log => {\n      try {\n        const parsedLog = this.contractWrapper.readContract.interface.parseLog(log);\n        listener(this.toContractEvent(parsedLog.eventFragment, parsedLog.args, log));\n      } catch (e) {\n        console.error(\"Could not parse event:\", log, e);\n      }\n    };\n    this.contractWrapper.getProvider().on(filter, wrappedListener);\n    return () => {\n      this.contractWrapper.getProvider().off(filter, wrappedListener);\n    };\n  }\n\n  /**\n   * Remove an event listener from this contract\n   * @remarks Remove a listener that was added with addEventListener\n   * @example\n   * ```javascript\n   * contract.events.removeEventListener(\"TokensMinted\", (event) => {\n   *   console.log(event);\n   * });\n   * ```\n   * @public\n   * @param eventName - the event name as defined in the contract\n   * @param listener - the listener to unregister\n   */\n  removeEventListener(eventName, listener) {\n    // validates event, throws error if not found\n    const event = this.contractWrapper.readContract.interface.getEvent(eventName);\n    this.contractWrapper.readContract.off(event.name, listener);\n  }\n\n  /**\n   * Remove all listeners on this contract\n   * @remarks Remove all listeners from a contract\n   * @example\n   * ```javascript\n   * contract.events.removeAllListeners();\n   * ```\n   * @public\n   */\n  removeAllListeners() {\n    this.contractWrapper.readContract.removeAllListeners();\n    const address = this.contractWrapper.readContract.address;\n    const filter = {\n      address\n    };\n    this.contractWrapper.getProvider().removeAllListeners(filter);\n  }\n\n  /**\n   * Get All Events\n   * @remarks Get a list of all the events emitted from this contract during the specified time period\n   * @example\n   * ```javascript\n   * // Optionally pass in filters to limit the blocks from which events are retrieved\n   * const filters = {\n   *   fromBlock: 0,\n   *   toBlock: 1000000,\n   * }\n   * const events = await contract.events.getAllEvents(filters);\n   * console.log(events[0].eventName);\n   * console.log(events[0].data);\n   * ```\n   *\n   * @param filters - Specify the from and to block numbers to get events for, defaults to all blocks\n   * @returns The event objects of the events emitted with event names and data for each event\n   */\n  async getAllEvents() {\n    let filters = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n      fromBlock: 0,\n      toBlock: \"latest\",\n      order: \"desc\"\n    };\n    const events = await this.contractWrapper.readContract.queryFilter({}, filters.fromBlock, filters.toBlock);\n    const orderedEvents = events.sort((a, b) => {\n      return filters.order === \"desc\" ? b.blockNumber - a.blockNumber : a.blockNumber - b.blockNumber;\n    });\n    return this.parseEvents(orderedEvents);\n  }\n\n  /**\n   * Get Events\n   * @remarks Get a list of the events of a specific type emitted from this contract during the specified time period\n   * @example\n   * ```javascript\n   * // The name of the event to get logs for\n   * const eventName = \"Transfer\";\n   *\n   * // Optionally pass in options to limit the blocks from which events are retrieved\n   * const options = {\n   *   fromBlock: 0,\n   *   toBlock: 1000000, // can also pass \"latest\"\n   *   order: \"desc\",\n   *   // Configure event filters (filter on indexed event parameters)\n   *   filters: {\n   *     from: \"0x...\",\n   *     to: \"0x...\"\n   *   }\n   * };\n   *\n   * const events = await contract.events.getEvents(eventName, options);\n   * console.log(events[0].eventName);\n   * console.log(events[0].data);\n   * ```\n   *\n   * @param eventName - The name of the event to get logs for\n   * @param options - Specify the from and to block numbers to get events for, defaults to all blocks. @see EventQueryOptions\n   * @returns The requested event objects with event data\n   */\n  async getEvents(eventName) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      fromBlock: 0,\n      toBlock: \"latest\",\n      order: \"desc\"\n    };\n    const event = this.contractWrapper.readContract.interface.getEvent(eventName);\n    const eventInterface = this.contractWrapper.readContract.interface.getEvent(eventName);\n    const args = options.filters ? eventInterface.inputs.map(e => options.filters[e.name]) : [];\n    const filter = this.contractWrapper.readContract.filters[event.name](...args);\n    const events = await this.contractWrapper.readContract.queryFilter(filter, options.fromBlock, options.toBlock);\n    const orderedEvents = events.sort((a, b) => {\n      return options.order === \"desc\" ? b.blockNumber - a.blockNumber : a.blockNumber - b.blockNumber;\n    });\n    return this.parseEvents(orderedEvents);\n  }\n  parseEvents(events) {\n    return events.map(e => {\n      const transaction = Object.fromEntries(Object.entries(e).filter(a => typeof a[1] !== \"function\" && a[0] !== \"args\"));\n      if (e.args) {\n        const entries = Object.entries(e.args);\n        const args = entries.slice(entries.length / 2, entries.length);\n        const data = {};\n        for (const [key, value] of args) {\n          data[key] = value;\n        }\n        return {\n          eventName: e.event || \"\",\n          data: data,\n          transaction\n        };\n      }\n      return {\n        eventName: e.event || \"\",\n        data: {},\n        transaction\n      };\n    });\n  }\n  toContractEvent(event, args, rawLog) {\n    const transaction = Object.fromEntries(Object.entries(rawLog).filter(a => typeof a[1] !== \"function\" && a[0] !== \"args\"));\n    const results = {};\n    event.inputs.forEach((param, index) => {\n      if (Array.isArray(args[index])) {\n        const obj = {};\n        const components = param.components;\n        if (components) {\n          const arr = args[index];\n          for (let i = 0; i < components.length; i++) {\n            const name = components[i].name;\n            obj[name] = arr[i];\n          }\n          results[param.name] = obj;\n        }\n      } else {\n        results[param.name] = args[index];\n      }\n    });\n    return {\n      eventName: event.name,\n      data: results,\n      transaction\n    };\n  }\n}\n\n/**\n * Allows overriding transaction behavior for this contract\n * @public\n */\nclass ContractInterceptor {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * The next transaction executed will add/replace any overrides passed via the passed in hook.\n   * @remarks Overridden values will be applied to the next transaction executed.\n   * @example\n   * ```javascript\n   * contract.interceptor.overrideNextTransaction(() => ({\n   *   gasLimit: 3000000,\n   * }));\n   * ```\n   * @param hook - the hook to add or replace any CallOverrides (gas limit, gas price, nonce, from, value, etc...)\n   * @public\n   */\n  overrideNextTransaction(hook) {\n    this.contractWrapper.withTransactionOverride(hook);\n  }\n}\n\n/**\n * Handle platform fees and recipients\n * @remarks Configure platform fees for a contract, which can be applied on certain paid transactions\n * @example\n * ```javascript\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n * const feeInfo = await contract.platformFee.get();\n * await contract.platformFee.set({\n *   platform_fee_basis_points: 100, // 1% fee\n *   platform_fee_recipient: \"0x...\" // the fee recipient\n * })\n * ```\n * @public\n */\nclass ContractPlatformFee {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_PLATFORM_FEE.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Get the platform fee recipient and basis points\n   *  * @example\n   * ```javascript\n   * const feeInfo = await contract.platformFee.get();\n   * ```\n   * @twfeature PlatformFee\n   */\n  async get() {\n    const [platformFeeRecipient, platformFeeBps] = await this.contractWrapper.readContract.getPlatformFeeInfo();\n    return CommonPlatformFeeSchema.parse({\n      platform_fee_recipient: platformFeeRecipient,\n      platform_fee_basis_points: platformFeeBps\n    });\n  }\n\n  /**\n   * Set the platform fee recipient and basis points\n   * @param platformFeeInfo - the platform fee information\n   * ```javascript\n   * await contract.platformFee.set({\n   *   platform_fee_basis_points: 100, // 1% fee\n   *   platform_fee_recipient: \"0x...\" // the fee recipient\n   * })\n   * ```\n   * @twfeature PlatformFee\n   */\n  async set(platformFeeInfo) {\n    const parsed = CommonPlatformFeeSchema.parse(platformFeeInfo);\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setPlatformFeeInfo\", [parsed.platform_fee_recipient, parsed.platform_fee_basis_points])\n    };\n  }\n}\n\n/**\n * Handles publish metadata for a contract\n * @internal\n */\nclass ContractPublishedMetadata {\n  constructor(contractWrapper, storage) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"_cachedMetadata\", void 0);\n    this.contractWrapper = contractWrapper;\n    this.storage = storage;\n  }\n\n  /**\n   * Get the published metadata for this contract\n   * @public\n   */\n  async get() {\n    if (this._cachedMetadata) {\n      return this._cachedMetadata;\n    }\n    this._cachedMetadata = await fetchContractMetadataFromAddress(this.contractWrapper.readContract.address, this.contractWrapper.getProvider(), this.storage);\n    return this._cachedMetadata;\n  }\n\n  /**\n   * @public\n   */\n  async extractFunctions() {\n    let publishedMetadata;\n    try {\n      publishedMetadata = await this.get();\n    } catch (e) {\n      // ignore for built-in contracts\n    }\n    // to construct a contract we already **have** to have the abi on the contract wrapper, so there is no reason to look fetch it again (means this function can become synchronous as well!)\n    return extractFunctionsFromAbi(AbiSchema.parse(this.contractWrapper.abi), publishedMetadata?.metadata);\n  }\n\n  /**\n   * @public\n   */\n  async extractEvents() {\n    let publishedMetadata;\n    try {\n      publishedMetadata = await this.get();\n    } catch (e) {\n      // ignore for built-in contracts\n    }\n    // to construct a contract we already **have** to have the abi on the contract wrapper, so there is no reason to look fetch it again (means this function can become synchronous as well!)\n    return extractEventsFromAbi(AbiSchema.parse(this.contractWrapper.abi), publishedMetadata?.metadata);\n  }\n}\n\n/**\n * Custom contract dynamic class with feature detection\n *\n * @example\n *\n * ```javascript\n * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\";\n *\n * const sdk = new ThirdwebSDK(provider);\n * const contract = await sdk.getContract(\"{{contract_address}}\");\n *\n * // call any function in your contract\n * await contract.call(\"myCustomFunction\", param1, param2);\n *\n * // if your contract follows the ERC721 standard, contract.nft will be present\n * const allNFTs = await contract.erc721.query.all()\n *\n * // if your contract extends IMintableERC721, contract.nft.mint() will be available\n * const tx = await contract.erc721.mint({\n *     name: \"Cool NFT\",\n *     image: readFileSync(\"some_image.png\"),\n *   });\n * ```\n *\n * @beta\n */\nclass SmartContract {\n  // utilities\n\n  /**\n   * Handle royalties\n   */\n  get royalties() {\n    return assertEnabled(this.detectRoyalties(), FEATURE_ROYALTY);\n  }\n\n  /**\n   * Handle permissions\n   */\n  get roles() {\n    return assertEnabled(this.detectRoles(), FEATURE_PERMISSIONS);\n  }\n\n  /**\n   * Handle primary sales\n   */\n  get sales() {\n    return assertEnabled(this.detectPrimarySales(), FEATURE_PRIMARY_SALE);\n  }\n\n  /**\n   * Handle platform fees\n   */\n  get platformFees() {\n    return assertEnabled(this.detectPlatformFees(), FEATURE_PLATFORM_FEE);\n  }\n\n  /**\n   * Set and get the owner of the contract\n   */\n  get owner() {\n    return assertEnabled(this.detectOwnable(), FEATURE_OWNER);\n  }\n\n  /**\n   * Auto-detects ERC20 standard functions.\n   */\n  get erc20() {\n    return assertEnabled(this.detectErc20(), FEATURE_TOKEN);\n  }\n\n  /**\n   * Auto-detects ERC721 standard functions.\n   */\n  get erc721() {\n    return assertEnabled(this.detectErc721(), FEATURE_NFT);\n  }\n\n  /**\n   * Auto-detects ERC1155 standard functions.\n   */\n  get erc1155() {\n    return assertEnabled(this.detectErc1155(), FEATURE_EDITION);\n  }\n  get chainId() {\n    return this._chainId;\n  }\n  constructor(network, address, abi, storage) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    let chainId = arguments.length > 5 ? arguments[5] : undefined;\n    let contractWrapper = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : new ContractWrapper(network, address, abi, options);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"events\", void 0);\n    _defineProperty(this, \"interceptor\", void 0);\n    _defineProperty(this, \"encoder\", void 0);\n    _defineProperty(this, \"estimator\", void 0);\n    _defineProperty(this, \"publishedMetadata\", void 0);\n    _defineProperty(this, \"abi\", void 0);\n    _defineProperty(this, \"metadata\", void 0);\n    _defineProperty(this, \"appURI\", void 0);\n    _defineProperty(this, \"_chainId\", void 0);\n    this._chainId = chainId;\n    this.storage = storage;\n    this.contractWrapper = contractWrapper;\n    this.abi = abi;\n    this.events = new ContractEvents(this.contractWrapper);\n    this.encoder = new ContractEncoder(this.contractWrapper);\n    this.interceptor = new ContractInterceptor(this.contractWrapper);\n    this.estimator = new GasCostEstimator(this.contractWrapper);\n    this.publishedMetadata = new ContractPublishedMetadata(this.contractWrapper, this.storage);\n    this.metadata = new ContractMetadata(this.contractWrapper, CustomContractSchema, this.storage);\n    this.appURI = new ContractAppURI(this.contractWrapper, this.metadata);\n  }\n  onNetworkUpdated(network) {\n    this.contractWrapper.updateSignerOrProvider(network);\n  }\n  getAddress() {\n    return this.contractWrapper.readContract.address;\n  }\n\n  /**\n   * Call any function on this contract\n   * @example\n   * ```javascript\n   * // read functions will return the data from the contract\n   * const myValue = await contract.call(\"myReadFunction\");\n   * console.log(myValue);\n   *\n   * // write functions will return the transaction receipt\n   * const tx = await contract.call(\"myWriteFunction\", arg1, arg2);\n   * const receipt = tx.receipt;\n   *\n   * // Optionally override transaction options\n   * await contract.call(\"myWriteFunction\", arg1, arg2, {\n   *  gasLimit: 1000000, // override default gas limit\n   *  value: ethers.utils.parseEther(\"0.1\"), // send 0.1 ether with the contract call\n   * };\n   * ```\n   * @param functionName - the name of the function to call\n   * @param args - the arguments of the function\n   */\n  async call(functionName) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return this.contractWrapper.call(functionName, ...args);\n  }\n\n  /** ********************\n   * FEATURE DETECTION\n   * ********************/\n\n  detectRoyalties() {\n    if (detectContractFeature(this.contractWrapper, \"Royalty\")) {\n      // ContractMetadata is stateless, it's fine to create a new one here\n      // This also makes it not order dependent in the feature detection process\n      const metadata = new ContractMetadata(this.contractWrapper, CustomContractSchema, this.storage);\n      return new ContractRoyalty(this.contractWrapper, metadata);\n    }\n    return undefined;\n  }\n  detectRoles() {\n    if (detectContractFeature(this.contractWrapper, \"Permissions\")) {\n      return new ContractRoles(this.contractWrapper, ALL_ROLES);\n    }\n    return undefined;\n  }\n  detectPrimarySales() {\n    if (detectContractFeature(this.contractWrapper, \"PrimarySale\")) {\n      return new ContractPrimarySale(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectPlatformFees() {\n    if (detectContractFeature(this.contractWrapper, \"PlatformFee\")) {\n      return new ContractPlatformFee(this.contractWrapper);\n    }\n    return undefined;\n  }\n  detectErc20() {\n    if (detectContractFeature(this.contractWrapper, \"ERC20\")) {\n      return new Erc20(this.contractWrapper, this.storage, this.chainId);\n    }\n    return undefined;\n  }\n  detectErc721() {\n    if (detectContractFeature(this.contractWrapper, \"ERC721\")) {\n      return new Erc721(this.contractWrapper, this.storage, this.chainId);\n    }\n    return undefined;\n  }\n  detectErc1155() {\n    if (detectContractFeature(this.contractWrapper, \"ERC1155\")) {\n      return new Erc1155(this.contractWrapper, this.storage, this.chainId);\n    }\n    return undefined;\n  }\n  detectOwnable() {\n    if (detectContractFeature(this.contractWrapper, \"Ownable\")) {\n      return new ContractOwner(this.contractWrapper);\n    }\n    return undefined;\n  }\n}\n\n/**\n * Handles publishing contracts (EXPERIMENTAL)\n * @internal\n */\nclass ContractPublisher extends RPCConnectionHandler {\n  constructor(network, options, storage) {\n    super(network, options);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"publisher\", void 0);\n    this.storage = storage;\n    this.publisher = new ContractWrapper(network, getContractPublisherAddress(), ContractPublisherAbi, options);\n  }\n  updateSignerOrProvider(network) {\n    super.updateSignerOrProvider(network);\n    this.publisher.updateSignerOrProvider(network);\n  }\n\n  /**\n   * @internal\n   * @param metadataUri\n   */\n  async extractConstructorParams(metadataUri) {\n    return extractConstructorParams(metadataUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * @param predeployMetadataUri\n   */\n  async extractFunctions(predeployMetadataUri) {\n    return extractFunctions(predeployMetadataUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * @param predeployUri\n   */\n  async fetchCompilerMetadataFromPredeployURI(predeployUri) {\n    return fetchPreDeployMetadata(predeployUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * @param prepublishUri\n   * @param publisherAddress\n   */\n  async fetchPrePublishMetadata(prepublishUri, publisherAddress) {\n    const preDeployMetadataFetched = await fetchPreDeployMetadata(prepublishUri, this.storage);\n    const latestPublishedContract = publisherAddress ? await this.getLatest(publisherAddress, preDeployMetadataFetched.name) : undefined;\n    const latestPublishedContractMetadata = latestPublishedContract ? await this.fetchPublishedContractInfo(latestPublishedContract) : undefined;\n    return {\n      preDeployMetadata: preDeployMetadataFetched,\n      latestPublishedContractMetadata\n    };\n  }\n\n  /**\n   * @internal\n   * @param address\n   */\n  async fetchCompilerMetadataFromAddress(address) {\n    return fetchContractMetadataFromAddress(address, this.getProvider(), this.storage);\n  }\n\n  /**\n   * @internal\n   * Get the full information about a published contract\n   * @param contract\n   */\n  async fetchPublishedContractInfo(contract) {\n    return {\n      name: contract.id,\n      publishedTimestamp: contract.timestamp,\n      publishedMetadata: await this.fetchFullPublishMetadata(contract.metadataUri)\n    };\n  }\n\n  /**\n   * @internal\n   * @param publishedMetadataUri\n   */\n  async fetchFullPublishMetadata(publishedMetadataUri) {\n    return fetchExtendedReleaseMetadata(publishedMetadataUri, this.storage);\n  }\n\n  /**\n   * @internal\n   * // TODO expose a resolvePublishMetadata(contractAddress, chainId) that handles the dual chain case\n   * // TODO will be easy to do with the multichain pattern of 3.0\n   * @param compilerMetadataUri\n   */\n  async resolvePublishMetadataFromCompilerMetadata(compilerMetadataUri) {\n    const publishedMetadataUri = await this.publisher.readContract.getPublishedUriFromCompilerUri(compilerMetadataUri);\n    if (publishedMetadataUri.length === 0) {\n      throw Error(`Could not resolve published metadata URI from ${compilerMetadataUri}`);\n    }\n    return await Promise.all(publishedMetadataUri.filter(uri => uri.length > 0).map(uri => this.fetchFullPublishMetadata(uri)));\n  }\n\n  /**\n   * @internal\n   * TODO clean this up (see method above, too)\n   */\n  async resolveContractUriFromAddress(address) {\n    const contractUri = await resolveContractUriFromAddress(address, this.getProvider());\n    invariant(contractUri, \"Could not resolve contract URI from address\");\n    return contractUri;\n  }\n\n  /**\n   * @internal\n   * @param address\n   */\n  async fetchContractSourcesFromAddress(address) {\n    const metadata = await this.fetchCompilerMetadataFromAddress(address);\n    return await fetchSourceFilesFromMetadata(metadata, this.storage);\n  }\n\n  /**\n   * @internal\n   * @param profileMetadata\n   */\n  async updatePublisherProfile(profileMetadata) {\n    const signer = this.getSigner();\n    invariant(signer, \"A signer is required\");\n    const publisher = await signer.getAddress();\n    const profileUri = await this.storage.upload(profileMetadata);\n    return {\n      receipt: await this.publisher.sendTransaction(\"setPublisherProfileUri\", [publisher, profileUri])\n    };\n  }\n\n  /**\n   * @internal\n   * @param publisherAddress\n   */\n  async getPublisherProfile(publisherAddress) {\n    const profileUri = await this.publisher.readContract.getPublisherProfileUri(publisherAddress);\n    if (!profileUri || profileUri.length === 0) {\n      return {};\n    }\n    return ProfileSchemaOutput.parse(await this.storage.downloadJSON(profileUri));\n  }\n\n  /**\n   * @internal\n   * @param publisherAddress\n   */\n  async getAll(publisherAddress) {\n    const data = await this.publisher.readContract.getAllPublishedContracts(publisherAddress);\n    // since we can fetch from multiple publisher contracts, just keep the latest one in the list\n    const map = data.reduce((acc, curr) => {\n      // replaces the previous contract with the latest one\n      acc[curr.contractId] = curr;\n      return acc;\n    }, {});\n    return Object.entries(map).map(_ref => {\n      let [, struct] = _ref;\n      return this.toPublishedContract(struct);\n    });\n  }\n\n  /**\n   * @internal\n   * @param publisherAddress\n   * @param contractId\n   */\n  async getAllVersions(publisherAddress, contractId) {\n    const contractStructs = await this.publisher.readContract.getPublishedContractVersions(publisherAddress, contractId);\n    if (contractStructs.length === 0) {\n      throw Error(\"Not found\");\n    }\n    return contractStructs.map(d => this.toPublishedContract(d));\n  }\n  async getVersion(publisherAddress, contractId) {\n    let version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n    if (version === \"latest\") {\n      return this.getLatest(publisherAddress, contractId);\n    }\n    const allVersions = await this.getAllVersions(publisherAddress, contractId);\n    // get the metadata for each version\n    const versionMetadata = await Promise.all(allVersions.map(contract => this.fetchPublishedContractInfo(contract)));\n    // find the version that matches the version string\n    const versionMatch = versionMetadata.find(metadata => metadata.publishedMetadata.version === version);\n    invariant(versionMatch, \"Contract version not found\");\n    // match the version back to the contract based on the release timestamp\n    return allVersions.find(contract => contract.timestamp === versionMatch.publishedTimestamp);\n  }\n  async getLatest(publisherAddress, contractId) {\n    const model = await this.publisher.readContract.getPublishedContract(publisherAddress, contractId);\n    if (model && model.publishMetadataUri) {\n      return this.toPublishedContract(model);\n    }\n    return undefined;\n  }\n  async publish(predeployUri, extraMetadata) {\n    const signer = this.getSigner();\n    invariant(signer, \"A signer is required\");\n    const publisher = await signer.getAddress();\n    const predeployMetadata = await fetchRawPredeployMetadata(predeployUri, this.storage);\n\n    // ensure version is incremental\n    const latestContract = await this.getLatest(publisher, predeployMetadata.name);\n    if (latestContract && latestContract.metadataUri) {\n      const latestMetadata = await this.fetchPublishedContractInfo(latestContract);\n      const latestVersion = latestMetadata.publishedMetadata.version;\n      if (!isIncrementalVersion(latestVersion, extraMetadata.version)) {\n        throw Error(`Version ${extraMetadata.version} is not greater than ${latestVersion}`);\n      }\n    }\n    const fetchedBytecode = await (await this.storage.download(predeployMetadata.bytecodeUri)).text();\n    const bytecode = fetchedBytecode.startsWith(\"0x\") ? fetchedBytecode : `0x${fetchedBytecode}`;\n    const bytecodeHash = utils.solidityKeccak256([\"bytes\"], [bytecode]);\n    const contractId = predeployMetadata.name;\n    const fullMetadata = FullPublishMetadataSchemaInput.parse({\n      ...extraMetadata,\n      metadataUri: predeployMetadata.metadataUri,\n      bytecodeUri: predeployMetadata.bytecodeUri,\n      name: predeployMetadata.name,\n      analytics: predeployMetadata.analytics,\n      publisher\n    });\n    const fullMetadataUri = await this.storage.upload(fullMetadata);\n    const receipt = await this.publisher.sendTransaction(\"publishContract\", [publisher, contractId, fullMetadataUri, predeployMetadata.metadataUri, bytecodeHash, constants.AddressZero]);\n    const events = this.publisher.parseLogs(\"ContractPublished\", receipt.logs);\n    if (events.length < 1) {\n      throw new Error(\"No ContractPublished event found\");\n    }\n    const contract = events[0].args.publishedContract;\n    return {\n      receipt,\n      data: async () => this.toPublishedContract(contract)\n    };\n  }\n  async unpublish(publisher, contractId) {\n    return {\n      receipt: await this.publisher.sendTransaction(\"unpublishContract\", [publisher, contractId])\n    };\n  }\n  toPublishedContract(contractModel) {\n    return PublishedContractSchema.parse({\n      id: contractModel.contractId,\n      timestamp: contractModel.publishTimestamp,\n      metadataUri: contractModel.publishMetadataUri\n    });\n  }\n}\n\n/**\n *\n * {@link UserWallet} events that you can subscribe to using `sdk.wallet.events`.\n *\n * @public\n */\n\n/**\n * Connect and Interact with a user wallet\n * @example\n * ```javascript\n * const balance = await sdk.wallet.balance();\n * ```\n * @public\n */\nclass UserWallet {\n  constructor(network, options) {\n    _defineProperty(this, \"connection\", void 0);\n    _defineProperty(this, \"options\", void 0);\n    _defineProperty(this, \"events\", new EventEmitter());\n    this.connection = new RPCConnectionHandler(network, options);\n    this.options = options;\n    this.events = new EventEmitter();\n  }\n\n  // TODO disconnect()\n  // TODO switchChain()\n  // TODO tokens()\n  // TODO NFTs()\n\n  // TODO this will become the source of truth of the signer and have every contract read from it\n  // TODO separate signer and provider logics\n  connect(network) {\n    this.connection.updateSignerOrProvider(network);\n    this.events.emit(\"signerChanged\", this.connection.getSigner());\n  }\n\n  /**\n   * Transfer native or ERC20 tokens from this wallet to another wallet\n   * @example\n   * ```javascript\n   *  // transfer 0.8 ETH\n   * await sdk.wallet.transfer(\"0x...\", 0.8);\n   *  // transfer 0.8 tokens of `tokenContractAddress`\n   * await sdk.wallet.transfer(\"0x...\", 0.8, tokenContractAddress);\n   * ```\n   * @param to - the account to send funds to\n   * @param amount - the amount in tokens\n   * @param currencyAddress - Optional - ERC20 contract address of the token to transfer\n   */\n  async transfer(to, amount) {\n    let currencyAddress = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : NATIVE_TOKEN_ADDRESS;\n    const signer = this.requireWallet();\n    const amountInWei = await normalizePriceValue(this.connection.getProvider(), amount, currencyAddress);\n    if (isNativeToken(currencyAddress)) {\n      // native token transfer\n      const from = await signer.getAddress();\n      const tx = await signer.sendTransaction({\n        from,\n        to,\n        value: amountInWei\n      });\n      return {\n        receipt: await tx.wait()\n      };\n    } else {\n      // ERC20 token transfer\n      return {\n        receipt: await this.createErc20(currencyAddress).sendTransaction(\"transfer\", [to, amountInWei])\n      };\n    }\n  }\n\n  /**\n   * Fetch the native or ERC20 token balance of this wallet\n   * @example\n   * ```javascript\n   * // native currency balance\n   * const balance = await sdk.wallet.balance();\n   * // ERC20 token balance\n   * const erc20balance = await sdk.wallet.balance(tokenContractAddress);\n   *\n   * ```\n   */\n  async balance() {\n    let currencyAddress = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : NATIVE_TOKEN_ADDRESS;\n    this.requireWallet();\n    const provider = this.connection.getProvider();\n    let balance;\n    if (isNativeToken(currencyAddress)) {\n      balance = await provider.getBalance(await this.getAddress());\n    } else {\n      balance = await this.createErc20(currencyAddress).readContract.balanceOf(await this.getAddress());\n    }\n    return await fetchCurrencyValue(provider, currencyAddress, balance);\n  }\n\n  /**\n   * Get the currently connected address\n   * @example\n   * ```javascript\n   * const address = await sdk.wallet.getAddress();\n   * ```\n   */\n  async getAddress() {\n    return await this.requireWallet().getAddress();\n  }\n\n  /**\n   * Get the currently connected wallet's chainId\n   * @internal\n   */\n  async getChainId() {\n    return await this.requireWallet().getChainId();\n  }\n\n  /**\n   * Checks whether there's a signer connected with the SDK\n   * @internal\n   */\n  isConnected() {\n    try {\n      this.requireWallet();\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n\n  /**\n   * Sign any message with the connected wallet private key\n   * @param message - the message to sign\n   * @returns the signed message\n   *\n   * @example\n   * ```javascript\n   * // This is the message to be signed\n   * const message = \"Sign this message...\";\n   *\n   * // Now we can sign the message with the connected wallet\n   * const signature = await sdk.wallet.sign(message);\n   * ```\n   */\n  async sign(message) {\n    const signer = this.requireWallet();\n    return await signer.signMessage(message);\n  }\n\n  /**\n   * Recover the signing address from a signed message\n   * @param message - the original message that was signed\n   * @param signature - the signature to recover the address from\n   * @returns the address that signed the message\n   *\n   * @example\n   * ```javascript\n   * const message = \"Sign this message...\";\n   * const signature = await sdk.wallet.sign(message);\n   *\n   * // Now we can recover the signing address\n   * const address = sdk.wallet.recoverAddress(message, signature);\n   * ```\n   */\n  recoverAddress(message, signature) {\n    const messageHash = ethers.utils.hashMessage(message);\n    const messageHashBytes = ethers.utils.arrayify(messageHash);\n    return ethers.utils.recoverAddress(messageHashBytes, signature);\n  }\n\n  /**\n   * Send a raw transaction to the blockchain from the connected wallet\n   * @param transactionRequest - raw transaction data to send to the blockchain\n   */\n  async sendRawTransaction(transactionRequest) {\n    const signer = this.requireWallet();\n    const tx = await signer.sendTransaction(transactionRequest);\n    return {\n      receipt: await tx.wait()\n    };\n  }\n\n  /** ***********************\n   * PRIVATE FUNCTIONS\n   * ***********************/\n\n  requireWallet() {\n    const signer = this.connection.getSigner();\n    invariant(signer, \"This action requires a connected wallet. Please pass a valid signer to the SDK.\");\n    return signer;\n  }\n  createErc20(currencyAddress) {\n    return new ContractWrapper(this.connection.getSignerOrProvider(), currencyAddress, ERC20Abi, this.options);\n  }\n}\n\n/**\n * The main entry point for the thirdweb SDK\n * @public\n */\nclass ThirdwebSDK extends RPCConnectionHandler {\n  /**\n   * Get an instance of the thirdweb SDK based on an AbstractWallet\n   *\n   * @example\n   * ```javascript\n   * import { ThirdwebSDK } from \"@thirdweb-dev/sdk\"\n   *\n   * const wallet = new AbstractWalletImplementation();\n   * const sdk = await ThirdwebSDK.fromWallet(wallet, \"mainnet\");\n   * ```\n   *\n   * @param wallet - the implementation of the AbstractWallet class to use for signing\n   * @param network - the network (chain) to connect to (e.g. \"mainnet\", \"rinkeby\", \"polygon\", \"mumbai\"...) or a fully formed RPC url\n   * @param options - the SDK options to use\n   * @param storage - optional storage implementation to use\n   * @returns an instance of the SDK\n   *\n   * @beta\n   */\n  static async fromWallet(wallet, network) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let storage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new ThirdwebStorage();\n    const signerOrProvider = getProviderForNetwork(network);\n    const provider = Signer.isSigner(signerOrProvider) ? signerOrProvider.provider : typeof signerOrProvider === \"string\" ? getReadOnlyProvider(signerOrProvider) : signerOrProvider;\n    const signer = await wallet.getSigner(provider);\n    return ThirdwebSDK.fromSigner(signer, network, options, storage);\n  }\n\n  /**\n   * Get an instance of the thirdweb SDK based on an existing ethers signer\n   *\n   * @example\n   * ```javascript\n   * // get a signer from somewhere (createRandom is being used purely for example purposes)\n   * const signer = ethers.Wallet.createRandom();\n   *\n   * // get an instance of the SDK with the signer already setup\n   * const sdk = ThirdwebSDK.fromSigner(signer, \"mainnet\");\n   * ```\n   *\n   * @param signer - a ethers Signer to be used for transactions\n   * @param network - the network (chain) to connect to (e.g. \"mainnet\", \"rinkeby\", \"polygon\", \"mumbai\"...) or a fully formed RPC url\n   * @param options - the SDK options to use\n   * @param storage - optional storage implementation to use\n   * @returns an instance of the SDK\n   *\n   * @beta\n   */\n  static fromSigner(signer, network) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let storage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new ThirdwebStorage();\n    const sdk = new ThirdwebSDK(network || signer, options, storage);\n    sdk.updateSignerOrProvider(signer);\n    return sdk;\n  }\n\n  /**\n   * Get an instance of the thirdweb SDK based on a private key.\n   *\n   * @remarks\n   * This should only be used for backend services or scripts, with the private key stored in a secure way.\n   * **NEVER** expose your private key to the public in any way.\n   *\n   * @example\n   * ```javascript\n   * const sdk = ThirdwebSDK.fromPrivateKey(\"SecretPrivateKey\", \"mainnet\");\n   * ```\n   *\n   * @param privateKey - the private key - **DO NOT EXPOSE THIS TO THE PUBLIC**\n   * @param network - the network (chain) to connect to (e.g. \"mainnet\", \"rinkeby\", \"polygon\", \"mumbai\"...) or a fully formed RPC url\n   * @param options - the SDK options to use\n   * @param storage - optional storage implementation to use\n   * @returns an instance of the SDK\n   *\n   * @beta\n   */\n  static fromPrivateKey(privateKey, network) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let storage = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new ThirdwebStorage();\n    const signerOrProvider = getProviderForNetwork(network);\n    const provider = Signer.isSigner(signerOrProvider) ? signerOrProvider.provider : typeof signerOrProvider === \"string\" ? getReadOnlyProvider(signerOrProvider) : signerOrProvider;\n    const signer = new ethers.Wallet(privateKey, provider);\n    return ThirdwebSDK.fromSigner(signer, network, options, storage);\n  }\n\n  /**\n   * @internal\n   * the cache of contracts that we have already seen\n   */\n\n  constructor(network) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let storage = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new ThirdwebStorage();\n    const signerOrProvider = getProviderForNetwork(network);\n    super(signerOrProvider, options);\n    _defineProperty(this, \"contractCache\", new Map());\n    _defineProperty(this, \"_publisher\", void 0);\n    _defineProperty(this, \"storageHandler\", void 0);\n    _defineProperty(this, \"deployer\", void 0);\n    _defineProperty(this, \"wallet\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"auth\", void 0);\n    this.storageHandler = storage;\n    this.storage = storage;\n    this.wallet = new UserWallet(signerOrProvider, options);\n    this.deployer = new ContractDeployer(signerOrProvider, options, storage);\n    this.auth = new WalletAuthenticator(signerOrProvider, this.wallet, options);\n    this._publisher = new ContractPublisher(signerOrProvider, this.options, this.storageHandler);\n  }\n\n  /**\n   * Get an instance of a NFT Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const dropContract = await sdk.getDropContract(\"0x1234...\");\n   * + const dropContract = await sdk.getContract(\"0x1234...\", \"nft-drop\");\n   * ```\n   */\n  async getNFTDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"nft-drop\");\n  }\n\n  /**\n   * Get an instance of a Signature Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const signatureDrop = await sdk.getSignatureDrop(\"0x1234...\");\n   * + const signatureDrop = await sdk.getContract(\"0x1234...\", \"signature-drop\");\n   * ```\n   */\n  async getSignatureDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"signature-drop\");\n  }\n\n  /**\n   * Get an instance of a NFT Collection Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const signatureDrop = await sdk.getNFTCollection(\"0x1234...\");\n   * + const signatureDrop = await sdk.getContract(\"0x1234...\", \"nft-collection\");\n   * ```\n   */\n  async getNFTCollection(contractAddress) {\n    return await this.getContract(contractAddress, \"nft-collection\");\n  }\n\n  /**\n   * Get an instance of a Edition Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const editionDrop = await sdk.getEditionDrop(\"0x1234...\");\n   * + const editionDrop = await sdk.getContract(\"0x1234...\", \"edition-drop\");\n   * ```\n   */\n  async getEditionDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"edition-drop\");\n  }\n\n  /**\n   * Get an instance of a Edition contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const edition = await sdk.getEdition(\"0x1234...\");\n   * + const edition = await sdk.getContract(\"0x1234...\", \"edition\");\n   * ```\n   */\n  async getEdition(contractAddress) {\n    return await this.getContract(contractAddress, \"edition\");\n  }\n\n  /**\n   * Get an instance of a Token Drop contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const tokenDrop = await sdk.getTokenDrop(\"0x1234...\");\n   * + const tokenDrop = await sdk.getContract(\"0x1234...\", \"token-drop\");\n   * ```\n   */\n  async getTokenDrop(contractAddress) {\n    return await this.getContract(contractAddress, \"token-drop\");\n  }\n\n  /**\n   * Get an instance of a Token contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const token = await sdk.getToken(\"0x1234...\");\n   * + const token = await sdk.getContract(\"0x1234...\", \"token\");\n   * ```\n   */\n  async getToken(contractAddress) {\n    return await this.getContract(contractAddress, \"token\");\n  }\n\n  /**\n   * Get an instance of a Vote contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const vote = await sdk.getVote(\"0x1234...\");\n   * + const vote = await sdk.getContract(\"0x1234...\", \"vote\");\n   * ```\n   */\n  async getVote(contractAddress) {\n    return await this.getContract(contractAddress, \"vote\");\n  }\n\n  /**\n   * Get an instance of a Split contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const split = await sdk.getSplit(\"0x1234...\");\n   * + const split = await sdk.getContract(\"0x1234...\", \"split\");\n   * ```\n   */\n  async getSplit(contractAddress) {\n    return await this.getContract(contractAddress, \"split\");\n  }\n\n  /**\n   * Get an instance of a Marketplace contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const marketplace = await sdk.getMarketplace(\"0x1234...\");\n   * + const marketplace = await sdk.getContract(\"0x1234...\", \"marketplace\");\n   * ```\n   */\n  async getMarketplace(contractAddress) {\n    return await this.getContract(contractAddress, \"marketplace\");\n  }\n\n  /**\n   * Get an instance of a Pack contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const pack = await sdk.getPack(\"0x1234...\");\n   * + const pack = await sdk.getContract(\"0x1234...\", \"pack\");\n   * ```\n   */\n  async getPack(contractAddress) {\n    return await this.getContract(contractAddress, \"pack\");\n  }\n\n  /**\n   * Get an instance of a Pack contract\n   * @param contractAddress - the address of the deployed contract\n   * @deprecated\n   * This method is deprecated and will be removed in a future major version. You should use {@link getContract} instead.\n   * ```diff\n   * - const multiWrap = await sdk.getMultiwrap(\"0x1234...\");\n   * + const multiWrap = await sdk.getContract(\"0x1234...\", \"multiwrap\");\n   * ```\n   */\n  async getMultiwrap(contractAddress) {\n    return await this.getContract(contractAddress, \"multiwrap\");\n  }\n\n  /**\n   * Get an instance of a Custom ThirdwebContract\n   * @param address - the address of the deployed contract\n   * @returns the contract\n   * @public\n   * @example\n   * ```javascript\n   * const contract = await sdk.getContract(\"{{contract_address}}\");\n   * ```\n   */\n\n  async getContract(address, contractTypeOrABI) {\n    // if we have a contract in the cache we will return it\n    // we will do this **without** checking any contract type things for simplicity, this may have to change in the future?\n    if (this.contractCache.has(address)) {\n      // we know this will be there since we check the has above\n      return this.contractCache.get(address);\n    }\n    let newContract;\n\n    // if we don't have a contractType or ABI then we will have to resolve it regardless\n    // we also handle it being \"custom\" just in case...\n    if (!contractTypeOrABI || contractTypeOrABI === \"custom\") {\n      const resolvedContractType = await this.resolveContractType(address);\n      if (resolvedContractType === \"custom\") {\n        // if it's a custom contract we gotta fetch the compilet metadata\n        try {\n          const publisher = this.getPublisher();\n          const metadata = await publisher.fetchCompilerMetadataFromAddress(address);\n          newContract = await this.getContractFromAbi(address, metadata.abi);\n        } catch (e) {\n          throw new Error(`Error fetching ABI for this contract\\n\\n${e}`);\n        }\n      } else {\n        // otherwise if it's a prebuilt contract we can just use the contract type\n        const contractAbi = await PREBUILT_CONTRACTS_MAP[resolvedContractType].getAbi(address, this.getProvider());\n        newContract = await this.getContractFromAbi(address, contractAbi);\n      }\n    }\n    // if it's a builtin contract type we can just use the contract type to initialize the contract instance\n    else if (typeof contractTypeOrABI === \"string\" && contractTypeOrABI in PREBUILT_CONTRACTS_MAP) {\n      newContract = await PREBUILT_CONTRACTS_MAP[contractTypeOrABI].initialize(this.getSignerOrProvider(), address, this.storage, this.options);\n    }\n    // otherwise it has to be an ABI\n    else {\n      newContract = await this.getContractFromAbi(address, contractTypeOrABI);\n    }\n\n    // set whatever we have on the cache\n    this.contractCache.set(address, newContract);\n    // return it\n    return newContract;\n  }\n\n  /**\n   * @internal\n   * @deprecated use {@link getContract} directly instead\n   */\n  async getBuiltInContract(address, contractType) {\n    return await this.getContract(address, contractType);\n  }\n\n  /**\n   * @param contractAddress - the address of the contract to attempt to resolve the contract type for\n   * @returns the {@link ContractType} for the given contract address\n   *\n   */\n  async resolveContractType(contractAddress) {\n    try {\n      const contract = new Contract(contractAddress, IThirdwebContractABI,\n      // !provider only! - signer can break things here!\n      this.getProvider());\n      const remoteContractType = ethers.utils.toUtf8String(await contract.contractType())\n      // eslint-disable-next-line no-control-regex\n      .replace(/\\x00/g, \"\");\n      return getContractTypeForRemoteName(remoteContractType);\n    } catch (err) {\n      return \"custom\";\n    }\n  }\n\n  /**\n   * Return all the contracts deployed by the specified address\n   * @param walletAddress - the deployed address\n   * @example\n   * ```javascript\n   * const contracts = sdk.getContractList(\"{{wallet_address}}\");\n   * ```\n   */\n  async getContractList(walletAddress) {\n    const addresses = (await (await this.deployer.getRegistry())?.getContractAddresses(walletAddress)) || [];\n    const addressesWithContractTypes = await Promise.all(addresses.map(async address => {\n      let contractType = \"custom\";\n      try {\n        contractType = await this.resolveContractType(address);\n      } catch (e) {\n        // this going to happen frequently and be OK, we'll just catch it and ignore it\n      }\n      let metadata;\n      if (contractType === \"custom\") {\n        try {\n          metadata = (await this.getContract(address)).metadata;\n        } catch (e) {\n          console.warn(`Couldn't get contract metadata for custom contract: ${address} - ${e}`);\n        }\n      } else {\n        metadata = (await this.getContract(address, contractType)).metadata;\n      }\n      return {\n        address,\n        contractType,\n        metadata\n      };\n    }));\n    return addressesWithContractTypes.filter(e => e.metadata).map(_ref => {\n      let {\n        address,\n        contractType,\n        metadata\n      } = _ref;\n      invariant(metadata, \"All ThirdwebContracts require metadata\");\n      return {\n        address,\n        contractType,\n        metadata: () => metadata.get()\n      };\n    });\n  }\n\n  /**\n   * Update the active signer or provider for all contracts\n   * @param network - the new signer or provider\n   */\n  updateSignerOrProvider(network) {\n    super.updateSignerOrProvider(network);\n    this.updateContractSignerOrProvider();\n  }\n  updateContractSignerOrProvider() {\n    this.wallet.connect(this.getSignerOrProvider());\n    this.auth.updateSignerOrProvider(this.getSignerOrProvider());\n    this.deployer.updateSignerOrProvider(this.getSignerOrProvider());\n    this._publisher.updateSignerOrProvider(this.getSignerOrProvider());\n    for (const [, contract] of this.contractCache) {\n      contract.onNetworkUpdated(this.getSignerOrProvider());\n    }\n  }\n\n  /**\n   * Get an instance of a Custom contract from a json ABI\n   * @param address - the address of the deployed contract\n   * @param abi - the JSON abi\n   * @returns the contract\n   * @beta\n   * @example\n   * ```javascript\n   * // Import your ABI from a JSON file\n   * import myABI from \"./path/to/myABI.json\";\n   *\n   * const contract = sdk.getContractFromAbi(\n   *   \"{{contract_address}}\",\n   *   // Pass in the \"abi\" field from the JSON file\n   *   myABI.abi\n   * );\n   * ```\n   */\n  async getContractFromAbi(address, abi) {\n    if (this.contractCache.has(address)) {\n      return this.contractCache.get(address);\n    }\n    const [, provider] = getSignerAndProvider(this.getSignerOrProvider(), this.options);\n    // TODO we still might want to lazy-fy this\n    const contract = new SmartContract(this.getSignerOrProvider(), address, abi, this.storageHandler, this.options, (await provider.getNetwork()).chainId);\n    this.contractCache.set(address, contract);\n    return contract;\n  }\n\n  /**\n   * Get the native balance of a given address (wallet or contract)\n   * @example\n   * ```javascript\n   * const balance = await sdk.getBalance(\"0x...\");\n   * console.log(balance.displayValue);\n   * ```\n   * @param address - the address to check the balance for\n   */\n  async getBalance(address) {\n    return fetchCurrencyValue(this.getProvider(), NATIVE_TOKEN_ADDRESS, await this.getProvider().getBalance(address));\n  }\n\n  /**\n   * @internal\n   */\n  getPublisher() {\n    return this._publisher;\n  }\n}\n\n/**\n * @internal\n */\nclass ContractFactory extends ContractWrapper {\n  // Map from contract type to version to deploy specific versions by default\n\n  constructor(factoryAddr, network, storage, options) {\n    super(network, factoryAddr, TWFactoryAbi, options);\n    _defineProperty(this, \"storage\", void 0);\n    _defineProperty(this, \"DEFAULT_VERSION_MAP\", {\n      [NFTDropInitializer.contractType]: 3,\n      [NFTCollectionInitializer.contractType]: 1,\n      [SignatureDropInitializer.contractType]: 4,\n      [MultiwrapInitializer.contractType]: 1,\n      [EditionDropInitializer.contractType]: 2,\n      [EditionInitializer.contractType]: 1,\n      [TokenDropInitializer.contractType]: 2,\n      [TokenInitializer.contractType]: 1,\n      [VoteInitializer.contractType]: 1,\n      [SplitInitializer.contractType]: 1,\n      [MarketplaceInitializer.contractType]: 2,\n      [PackInitializer.contractType]: 2\n    });\n    this.storage = storage;\n  }\n  async deploy(contractType, contractMetadata, version) {\n    const contract = PREBUILT_CONTRACTS_MAP[contractType];\n    const metadata = contract.schema.deploy.parse(contractMetadata);\n\n    // TODO: is there any special pre-processing we need to do before uploading?\n    const contractURI = await this.storage.upload(metadata);\n    const implementationAddress = await this.getImplementation(contract, version);\n    if (!implementationAddress || implementationAddress === constants.AddressZero) {\n      throw new Error(`No implementation found for ${contractType}`);\n    }\n    const ABI = await contract.getAbi(implementationAddress, this.getProvider());\n    const encodedFunc = Contract.getInterface(ABI).encodeFunctionData(\"initialize\", await this.getDeployArguments(contractType, metadata, contractURI));\n    const blockNumber = await this.getProvider().getBlockNumber();\n    const salt = ethers.utils.formatBytes32String(blockNumber.toString());\n    const receipt = await this.sendTransaction(\"deployProxyByImplementation\", [implementationAddress, encodedFunc, salt]);\n    const events = this.parseLogs(\"ProxyDeployed\", receipt.logs);\n    if (events.length < 1) {\n      throw new Error(\"No ProxyDeployed event found\");\n    }\n    return events[0].args.proxy;\n  }\n\n  // TODO once IContractFactory is implemented, this can be probably be moved to its own class\n  async deployProxyByImplementation(implementationAddress, implementationAbi, initializerFunction, initializerArgs) {\n    const encodedFunc = Contract.getInterface(implementationAbi).encodeFunctionData(initializerFunction, initializerArgs);\n    const blockNumber = await this.getProvider().getBlockNumber();\n    const receipt = await this.sendTransaction(\"deployProxyByImplementation\", [implementationAddress, encodedFunc, ethers.utils.formatBytes32String(blockNumber.toString())]);\n    const events = this.parseLogs(\"ProxyDeployed\", receipt.logs);\n    if (events.length < 1) {\n      throw new Error(\"No ProxyDeployed event found\");\n    }\n    return events[0].args.proxy;\n  }\n\n  /**\n   *\n   * @param contractType\n   * @param metadata\n   * @param contractURI\n   * @returns\n   * @internal\n   */\n  async getDeployArguments(contractType, metadata, contractURI) {\n    let trustedForwarders = contractType === PackInitializer.contractType ? [] : await this.getDefaultTrustedForwarders();\n    // override default forwarders if custom ones are passed in\n    if (metadata.trusted_forwarders && metadata.trusted_forwarders.length > 0) {\n      trustedForwarders = metadata.trusted_forwarders;\n    }\n    switch (contractType) {\n      case NFTDropInitializer.contractType:\n      case NFTCollectionInitializer.contractType:\n        const erc721metadata = NFTDropInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), erc721metadata.name, erc721metadata.symbol, contractURI, trustedForwarders, erc721metadata.primary_sale_recipient, erc721metadata.fee_recipient, erc721metadata.seller_fee_basis_points, erc721metadata.platform_fee_basis_points, erc721metadata.platform_fee_recipient];\n      case SignatureDropInitializer.contractType:\n        const signatureDropmetadata = SignatureDropInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), signatureDropmetadata.name, signatureDropmetadata.symbol, contractURI, trustedForwarders, signatureDropmetadata.primary_sale_recipient, signatureDropmetadata.fee_recipient, signatureDropmetadata.seller_fee_basis_points, signatureDropmetadata.platform_fee_basis_points, signatureDropmetadata.platform_fee_recipient];\n      case MultiwrapInitializer.contractType:\n        const multiwrapMetadata = MultiwrapInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), multiwrapMetadata.name, multiwrapMetadata.symbol, contractURI, trustedForwarders, multiwrapMetadata.fee_recipient, multiwrapMetadata.seller_fee_basis_points];\n      case EditionDropInitializer.contractType:\n      case EditionInitializer.contractType:\n        const erc1155metadata = EditionDropInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), erc1155metadata.name, erc1155metadata.symbol, contractURI, trustedForwarders, erc1155metadata.primary_sale_recipient, erc1155metadata.fee_recipient, erc1155metadata.seller_fee_basis_points, erc1155metadata.platform_fee_basis_points, erc1155metadata.platform_fee_recipient];\n      case TokenDropInitializer.contractType:\n      case TokenInitializer.contractType:\n        const erc20metadata = TokenInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), erc20metadata.name, erc20metadata.symbol, contractURI, trustedForwarders, erc20metadata.primary_sale_recipient, erc20metadata.platform_fee_recipient, erc20metadata.platform_fee_basis_points];\n      case VoteInitializer.contractType:\n        const voteMetadata = VoteInitializer.schema.deploy.parse(metadata);\n        return [voteMetadata.name, contractURI, trustedForwarders, voteMetadata.voting_token_address, voteMetadata.voting_delay_in_blocks, voteMetadata.voting_period_in_blocks, BigNumber.from(voteMetadata.proposal_token_threshold), voteMetadata.voting_quorum_fraction];\n      case SplitInitializer.contractType:\n        const splitsMetadata = SplitInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), contractURI, trustedForwarders, splitsMetadata.recipients.map(s => s.address), splitsMetadata.recipients.map(s => BigNumber.from(s.sharesBps))];\n      case MarketplaceInitializer.contractType:\n        const marketplaceMetadata = MarketplaceInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), contractURI, trustedForwarders, marketplaceMetadata.platform_fee_recipient, marketplaceMetadata.platform_fee_basis_points];\n      case PackInitializer.contractType:\n        const packsMetadata = PackInitializer.schema.deploy.parse(metadata);\n        return [await this.getSignerAddress(), packsMetadata.name, packsMetadata.symbol, contractURI, trustedForwarders, packsMetadata.fee_recipient, packsMetadata.seller_fee_basis_points];\n      default:\n        return [];\n    }\n  }\n  async getDefaultTrustedForwarders() {\n    const chainId = await this.getChainID();\n    return getDefaultTrustedForwarders(chainId);\n  }\n  async getImplementation(contract, version) {\n    const encodedType = ethers.utils.formatBytes32String(contract.name);\n    const chainId = await this.getChainID();\n    const approvedImplementation = getApprovedImplementation(chainId, contract.contractType);\n    // return approved implementation if it exists and we're not overriding the version\n    if (approvedImplementation && approvedImplementation.length > 0 && version === undefined) {\n      return approvedImplementation;\n    }\n    return this.readContract.getImplementation(encodedType, version !== undefined ? version : this.DEFAULT_VERSION_MAP[contract.contractType]);\n  }\n  async getLatestVersion(contractType) {\n    const name = getContractName(contractType);\n    if (!name) {\n      throw new Error(`Invalid contract type ${contractType}`);\n    }\n    const encodedType = ethers.utils.formatBytes32String(name);\n    return this.readContract.currentVersion(encodedType);\n  }\n}\n\nclass FactoryEvents extends ContractEvents {\n  constructor(contractWrapper) {\n    super(contractWrapper);\n  }\n  addDeployListener(listener) {\n    this.addTransactionListener(async event => {\n      if (!event.transactionHash) {\n        return;\n      }\n      const receipt = await this.contractWrapper.getProvider().getTransactionReceipt(event.transactionHash);\n      const events = this.contractWrapper.parseLogs(\"ProxyDeployed\", receipt.logs);\n      if (events.length > 0) {\n        listener({\n          ...event,\n          contractAddress: events[0].args.proxy\n        });\n      }\n    });\n  }\n}\n\n/**\n * @internal\n */\nclass ContractRegistry extends ContractWrapper {\n  constructor(registryAddress, network, options) {\n    super(network, registryAddress, TWRegistryABI, options);\n  }\n  async getContractAddresses(walletAddress) {\n    // TODO @fixme the filter here is necessary because for some reason getAll returns a 0x0 address for the first entry\n    return (await this.readContract.getAll(walletAddress)).filter(adr => utils.isAddress(adr) && adr.toLowerCase() !== constants.AddressZero);\n  }\n  async addContract(contractAddress) {\n    return await this.addContracts([contractAddress]);\n  }\n  async addContracts(contractAddresses) {\n    const deployerAddress = await this.getSignerAddress();\n    const encoded = [];\n    contractAddresses.forEach(address => {\n      encoded.push(this.readContract.interface.encodeFunctionData(\"add\", [deployerAddress, address]));\n    });\n    return {\n      receipt: await this.multiCall(encoded)\n    };\n  }\n  async removeContract(contractAddress) {\n    return await this.removeContracts([contractAddress]);\n  }\n  async removeContracts(contractAddresses) {\n    const deployerAddress = await this.getSignerAddress();\n    const encoded = [];\n    contractAddresses.forEach(address => {\n      encoded.push(this.readContract.interface.encodeFunctionData(\"remove\", [deployerAddress, address]));\n    });\n    return {\n      receipt: await this.multiCall(encoded)\n    };\n  }\n}\n\n/**\n * Handles deploying new contracts\n * @public\n */\nclass ContractDeployer extends RPCConnectionHandler {\n  /**\n   * @internal\n   * should never be accessed directly, use {@link ContractDeployer.getFactory} instead\n   */\n\n  /**\n   * @internal\n   * should never be accessed directly, use {@link ContractDeployer.getRegistry} instead\n   */\n\n  constructor(network, options, storage) {\n    super(network, options);\n    _defineProperty(this, \"_factory\", void 0);\n    _defineProperty(this, \"_registry\", void 0);\n    _defineProperty(this, \"events\", void 0);\n    _defineProperty(this, \"storage\", void 0);\n    this.storage = storage;\n\n    // Initialize factory and registry (we don't need to make these calls async)\n    this.getFactory();\n    this.getRegistry();\n  }\n\n  /**\n   * Deploys an NFT Collection contract\n   *\n   * @remarks Deploys an NFT Collection contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployNFTCollection({\n   *   name: \"My Collection\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployNFTCollection(metadata) {\n    return await this.deployBuiltInContract(NFTCollectionInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new NFTDrop contract\n   *\n   * @remarks Deploys an NFT Drop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployNFTDrop({\n   *   name: \"My Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployNFTDrop(metadata) {\n    return await this.deployBuiltInContract(NFTDropInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new SignatureDrop contract\n   *\n   * @remarks Deploys a SignatureDrop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deploySignatureDrop({\n   *   name: \"My Signature Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deploySignatureDrop(metadata) {\n    return await this.deployBuiltInContract(SignatureDropInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Multiwrap contract\n   *\n   * @remarks Deploys a Multiwrap contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployMultiwrap({\n   *   name: \"My Multiwrap\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   * @beta\n   */\n  async deployMultiwrap(metadata) {\n    return await this.deployBuiltInContract(MultiwrapInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Edition contract\n   *\n   * @remarks Deploys an Edition contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployEdition({\n   *   name: \"My Edition\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployEdition(metadata) {\n    return await this.deployBuiltInContract(EditionInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new EditionDrop contract\n   *\n   * @remarks Deploys an Edition Drop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployEditionDrop({\n   *   name: \"My Edition Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployEditionDrop(metadata) {\n    return await this.deployBuiltInContract(EditionDropInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Token contract\n   *\n   * @remarks Deploys a Token contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployToken({\n   *   name: \"My Token\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployToken(metadata) {\n    return await this.deployBuiltInContract(TokenInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Token Drop contract\n   *\n   * @remarks Deploys a Token Drop contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployTokenDrop({\n   *   name: \"My Token Drop\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployTokenDrop(metadata) {\n    return await this.deployBuiltInContract(TokenDropInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Marketplace contract\n   *\n   * @remarks Deploys a Marketplace contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployMarketplace({\n   *   name: \"My Marketplace\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployMarketplace(metadata) {\n    return await this.deployBuiltInContract(MarketplaceInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Pack contract\n   *\n   * @remarks Deploys a Pack contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployPack({\n   *   name: \"My Pack\",\n   *   primary_sale_recipient: \"your-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployPack(metadata) {\n    return await this.deployBuiltInContract(PackInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Split contract\n   *\n   * @remarks Deploys a Split contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deploySplit({\n   *   name: \"My Split\",\n   *   primary_sale_recipient: \"your-address\",\n   *   recipients: [\n   *    {\n   *      address: \"your-address\",\n   *      sharesBps: 80 * 100, // 80%\n   *    },\n   *    {\n   *      address: \"another-address\",\n   *      sharesBps: 20 * 100, // 20%\n   *    },\n   *   ],\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deploySplit(metadata) {\n    return await this.deployBuiltInContract(SplitInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new Vote contract\n   *\n   * @remarks Deploys an Vote contract and returns the address of the deployed contract\n   *\n   * @example\n   * ```javascript\n   * const contractAddress = await sdk.deployer.deployVote({\n   *   name: \"My Vote\",\n   *   primary_sale_recipient: \"your-address\",\n   *   voting_token_address: \"your-token-contract-address\",\n   * });\n   * ```\n   * @param metadata - the contract metadata\n   * @returns the address of the deployed contract\n   */\n  async deployVote(metadata) {\n    return await this.deployBuiltInContract(VoteInitializer.contractType, metadata);\n  }\n\n  /**\n   * Deploys a new contract\n   *\n   * @internal\n   * @param contractType - the type of contract to deploy\n   * @param contractMetadata - the metadata to deploy the contract with\n   * @param version\n   * @returns a promise of the address of the newly deployed contract\n   */\n  async deployBuiltInContract(contractType, contractMetadata) {\n    let version = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"latest\";\n    const activeChainId = (await this.getProvider().getNetwork()).chainId;\n    const parsedMetadata = PREBUILT_CONTRACTS_MAP[contractType].schema.deploy.parse(contractMetadata);\n    const factory = await this.getFactory();\n    if (activeChainId === ChainId.Hardhat || activeChainId === ChainId.Localhost) {\n      //\n      // old behavior for hardhat and localhost chains\n      //\n\n      // parse version into the first number of the version string (or undefined if unparseable)\n      let parsedVersion = undefined;\n      try {\n        parsedVersion = parseInt(version);\n        if (isNaN(parsedVersion)) {\n          parsedVersion = undefined;\n        }\n      } catch (e) {\n        parsedVersion = undefined;\n      }\n      return await factory.deploy(contractType, parsedMetadata, parsedVersion);\n    }\n\n    //\n    // new behavior for all other chains\n    //\n\n    // resolve contract name from type\n    const contractName = getContractName(contractType);\n    invariant(contractName, \"contract name not found\");\n    // get deploy arugments for the contractType\n    // first upload the contractmetadata\n    const contractURI = await this.storage.upload(parsedMetadata);\n    // the get the deploy arguments\n    const constructorParams = await factory.getDeployArguments(contractType, parsedMetadata, contractURI);\n    return this.deployReleasedContract(\n    // 0xdd99b75f095d0c4d5112aCe938e4e6ed962fb024 === deployer.thirdweb.eth\n    \"0xdd99b75f095d0c4d5112aCe938e4e6ed962fb024\", contractName, constructorParams, version);\n  }\n\n  /**\n   * @internal\n   * @param contractType\n   */\n  async getLatestBuiltInContractVersion(contractType) {\n    const factory = await this.getFactory();\n    return await factory.getLatestVersion(contractType);\n  }\n\n  /**\n   * Deploy any released contract by its name\n   * @param releaserAddress the address of the releaser\n   * @param contractName the name of the contract to deploy\n   * @param constructorParams the constructor params to pass to the contract\n   */\n  async deployReleasedContract(releaserAddress, contractName, constructorParams) {\n    let version = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : \"latest\";\n    const release = await new ThirdwebSDK(\"polygon\").getPublisher().getVersion(releaserAddress, contractName, version);\n    if (!release) {\n      throw new Error(`No release found for '${contractName}' at version '${version}' by '${releaserAddress}'`);\n    }\n    return await this.deployContractFromUri(release.metadataUri, constructorParams);\n  }\n\n  /**\n   * Deploy a proxy contract of a given implementation via the given factory\n   * @param factoryAddress\n   * @param implementationAddress\n   * @param implementationAbi\n   * @param initializerFunction\n   * @param initializerArgs\n   */\n  async deployViaFactory(factoryAddress, implementationAddress, implementationAbi, initializerFunction, initializerArgs) {\n    const signer = this.getSigner();\n    invariant(signer, \"signer is required\");\n    // TODO only require factory interface here - IProxyFactory\n    const proxyFactory = new ContractFactory(factoryAddress, this.getSignerOrProvider(), this.storage, {});\n    return await proxyFactory.deployProxyByImplementation(implementationAddress, implementationAbi, initializerFunction, initializerArgs);\n  }\n\n  /**\n   * Deploy a proxy contract of a given implementation directly\n   * @param implementationAddress\n   * @param implementationAbi\n   * @param initializerFunction\n   * @param initializerArgs\n   */\n  async deployProxy(implementationAddress, implementationAbi, initializerFunction, initializerArgs) {\n    const encodedInitializer = Contract.getInterface(implementationAbi).encodeFunctionData(initializerFunction, initializerArgs);\n    const {\n      TWProxy__factory\n    } = await import('@thirdweb-dev/contracts-js/factories/TWProxy__factory');\n    return this.deployContractWithAbi(TWProxy__factory.abi, TWProxy__factory.bytecode, [implementationAddress, encodedInitializer]);\n  }\n\n  /**\n   * @internal\n   */\n  async getRegistry() {\n    // if we already have a registry just return it back\n    if (this._registry) {\n      return this._registry;\n    }\n\n    // otherwise get the registry address for the active chain and get a new one\n\n    // have to do it like this otherwise we run it over and over and over\n    // \"this._registry\" has to be assigned to the promise upfront.\n    return this._registry = this.getProvider().getNetwork().then(async _ref => {\n      let {\n        chainId\n      } = _ref;\n      const registryAddress = getContractAddressByChainId(chainId, \"twRegistry\");\n      return new ContractRegistry(registryAddress, this.getSignerOrProvider(), this.options);\n    });\n  }\n  async getFactory() {\n    // if we already have a factory just return it back\n    if (this._factory) {\n      return this._factory;\n    }\n\n    // otherwise get the factory address for the active chain and get a new one\n\n    // have to do it like this otherwise we run it over and over and over\n    // \"this._factory\" has to be assigned to the promise upfront.\n    return this._factory = this.getProvider().getNetwork().then(async _ref2 => {\n      let {\n        chainId\n      } = _ref2;\n      const factoryAddress = getContractAddressByChainId(chainId, \"twFactory\");\n      const factory = new ContractFactory(factoryAddress, this.getSignerOrProvider(), this.storage, this.options);\n      this.events = new FactoryEvents(factory);\n      return factory;\n    });\n  }\n  updateSignerOrProvider(network) {\n    super.updateSignerOrProvider(network);\n    this.updateContractSignerOrProvider();\n  }\n  updateContractSignerOrProvider() {\n    // has to be promises now\n    this._factory?.then(factory => {\n      factory.updateSignerOrProvider(this.getSignerOrProvider());\n    }).catch(() => {\n      // ignore\n    });\n    // has to be promises now\n    this._registry?.then(registry => {\n      registry.updateSignerOrProvider(this.getSignerOrProvider());\n    }).catch(() => {\n      // ignore\n    });\n  }\n\n  /**\n   * @internal\n   * @param publishMetadataUri\n   * @param constructorParamValues\n   * @param options\n   */\n  async deployContractFromUri(publishMetadataUri, constructorParamValues, options) {\n    const signer = this.getSigner();\n    invariant(signer, \"A signer is required\");\n    const compilerMetadata = await fetchPreDeployMetadata(publishMetadataUri, this.storage);\n    let isDeployableViaFactory;\n    let isDeployableViaProxy;\n    let factoryDeploymentData;\n    try {\n      const extendedMetadata = await fetchExtendedReleaseMetadata(publishMetadataUri, this.storage);\n      isDeployableViaFactory = extendedMetadata.isDeployableViaFactory;\n      isDeployableViaProxy = extendedMetadata.isDeployableViaProxy;\n      factoryDeploymentData = FactoryDeploymentSchema.parse(extendedMetadata.factoryDeploymentData);\n    } catch (e) {\n      // not a factory deployment, ignore\n    }\n    const forceDirectDeploy = options?.forceDirectDeploy || false;\n    if (factoryDeploymentData && (isDeployableViaProxy || isDeployableViaFactory) && !forceDirectDeploy) {\n      const chainId = (await this.getProvider().getNetwork()).chainId;\n      invariant(factoryDeploymentData.implementationAddresses, \"implementationAddresses is required\");\n      const implementationAddress = factoryDeploymentData.implementationAddresses[chainId];\n      invariant(implementationAddress, `implementationAddress not found for chainId '${chainId}'`);\n      invariant(factoryDeploymentData.implementationInitializerFunction, `implementationInitializerFunction not set'`);\n      const initializerParamTypes = extractFunctionParamsFromAbi(compilerMetadata.abi, factoryDeploymentData.implementationInitializerFunction).map(p => p.type);\n      const paramValues = this.convertParamValues(initializerParamTypes, constructorParamValues);\n      if (isDeployableViaFactory) {\n        // deploy via a factory (prioritise factory)\n        invariant(factoryDeploymentData.factoryAddresses, \"isDeployableViaFactory is true so factoryAddresses is required\");\n        const factoryAddress = factoryDeploymentData.factoryAddresses[chainId];\n        invariant(factoryAddress, `isDeployableViaFactory is true and factoryAddress not found for chainId '${chainId}'`);\n        return await this.deployViaFactory(factoryAddress, implementationAddress, compilerMetadata.abi, factoryDeploymentData.implementationInitializerFunction, paramValues);\n      } else if (isDeployableViaProxy) {\n        // deploy a proxy directly\n        return await this.deployProxy(implementationAddress, compilerMetadata.abi, factoryDeploymentData.implementationInitializerFunction, paramValues);\n      }\n    }\n    const bytecode = compilerMetadata.bytecode.startsWith(\"0x\") ? compilerMetadata.bytecode : `0x${compilerMetadata.bytecode}`;\n    if (!ethers.utils.isHexString(bytecode)) {\n      throw new Error(`Contract bytecode is invalid.\\n\\n${bytecode}`);\n    }\n    const constructorParamTypes = extractConstructorParamsFromAbi(compilerMetadata.abi).map(p => p.type);\n    const paramValues = this.convertParamValues(constructorParamTypes, constructorParamValues);\n    return this.deployContractWithAbi(compilerMetadata.abi, bytecode, paramValues);\n  }\n  convertParamValues(constructorParamTypes, constructorParamValues) {\n    // check that both arrays are same length\n    if (constructorParamTypes.length !== constructorParamValues.length) {\n      throw Error(\"Passed the wrong number of constructor arguments\");\n    }\n    return constructorParamTypes.map((p, index) => {\n      if (p === \"tuple\" || p.endsWith(\"[]\")) {\n        if (typeof constructorParamValues[index] === \"string\") {\n          return JSON.parse(constructorParamValues[index]);\n        } else {\n          return constructorParamValues[index];\n        }\n      }\n      if (p === \"bytes32\") {\n        invariant(ethers.utils.isHexString(constructorParamValues[index]), `Could not parse bytes32 value. Expected valid hex string but got \"${constructorParamValues[index]}\".`);\n        return ethers.utils.hexZeroPad(constructorParamValues[index], 32);\n      }\n      if (p.startsWith(\"bytes\")) {\n        invariant(ethers.utils.isHexString(constructorParamValues[index]), `Could not parse bytes value. Expected valid hex string but got \"${constructorParamValues[index]}\".`);\n        return constructorParamValues[index];\n      }\n      if (p.startsWith(\"uint\") || p.startsWith(\"int\")) {\n        return BigNumber.from(constructorParamValues[index].toString());\n      }\n      return constructorParamValues[index];\n    });\n  }\n\n  /**\n   * @internal\n   * @param abi\n   * @param bytecode\n   * @param constructorParams\n   */\n  async deployContractWithAbi(abi, bytecode, constructorParams) {\n    const signer = this.getSigner();\n    invariant(signer, \"Signer is required to deploy contracts\");\n    const deployer = await new ethers.ContractFactory(abi, bytecode).connect(signer).deploy(...constructorParams);\n    const deployedContract = await deployer.deployed();\n    // TODO parse transaction receipt\n    return deployedContract.address;\n  }\n}\n\n/**\n * Encodes and decodes Contract functions\n * @public\n */\nclass ContractOwner {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"featureName\", FEATURE_OWNER.name);\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n\n  /**\n   * Return the current owner of the contract\n   * @returns the owner address\n   */\n  async get() {\n    return this.contractWrapper.readContract.owner();\n  }\n\n  /**\n   * Set the new owner of the contract\n   * @remarks Can only be called by the current owner.\n   *\n   * @param address - the address of the new owner\n   *\n   * @example\n   * ```javascript\n   * await contract.owner.set(\"0x1234567890123456789012345678901234567890\");\n   * ```\n   */\n  async set(address) {\n    return {\n      receipt: await this.contractWrapper.sendTransaction(\"setOwner\", [address])\n    };\n  }\n}\n\nconst PAPER_API_BASE = `https://paper.xyz/api`;\nconst PAPER_API_VERSION = `2022-08-12`;\n\n/**\n * @internal\n */\nconst PAPER_API_URL = `${PAPER_API_BASE}/${PAPER_API_VERSION}/platform/thirdweb`;\nconst PAPER_CHAIN_ID_MAP = {\n  [ChainId.Mainnet]: \"Ethereum\",\n  [ChainId.Goerli]: \"Goerli\",\n  [ChainId.Polygon]: \"Polygon\",\n  [ChainId.Mumbai]: \"Mumbai\",\n  [ChainId.Avalanche]: \"Avalanche\"\n};\n\n/**\n * @internal\n */\nfunction parseChainIdToPaperChain(chainId) {\n  invariant(chainId in PAPER_CHAIN_ID_MAP, `chainId not supported by paper: ${chainId}`);\n  return PAPER_CHAIN_ID_MAP[chainId];\n}\n/**\n *\n * @param contractAddress\n * @param chainId\n * @internal\n * @returns the paper xyz contract id\n * @throws if the contract is not registered on paper xyz\n */\nasync function fetchRegisteredCheckoutId(contractAddress, chainId) {\n  const paperChain = parseChainIdToPaperChain(chainId);\n  const res = await fetch(`${PAPER_API_URL}/register-contract?contractAddress=${contractAddress}&chain=${paperChain}`);\n  const json = await res.json();\n  invariant(json.result.id, \"Contract is not registered with paper\");\n  return json.result.id;\n}\n\n/**\n * The parameters for creating a paper.xyz checkout link.\n * @public\n */\n\nconst DEFAULT_PARAMS = {\n  expiresInMinutes: 15,\n  feeBearer: \"BUYER\",\n  sendEmailOnSuccess: true,\n  redirectAfterPayment: false\n};\n\n/**\n * @internal\n */\nasync function createCheckoutLinkIntent(contractId, params) {\n  const res = await fetch(`${PAPER_API_URL}/checkout-link-intent`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      contractId,\n      ...DEFAULT_PARAMS,\n      ...params,\n      metadata: {\n        ...params.metadata,\n        via_platform: \"thirdweb\"\n      },\n      // overrides that are hard coded\n      hideNativeMint: true,\n      hidePaperWallet: !!params.walletAddress,\n      hideExternalWallet: true,\n      hidePayWithCrypto: true,\n      usePaperKey: false\n    })\n  });\n  const json = await res.json();\n  invariant(json.checkoutLinkIntentUrl, \"Failed to create checkout link intent\");\n  return json.checkoutLinkIntentUrl;\n}\n\n/**\n * @internal\n */\nclass PaperCheckout {\n  constructor(contractWrapper) {\n    _defineProperty(this, \"contractWrapper\", void 0);\n    this.contractWrapper = contractWrapper;\n  }\n  async getCheckoutId() {\n    return fetchRegisteredCheckoutId(this.contractWrapper.readContract.address, await this.contractWrapper.getChainID());\n  }\n  async isEnabled() {\n    try {\n      return !!(await this.getCheckoutId());\n    } catch (err) {\n      return false;\n    }\n  }\n  async createLinkIntent(params) {\n    return await createCheckoutLinkIntent(await this.getCheckoutId(), params);\n  }\n}\n\nexport { FactoryDeploymentSchema as $, MintRequest1155 as A, BaseSignaturePayloadInput as B, CommonContractSchema as C, MintRequest721withQuantity as D, EditionMetadataOutputSchema as E, MerkleSchema as F, GenericRequest as G, SnapshotEntryInput as H, SnapshotInputSchema as I, SnapshotEntryWithProofSchema as J, SnapshotSchema as K, SnapshotInfoSchema as L, MintRequest20 as M, BYOCContractMetadataSchema as N, OptionalPropertiesInput as O, PartialClaimConditionInputSchema as P, CustomContractInput as Q, CustomContractOutput as R, SUPPORTED_CHAIN_IDS as S, TokenMintInputSchema as T, CustomContractDeploy as U, CustomContractSchema as V, AbiTypeSchema as W, AbiObjectSchema as X, AbiSchema as Y, PreDeployMetadata as Z, ChainIdToAddressSchema as _, ClaimConditionMetadataSchema as a, ThirdwebSDK as a$, ExtraPublishMetadataSchemaInput as a0, ExtraPublishMetadataSchemaOutput as a1, FullPublishMetadataSchemaInput as a2, FullPublishMetadataSchemaOutput as a3, ProfileSchemaInput as a4, ProfileSchemaOutput as a5, PublishedContractSchema as a6, ContractInfoSchema as a7, CompilerMetadataFetchedSchema as a8, PreDeployMetadataFetchedSchema as a9, Erc721ClaimableWithConditions as aA, Erc721WithQuantitySignatureMintable as aB, Erc721Supply as aC, Erc721Enumerable as aD, Erc721Mintable as aE, Erc721BatchMintable as aF, Erc721Burnable as aG, StandardErc721 as aH, Erc1155 as aI, Erc1155Enumerable as aJ, Erc1155Mintable as aK, Erc1155BatchMintable as aL, Erc1155SignatureMintable as aM, Erc1155Burnable as aN, Erc1155LazyMintable as aO, StandardErc1155 as aP, MarketplaceDirect as aQ, MarketplaceAuction as aR, ContractDeployer as aS, GasCostEstimator as aT, ContractEvents as aU, ContractInterceptor as aV, ContractPlatformFee as aW, ContractPublishedMetadata as aX, ContractOwner as aY, TransactionTask as aZ, UserWallet as a_, LoginOptionsSchema as aa, LoginPayloadDataSchema as ab, LoginPayloadSchema as ac, VerifyOptionsSchema as ad, AuthenticationOptionsSchema as ae, AuthenticationPayloadDataSchema as af, AuthenticationPayloadSchema as ag, WalletAuthenticator as ah, ContractEncoder as ai, ContractMetadata as aj, ContractRoles as ak, ContractRoyalty as al, ContractPrimarySale as am, DelayedReveal as an, DropClaimConditions as ao, DropErc1155ClaimConditions as ap, DropErc1155History as aq, Erc20 as ar, Erc20Mintable as as, Erc20BatchMintable as at, TokenERC20History as au, Erc20SignatureMintable as av, Erc20Burnable as aw, StandardErc20 as ax, Erc721 as ay, Erc721LazyMintable as az, ClaimConditionInputSchema as b, APPROVED_IMPLEMENTATIONS as b$, ListingType as b0, ProposalState as b1, VoteType as b2, ClaimEligibility as b3, fetchCurrencyValue as b4, fetchCurrencyMetadata as b5, normalizePriceValue as b6, convertToReadableQuantity as b7, NotFoundError as b8, InvalidAddressError as b9, extractConstructorParams as bA, extractFunctions as bB, extractConstructorParamsFromAbi as bC, extractFunctionParamsFromAbi as bD, extractFunctionsFromAbi as bE, extractEventsFromAbi as bF, extractMinimalProxyImplementationAddress as bG, resolveContractUriFromAddress as bH, extractIPFSHashFromBytecode as bI, fetchContractMetadataFromAddress as bJ, fetchContractMetadata as bK, fetchSourceFilesFromMetadata as bL, fetchRawPredeployMetadata as bM, fetchPreDeployMetadata as bN, fetchExtendedReleaseMetadata as bO, detectFeatures as bP, getAllDetectedFeatures as bQ, getAllDetectedFeatureNames as bR, isFeatureEnabled as bS, assertEnabled as bT, detectContractFeature as bU, hasFunction as bV, toSemver as bW, isIncrementalVersion as bX, isDowngradeVersion as bY, OZ_DEFENDER_FORWARDER_ADDRESS as bZ, CONTRACT_ADDRESSES as b_, MissingRoleError as ba, AssetNotFoundError as bb, UploadError as bc, FileNameMissingError as bd, DuplicateFileNameError as be, NotEnoughTokensError as bf, MissingOwnerRoleError as bg, QuantityAboveLimitError as bh, FetchError as bi, DuplicateLeafsError as bj, AuctionAlreadyStartedError as bk, FunctionDeprecatedError as bl, ListingNotFoundError as bm, WrongListingTypeError as bn, RestrictedTransferError as bo, AdminRoleMissingError as bp, AuctionHasNotEndedError as bq, ExtensionNotImplementedError as br, TransactionError as bs, convertToTWError as bt, includesErrorMessage as bu, createSnapshot as bv, ALL_ROLES as bw, getRoleHash as bx, matchesPrebuiltAbi as by, hasMatchingAbi as bz, ClaimConditionInputArray as c, getApprovedImplementation as c0, getContractAddressByChainId as c1, getContractPublisherAddress as c2, getDefaultTrustedForwarders as c3, InterfaceId_IERC721 as c4, InterfaceId_IERC1155 as c5, NATIVE_TOKEN_ADDRESS as c6, NATIVE_TOKENS as c7, getNativeTokenByChainId as c8, EventType as c9, PaperCheckout as cA, ContractWrapper as cB, DropErc1155ContractSchema as cC, TokenErc1155ContractSchema as cD, MarketplaceContractSchema as cE, mapOffer as cF, isNativeToken as cG, MultiwrapContractSchema as cH, uploadOrExtractURI as cI, hasERC20Allowance as cJ, isTokenApprovedForTransfer as cK, TokenErc721ContractSchema as cL, DropErc721ContractSchema as cM, FEATURE_NFT_REVEALABLE as cN, AddressSchema as cO, BigNumberishSchema as cP, RawDateSchema as cQ, PackContractSchema as cR, SplitsContractSchema as cS, DropErc20ContractSchema as cT, TokenErc20ContractSchema as cU, VoteContractSchema as cV, DEFAULT_IPFS_GATEWAY as ca, CHAIN_NAME_TO_ID as cb, CHAIN_ID_TO_NAME as cc, DEFAULT_RPC_URLS as cd, getProviderForNetwork as ce, getReadOnlyProvider as cf, EditionDropInitializer as cg, EditionInitializer as ch, MarketplaceInitializer as ci, MultiwrapInitializer as cj, NFTCollectionInitializer as ck, NFTDropInitializer as cl, PackInitializer as cm, SignatureDropInitializer as cn, SplitInitializer as co, TokenDropInitializer as cp, TokenInitializer as cq, VoteInitializer as cr, PREBUILT_CONTRACTS_MAP as cs, CONTRACTS_MAP as ct, getContractTypeForRemoteName as cu, getContractName as cv, PAPER_API_URL as cw, parseChainIdToPaperChain as cx, fetchRegisteredCheckoutId as cy, createCheckoutLinkIntent as cz, ClaimConditionOutputSchema as d, ChainId as e, EditionMetadataWithOwnerOutputSchema as f, EditionMetadataInputSchema as g, EditionMetadataInputOrUriSchema as h, CommonContractOutputSchema as i, CommonRoyaltySchema as j, CommonPrimarySaleSchema as k, CommonPlatformFeeSchema as l, CommonTrustedForwarderSchema as m, CommonSymbolSchema as n, CurrencySchema as o, CurrencyValueSchema as p, Signature20PayloadInput as q, Signature20PayloadOutput as r, Signature721PayloadInput as s, Signature721PayloadOutput as t, Signature1155PayloadInput as u, Signature1155PayloadInputWithTokenId as v, Signature1155PayloadOutput as w, Signature721WithQuantityInput as x, Signature721WithQuantityOutput as y, MintRequest721 as z };\n"],
  "mappings": "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AG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AAEzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AAEzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,GAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,aAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAAG,GAAG,GAAG,YAAa,IAAI,EAAE,GAAG;AACzC,gBAAI,GAAG,GAAG,GAA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",
  "names": ["prefix", "EventEmitter", "global", "self", "exports", "decode", "fetch", "i", "j", "decode", "len", "i", "len2", "Buffer", "compare", "read", "i", "byteLength", "src", "src", "Math", "undefined", "Math", "n", "H", "f", "undefined", "Math", "Math", "Math", "f2", "undefined", "CBC", "undefined", "SUB_MIX_0", "SUB_MIX_1", "SUB_MIX_2", "SUB_MIX_3", "SBOX", "f", "C", "C", "mod", "f", "mod", "MerkleTree", "hashFn", "data", "hash", "a", "b", "i", "self", "idx", "ids", "layerIndex", "mod", "mod", "util", "errorUtil", "errorMap", "ctx", "result", "objectUtil", "issues", "elements", "processed", "ZodFirstPartyTypeKind", "BN", "EventEmitter", "URL", "rnds8", "regex_default", "validate", "regex_default", "validate_default", "byteToHex", "unsafeStringify", "parse", "validate_default", "parse_default", "stringToBytes", "DNS", "URL", "v35", "parse_default", "unsafeStringify", "md5", "md5ToHexEncodedArray", "wordsToMd5", "bytesToWords", "getOutputLength", "md5ff", "md5gg", "md5hh", "md5ii", "safeAdd", "bitRotateLeft", "md5cmn", "md5_default", "v3", "v35", "md5_default", "randomUUID", "f", "ROTL", "sha1", "sha1_default", "v5", "v35", "sha1_default", "_defineProperty", "isBrowser", "fetch", "FormData", "import_cross_fetch", "BigNumberSchema", "BigNumberTransformSchema", "RawDateSchema", "ChainId", "PropertiesInput", "OptionalPropertiesInput", "EventType", "lib_exports", "lib_exports", "BigNumberSchema", "RawDateSchema", "fetch$1", "isBrowser", "lib_exports", "f", "SnapshotFormatVersion", "entry", "currencyDecimals", "_a", "f", "bs58", "src", "f", "BigNumberTransformSchema", "isBrowser", "ListingType", "ProposalState", "VoteType", "ClaimEligibility", "_a", "deepEqual", "BigNumberSchema", "paramValues"]
}

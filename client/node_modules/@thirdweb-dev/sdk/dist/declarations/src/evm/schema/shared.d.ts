import { BigNumber, CallOverrides } from "ethers";
import { z } from "zod";
export declare const BigNumberSchema: z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBigInt, z.ZodType<BigNumber, z.ZodTypeDef, BigNumber>]>, BigNumber, string | number | bigint | BigNumber>;
export declare const BigNumberishSchema: z.ZodEffects<z.ZodEffects<z.ZodUnion<[z.ZodString, z.ZodNumber, z.ZodBigInt, z.ZodType<BigNumber, z.ZodTypeDef, BigNumber>]>, BigNumber, string | number | bigint | BigNumber>, string, string | number | bigint | BigNumber>;
export declare const BigNumberTransformSchema: z.ZodEffects<z.ZodUnion<[z.ZodBigInt, z.ZodType<BigNumber, z.ZodTypeDef, BigNumber>]>, string, bigint | BigNumber>;
export declare const AddressSchema: z.ZodEffects<z.ZodString, string, string>;
export declare const RawDateSchema: z.ZodEffects<z.ZodDate, BigNumber, Date>;
/**
 * Default to now
 */
export declare const StartDateSchema: z.ZodDefault<z.ZodEffects<z.ZodDate, BigNumber, Date>>;
/**
 * Default to 10 years from now
 */
export declare const EndDateSchema: z.ZodDefault<z.ZodEffects<z.ZodDate, BigNumber, Date>>;
export declare const CallOverrideSchema: z.ZodType<CallOverrides>;
//# sourceMappingURL=shared.d.ts.map
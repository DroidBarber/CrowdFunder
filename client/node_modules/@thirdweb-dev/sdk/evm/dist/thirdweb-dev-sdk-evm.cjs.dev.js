'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var thirdwebCheckout = require('../../dist/thirdweb-checkout-46c3d0cd.cjs.dev.js');
require('zod');
require('../../dist/QueryParams-a640cb2e.cjs.dev.js');
require('bn.js');
require('ethers');
require('../../dist/defineProperty-21d22449.cjs.dev.js');
require('@thirdweb-dev/contracts-js/dist/abis/IERC165.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC1155.json');
require('tiny-invariant');
require('@thirdweb-dev/contracts-js/dist/abis/IThirdwebContract.json');
require('eventemitter3');
require('cross-fetch');
require('@thirdweb-dev/contracts-js/dist/abis/Forwarder.json');
require('@thirdweb-dev/contracts-js/dist/abis/DropERC20_V2.json');
require('@thirdweb-dev/contracts-js/dist/abis/IBurnableERC20.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDrop.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase_V1.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC20.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMintableERC20.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMulticall.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC20.json');
require('@thirdweb-dev/contracts-js/dist/abis/DropERC721_V3.json');
require('@thirdweb-dev/contracts-js/dist/abis/IBurnableERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/IClaimableERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDelayedReveal.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721Enumerable.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721Supply.json');
require('@thirdweb-dev/contracts-js/dist/abis/ILazyMint.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMintableERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC721_V1.json');
require('@thirdweb-dev/contracts-js/dist/abis/LazyMintWithTier.json');
require('@thirdweb-dev/contracts-js/dist/abis/DropERC1155_V2.json');
require('@thirdweb-dev/contracts-js/dist/abis/IBurnableERC1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IClaimableERC1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDrop1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDropSinglePhase1155_V1.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC1155Enumerable.json');
require('@thirdweb-dev/contracts-js/dist/abis/IMintableERC1155.json');
require('@thirdweb-dev/contracts-js/dist/abis/ISignatureMintERC1155.json');
require('bs58');
require('@thirdweb-dev/contracts-js/dist/abis/IERC20Metadata.json');
require('merkletreejs');
require('fast-deep-equal');
require('uuid');
require('@thirdweb-dev/contracts-js/dist/abis/IERC721Metadata.json');
require('@thirdweb-dev/contracts-js/dist/abis/IERC1155Metadata.json');
require('@thirdweb-dev/contracts-js/dist/abis/IDelayedRevealDeprecated.json');
require('@thirdweb-dev/contracts-js/dist/abis/TWFactory.json');
require('@thirdweb-dev/contracts-js/dist/abis/TWRegistry.json');
require('@thirdweb-dev/contracts-js/dist/abis/ContractPublisher.json');
require('@thirdweb-dev/storage');
require('@thirdweb-dev/contracts-js/dist/abis/ERC2771Context.json');
require('@thirdweb-dev/contracts-js/dist/abis/IAppURI.json');
require('@thirdweb-dev/contracts-js/dist/abis/IContractMetadata.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPermissions.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPermissionsEnumerable.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPlatformFee.json');
require('@thirdweb-dev/contracts-js/dist/abis/IPrimarySale.json');
require('@thirdweb-dev/contracts-js/dist/abis/IRoyalty.json');
require('@thirdweb-dev/contracts-js/dist/abis/Ownable.json');

// handle browser vs node global
globalThis.global = globalThis;

// explcitly export the *TYPES* of prebuilt contracts

exports.ALL_ROLES = thirdwebCheckout.ALL_ROLES;
exports.APPROVED_IMPLEMENTATIONS = thirdwebCheckout.APPROVED_IMPLEMENTATIONS;
exports.AbiObjectSchema = thirdwebCheckout.AbiObjectSchema;
exports.AbiSchema = thirdwebCheckout.AbiSchema;
exports.AbiTypeSchema = thirdwebCheckout.AbiTypeSchema;
exports.AdminRoleMissingError = thirdwebCheckout.AdminRoleMissingError;
exports.AssetNotFoundError = thirdwebCheckout.AssetNotFoundError;
exports.AuctionAlreadyStartedError = thirdwebCheckout.AuctionAlreadyStartedError;
exports.AuctionHasNotEndedError = thirdwebCheckout.AuctionHasNotEndedError;
exports.AuthenticationOptionsSchema = thirdwebCheckout.AuthenticationOptionsSchema;
exports.AuthenticationPayloadDataSchema = thirdwebCheckout.AuthenticationPayloadDataSchema;
exports.AuthenticationPayloadSchema = thirdwebCheckout.AuthenticationPayloadSchema;
exports.BYOCContractMetadataSchema = thirdwebCheckout.BYOCContractMetadataSchema;
exports.BaseSignaturePayloadInput = thirdwebCheckout.BaseSignaturePayloadInput;
exports.CHAIN_ID_TO_NAME = thirdwebCheckout.CHAIN_ID_TO_NAME;
exports.CHAIN_NAME_TO_ID = thirdwebCheckout.CHAIN_NAME_TO_ID;
exports.CONTRACTS_MAP = thirdwebCheckout.CONTRACTS_MAP;
exports.CONTRACT_ADDRESSES = thirdwebCheckout.CONTRACT_ADDRESSES;
Object.defineProperty(exports, 'ChainId', {
  enumerable: true,
  get: function () { return thirdwebCheckout.ChainId; }
});
exports.ChainIdToAddressSchema = thirdwebCheckout.ChainIdToAddressSchema;
exports.ClaimConditionInputArray = thirdwebCheckout.ClaimConditionInputArray;
exports.ClaimConditionInputSchema = thirdwebCheckout.ClaimConditionInputSchema;
exports.ClaimConditionMetadataSchema = thirdwebCheckout.ClaimConditionMetadataSchema;
exports.ClaimConditionOutputSchema = thirdwebCheckout.ClaimConditionOutputSchema;
Object.defineProperty(exports, 'ClaimEligibility', {
  enumerable: true,
  get: function () { return thirdwebCheckout.ClaimEligibility; }
});
exports.CommonContractOutputSchema = thirdwebCheckout.CommonContractOutputSchema;
exports.CommonContractSchema = thirdwebCheckout.CommonContractSchema;
exports.CommonPlatformFeeSchema = thirdwebCheckout.CommonPlatformFeeSchema;
exports.CommonPrimarySaleSchema = thirdwebCheckout.CommonPrimarySaleSchema;
exports.CommonRoyaltySchema = thirdwebCheckout.CommonRoyaltySchema;
exports.CommonSymbolSchema = thirdwebCheckout.CommonSymbolSchema;
exports.CommonTrustedForwarderSchema = thirdwebCheckout.CommonTrustedForwarderSchema;
exports.CompilerMetadataFetchedSchema = thirdwebCheckout.CompilerMetadataFetchedSchema;
exports.ContractDeployer = thirdwebCheckout.ContractDeployer;
exports.ContractEncoder = thirdwebCheckout.ContractEncoder;
exports.ContractEvents = thirdwebCheckout.ContractEvents;
exports.ContractInfoSchema = thirdwebCheckout.ContractInfoSchema;
exports.ContractInterceptor = thirdwebCheckout.ContractInterceptor;
exports.ContractMetadata = thirdwebCheckout.ContractMetadata;
exports.ContractOwner = thirdwebCheckout.ContractOwner;
exports.ContractPlatformFee = thirdwebCheckout.ContractPlatformFee;
exports.ContractPrimarySale = thirdwebCheckout.ContractPrimarySale;
exports.ContractPublishedMetadata = thirdwebCheckout.ContractPublishedMetadata;
exports.ContractRoles = thirdwebCheckout.ContractRoles;
exports.ContractRoyalty = thirdwebCheckout.ContractRoyalty;
exports.CurrencySchema = thirdwebCheckout.CurrencySchema;
exports.CurrencyValueSchema = thirdwebCheckout.CurrencyValueSchema;
exports.CustomContractDeploy = thirdwebCheckout.CustomContractDeploy;
exports.CustomContractInput = thirdwebCheckout.CustomContractInput;
exports.CustomContractOutput = thirdwebCheckout.CustomContractOutput;
exports.CustomContractSchema = thirdwebCheckout.CustomContractSchema;
exports.DEFAULT_IPFS_GATEWAY = thirdwebCheckout.DEFAULT_IPFS_GATEWAY;
exports.DEFAULT_RPC_URLS = thirdwebCheckout.DEFAULT_RPC_URLS;
exports.DelayedReveal = thirdwebCheckout.DelayedReveal;
exports.DropClaimConditions = thirdwebCheckout.DropClaimConditions;
exports.DropErc1155ClaimConditions = thirdwebCheckout.DropErc1155ClaimConditions;
exports.DropErc1155History = thirdwebCheckout.DropErc1155History;
exports.DuplicateFileNameError = thirdwebCheckout.DuplicateFileNameError;
exports.DuplicateLeafsError = thirdwebCheckout.DuplicateLeafsError;
exports.EditionDropInitializer = thirdwebCheckout.EditionDropInitializer;
exports.EditionInitializer = thirdwebCheckout.EditionInitializer;
exports.EditionMetadataInputOrUriSchema = thirdwebCheckout.EditionMetadataInputOrUriSchema;
exports.EditionMetadataInputSchema = thirdwebCheckout.EditionMetadataInputSchema;
exports.EditionMetadataOutputSchema = thirdwebCheckout.EditionMetadataOutputSchema;
exports.EditionMetadataWithOwnerOutputSchema = thirdwebCheckout.EditionMetadataWithOwnerOutputSchema;
exports.Erc1155 = thirdwebCheckout.Erc1155;
exports.Erc1155BatchMintable = thirdwebCheckout.Erc1155BatchMintable;
exports.Erc1155Burnable = thirdwebCheckout.Erc1155Burnable;
exports.Erc1155Enumerable = thirdwebCheckout.Erc1155Enumerable;
exports.Erc1155LazyMintable = thirdwebCheckout.Erc1155LazyMintable;
exports.Erc1155Mintable = thirdwebCheckout.Erc1155Mintable;
exports.Erc1155SignatureMintable = thirdwebCheckout.Erc1155SignatureMintable;
exports.Erc20 = thirdwebCheckout.Erc20;
exports.Erc20BatchMintable = thirdwebCheckout.Erc20BatchMintable;
exports.Erc20Burnable = thirdwebCheckout.Erc20Burnable;
exports.Erc20Mintable = thirdwebCheckout.Erc20Mintable;
exports.Erc20SignatureMintable = thirdwebCheckout.Erc20SignatureMintable;
exports.Erc721 = thirdwebCheckout.Erc721;
exports.Erc721BatchMintable = thirdwebCheckout.Erc721BatchMintable;
exports.Erc721Burnable = thirdwebCheckout.Erc721Burnable;
exports.Erc721ClaimableWithConditions = thirdwebCheckout.Erc721ClaimableWithConditions;
exports.Erc721Enumerable = thirdwebCheckout.Erc721Enumerable;
exports.Erc721LazyMintable = thirdwebCheckout.Erc721LazyMintable;
exports.Erc721Mintable = thirdwebCheckout.Erc721Mintable;
exports.Erc721Supply = thirdwebCheckout.Erc721Supply;
exports.Erc721WithQuantitySignatureMintable = thirdwebCheckout.Erc721WithQuantitySignatureMintable;
Object.defineProperty(exports, 'EventType', {
  enumerable: true,
  get: function () { return thirdwebCheckout.EventType; }
});
exports.ExtensionNotImplementedError = thirdwebCheckout.ExtensionNotImplementedError;
exports.ExtraPublishMetadataSchemaInput = thirdwebCheckout.ExtraPublishMetadataSchemaInput;
exports.ExtraPublishMetadataSchemaOutput = thirdwebCheckout.ExtraPublishMetadataSchemaOutput;
exports.FactoryDeploymentSchema = thirdwebCheckout.FactoryDeploymentSchema;
exports.FetchError = thirdwebCheckout.FetchError;
exports.FileNameMissingError = thirdwebCheckout.FileNameMissingError;
exports.FullPublishMetadataSchemaInput = thirdwebCheckout.FullPublishMetadataSchemaInput;
exports.FullPublishMetadataSchemaOutput = thirdwebCheckout.FullPublishMetadataSchemaOutput;
exports.FunctionDeprecatedError = thirdwebCheckout.FunctionDeprecatedError;
exports.GasCostEstimator = thirdwebCheckout.GasCostEstimator;
exports.GenericRequest = thirdwebCheckout.GenericRequest;
exports.InterfaceId_IERC1155 = thirdwebCheckout.InterfaceId_IERC1155;
exports.InterfaceId_IERC721 = thirdwebCheckout.InterfaceId_IERC721;
exports.InvalidAddressError = thirdwebCheckout.InvalidAddressError;
exports.ListingNotFoundError = thirdwebCheckout.ListingNotFoundError;
Object.defineProperty(exports, 'ListingType', {
  enumerable: true,
  get: function () { return thirdwebCheckout.ListingType; }
});
exports.LoginOptionsSchema = thirdwebCheckout.LoginOptionsSchema;
exports.LoginPayloadDataSchema = thirdwebCheckout.LoginPayloadDataSchema;
exports.LoginPayloadSchema = thirdwebCheckout.LoginPayloadSchema;
exports.MarketplaceAuction = thirdwebCheckout.MarketplaceAuction;
exports.MarketplaceDirect = thirdwebCheckout.MarketplaceDirect;
exports.MarketplaceInitializer = thirdwebCheckout.MarketplaceInitializer;
exports.MerkleSchema = thirdwebCheckout.MerkleSchema;
exports.MintRequest1155 = thirdwebCheckout.MintRequest1155;
exports.MintRequest20 = thirdwebCheckout.MintRequest20;
exports.MintRequest721 = thirdwebCheckout.MintRequest721;
exports.MintRequest721withQuantity = thirdwebCheckout.MintRequest721withQuantity;
exports.MissingOwnerRoleError = thirdwebCheckout.MissingOwnerRoleError;
exports.MissingRoleError = thirdwebCheckout.MissingRoleError;
exports.MultiwrapInitializer = thirdwebCheckout.MultiwrapInitializer;
exports.NATIVE_TOKENS = thirdwebCheckout.NATIVE_TOKENS;
exports.NATIVE_TOKEN_ADDRESS = thirdwebCheckout.NATIVE_TOKEN_ADDRESS;
exports.NFTCollectionInitializer = thirdwebCheckout.NFTCollectionInitializer;
exports.NFTDropInitializer = thirdwebCheckout.NFTDropInitializer;
exports.NotEnoughTokensError = thirdwebCheckout.NotEnoughTokensError;
exports.NotFoundError = thirdwebCheckout.NotFoundError;
exports.OZ_DEFENDER_FORWARDER_ADDRESS = thirdwebCheckout.OZ_DEFENDER_FORWARDER_ADDRESS;
exports.OptionalPropertiesInput = thirdwebCheckout.OptionalPropertiesInput;
exports.PAPER_API_URL = thirdwebCheckout.PAPER_API_URL;
exports.PREBUILT_CONTRACTS_MAP = thirdwebCheckout.PREBUILT_CONTRACTS_MAP;
exports.PackInitializer = thirdwebCheckout.PackInitializer;
exports.PaperCheckout = thirdwebCheckout.PaperCheckout;
exports.PartialClaimConditionInputSchema = thirdwebCheckout.PartialClaimConditionInputSchema;
exports.PreDeployMetadata = thirdwebCheckout.PreDeployMetadata;
exports.PreDeployMetadataFetchedSchema = thirdwebCheckout.PreDeployMetadataFetchedSchema;
exports.ProfileSchemaInput = thirdwebCheckout.ProfileSchemaInput;
exports.ProfileSchemaOutput = thirdwebCheckout.ProfileSchemaOutput;
Object.defineProperty(exports, 'ProposalState', {
  enumerable: true,
  get: function () { return thirdwebCheckout.ProposalState; }
});
exports.PublishedContractSchema = thirdwebCheckout.PublishedContractSchema;
exports.QuantityAboveLimitError = thirdwebCheckout.QuantityAboveLimitError;
exports.RestrictedTransferError = thirdwebCheckout.RestrictedTransferError;
exports.SUPPORTED_CHAIN_IDS = thirdwebCheckout.SUPPORTED_CHAIN_IDS;
exports.Signature1155PayloadInput = thirdwebCheckout.Signature1155PayloadInput;
exports.Signature1155PayloadInputWithTokenId = thirdwebCheckout.Signature1155PayloadInputWithTokenId;
exports.Signature1155PayloadOutput = thirdwebCheckout.Signature1155PayloadOutput;
exports.Signature20PayloadInput = thirdwebCheckout.Signature20PayloadInput;
exports.Signature20PayloadOutput = thirdwebCheckout.Signature20PayloadOutput;
exports.Signature721PayloadInput = thirdwebCheckout.Signature721PayloadInput;
exports.Signature721PayloadOutput = thirdwebCheckout.Signature721PayloadOutput;
exports.Signature721WithQuantityInput = thirdwebCheckout.Signature721WithQuantityInput;
exports.Signature721WithQuantityOutput = thirdwebCheckout.Signature721WithQuantityOutput;
exports.SignatureDropInitializer = thirdwebCheckout.SignatureDropInitializer;
exports.SnapshotEntryInput = thirdwebCheckout.SnapshotEntryInput;
exports.SnapshotEntryWithProofSchema = thirdwebCheckout.SnapshotEntryWithProofSchema;
exports.SnapshotInfoSchema = thirdwebCheckout.SnapshotInfoSchema;
exports.SnapshotInputSchema = thirdwebCheckout.SnapshotInputSchema;
exports.SnapshotSchema = thirdwebCheckout.SnapshotSchema;
exports.SplitInitializer = thirdwebCheckout.SplitInitializer;
exports.StandardErc1155 = thirdwebCheckout.StandardErc1155;
exports.StandardErc20 = thirdwebCheckout.StandardErc20;
exports.StandardErc721 = thirdwebCheckout.StandardErc721;
exports.ThirdwebSDK = thirdwebCheckout.ThirdwebSDK;
exports.TokenDropInitializer = thirdwebCheckout.TokenDropInitializer;
exports.TokenERC20History = thirdwebCheckout.TokenERC20History;
exports.TokenInitializer = thirdwebCheckout.TokenInitializer;
exports.TokenMintInputSchema = thirdwebCheckout.TokenMintInputSchema;
exports.TransactionError = thirdwebCheckout.TransactionError;
exports.TransactionTask = thirdwebCheckout.TransactionTask;
exports.UploadError = thirdwebCheckout.UploadError;
exports.UserWallet = thirdwebCheckout.UserWallet;
exports.VerifyOptionsSchema = thirdwebCheckout.VerifyOptionsSchema;
exports.VoteInitializer = thirdwebCheckout.VoteInitializer;
Object.defineProperty(exports, 'VoteType', {
  enumerable: true,
  get: function () { return thirdwebCheckout.VoteType; }
});
exports.WalletAuthenticator = thirdwebCheckout.WalletAuthenticator;
exports.WrongListingTypeError = thirdwebCheckout.WrongListingTypeError;
exports.assertEnabled = thirdwebCheckout.assertEnabled;
exports.convertToReadableQuantity = thirdwebCheckout.convertToReadableQuantity;
exports.convertToTWError = thirdwebCheckout.convertToTWError;
exports.createCheckoutLinkIntent = thirdwebCheckout.createCheckoutLinkIntent;
exports.createSnapshot = thirdwebCheckout.createSnapshot;
exports.detectContractFeature = thirdwebCheckout.detectContractFeature;
exports.detectFeatures = thirdwebCheckout.detectFeatures;
exports.extractConstructorParams = thirdwebCheckout.extractConstructorParams;
exports.extractConstructorParamsFromAbi = thirdwebCheckout.extractConstructorParamsFromAbi;
exports.extractEventsFromAbi = thirdwebCheckout.extractEventsFromAbi;
exports.extractFunctionParamsFromAbi = thirdwebCheckout.extractFunctionParamsFromAbi;
exports.extractFunctions = thirdwebCheckout.extractFunctions;
exports.extractFunctionsFromAbi = thirdwebCheckout.extractFunctionsFromAbi;
exports.extractIPFSHashFromBytecode = thirdwebCheckout.extractIPFSHashFromBytecode;
exports.extractMinimalProxyImplementationAddress = thirdwebCheckout.extractMinimalProxyImplementationAddress;
exports.fetchContractMetadata = thirdwebCheckout.fetchContractMetadata;
exports.fetchContractMetadataFromAddress = thirdwebCheckout.fetchContractMetadataFromAddress;
exports.fetchCurrencyMetadata = thirdwebCheckout.fetchCurrencyMetadata;
exports.fetchCurrencyValue = thirdwebCheckout.fetchCurrencyValue;
exports.fetchExtendedReleaseMetadata = thirdwebCheckout.fetchExtendedReleaseMetadata;
exports.fetchPreDeployMetadata = thirdwebCheckout.fetchPreDeployMetadata;
exports.fetchRawPredeployMetadata = thirdwebCheckout.fetchRawPredeployMetadata;
exports.fetchRegisteredCheckoutId = thirdwebCheckout.fetchRegisteredCheckoutId;
exports.fetchSourceFilesFromMetadata = thirdwebCheckout.fetchSourceFilesFromMetadata;
exports.getAllDetectedFeatureNames = thirdwebCheckout.getAllDetectedFeatureNames;
exports.getAllDetectedFeatures = thirdwebCheckout.getAllDetectedFeatures;
exports.getApprovedImplementation = thirdwebCheckout.getApprovedImplementation;
exports.getContractAddressByChainId = thirdwebCheckout.getContractAddressByChainId;
exports.getContractName = thirdwebCheckout.getContractName;
exports.getContractPublisherAddress = thirdwebCheckout.getContractPublisherAddress;
exports.getContractTypeForRemoteName = thirdwebCheckout.getContractTypeForRemoteName;
exports.getDefaultTrustedForwarders = thirdwebCheckout.getDefaultTrustedForwarders;
exports.getNativeTokenByChainId = thirdwebCheckout.getNativeTokenByChainId;
exports.getProviderForNetwork = thirdwebCheckout.getProviderForNetwork;
exports.getReadOnlyProvider = thirdwebCheckout.getReadOnlyProvider;
exports.getRoleHash = thirdwebCheckout.getRoleHash;
exports.hasFunction = thirdwebCheckout.hasFunction;
exports.hasMatchingAbi = thirdwebCheckout.hasMatchingAbi;
exports.includesErrorMessage = thirdwebCheckout.includesErrorMessage;
exports.isDowngradeVersion = thirdwebCheckout.isDowngradeVersion;
exports.isFeatureEnabled = thirdwebCheckout.isFeatureEnabled;
exports.isIncrementalVersion = thirdwebCheckout.isIncrementalVersion;
exports.matchesPrebuiltAbi = thirdwebCheckout.matchesPrebuiltAbi;
exports.normalizePriceValue = thirdwebCheckout.normalizePriceValue;
exports.parseChainIdToPaperChain = thirdwebCheckout.parseChainIdToPaperChain;
exports.resolveContractUriFromAddress = thirdwebCheckout.resolveContractUriFromAddress;
exports.toSemver = thirdwebCheckout.toSemver;
